{"version": "0.9.5", "fields": ["qualname", "fullname", "doc"], "ref": "fullname", "documentStore": {"docs": {"pyflarum": {"fullname": "pyflarum", "modulename": "pyflarum", "qualname": "", "type": "module", "doc": "<h1 id=\"pyflarum\">\ud83d\udc0d pyFlarum</h1>\n\n<p><img src=\"https://badge.fury.io/py/pyFlarum.svg\" alt=\"PyPI version\" /> <img src=\"https://img.shields.io/github/issues/CWKevo/pyflarum?color=forestgreen&amp;label=Issues\" alt=\"GitHub issues\" /> <img src=\"https://img.shields.io/github/license/CWKevo/pyFlarum?color=yellow&amp;label=License\" alt=\"GitHub\" /></p>\n\n<p>Somewhere at the beginning of this year, I have started a concept to build a Python Flarum API client. The goal was to provide everyone an easy and extensible system to interact with Flarum's public API and perform user-related tasks.</p>\n\n<p>Later, I began to work on rebasing FreeFlarum's code, so this idea was left in the dust. But after that was done, I revisited this project and started over now that I had learned more about Python.</p>\n\n<p>Thus, I present to you my first (real) Python package - <a href=\"https://pypi.org/project/pyFlarum\">pyFlarum</a>.</p>\n\n<h2 id=\"useful-links\">\ud83d\udd17 Useful links:</h2>\n\n<ul>\n<li><a href=\"https://github.com/CWKevo/pyflarum/releases\">\u2757 Changelog</a></li>\n<li><a href=\"https://discuss.flarum.org/d/28221\">\ud83d\udde3 Discuss</a></li>\n<li><a href=\"https://cwkevo.github.io/pyflarum/docs/\">\ud83d\udcda Documentation</a></li>\n<li><a href=\"https://github.com/CWKevo/pyflarum\">\ud83d\udc68\u200d\ud83d\udcbb GitHub repository</a></li>\n<li><a href=\"https://pypi.org/project/pyFlarum\">\ud83d\udc0d PyPi link</a></li>\n</ul>\n\n<h3 id=\"features\">\ud83d\udc31\u200d\ud83c\udfcd Features:</h3>\n\n<ul>\n<li>Complete support for creating, retrieving, updating and deleting data.</li>\n<li>(Almost) everything is object-oriented, with docstrings (still needs to be done) and examples to help you code faster.</li>\n<li>Very extensible, thanks to custom extension &amp; dependency system. The most common Flarum extensions are included out of the box, and more are still on the way. Read more about the extension system <a href=\"https://cwkevo.github.io/pyflarum/docs/#extensions\">here</a>.</li>\n<li>The data is fetched and stored as JSON, but the keys can be retrieved by using class properties, which also handles type conversions.\n<ul>\n<li>This means that instead of using <code>discussion['data']['attributes']['title']</code>, it is as simple as <code>discussion.title</code>.</li>\n</ul></li>\n<li>Flarum's JSON API works in saving mode. What I mean is that when you fetch a discussion from notification, not all of the discussion's data is present in the JSON. On the other hand, obtaining the discussion directly by it's ID results in a much detailed JSON.\n<ul>\n<li>To save you headaches, pyFlarum obviously handles this too and all of the objects have different hierarchy and inheritance. Example: <code>DiscussionFromNotification</code> is parent for <code>DiscussionFromBulk</code> and that's parent for <code>Discussion</code>, where <code>Discussion</code> object is discussion obtained directly from API, and therefore logically contains all properties of the previous objects (and JSON). This is all nicely rendered thanks to your editor's linting and type hints, so you won't make a mistake by accessing unexisting properties from parent objects. More about pyFlarum's inheritance system and it's flaws can be found <a href=\"https://cwkevo.github.io/pyflarum/docs/#class-inheritance\">here</a>.</li>\n</ul></li>\n</ul>\n\n<h2 id=\"quickstart\">\ud83d\ude80 Quickstart:</h2>\n\n<h3 id=\"installation\">\ud83d\udcc0 Installation:</h3>\n\n<p>This package requires Python 3.6+ and the <a href=\"https://pypi.org/project/requests\">requests</a> library to be installed. Yep, that's the only dependency. Should there be more over time, you can install them all at once by using this command (but I assume that you're already familiar with all of this, so feel free to skip this part):</p>\n\n<div class=\"codehilite\"><pre><span></span><code>pip install -r requirements.txt\n<span class=\"c1\"># or:</span>\npython -m pip install -r requirements.txt\n</code></pre></div>\n\n<p>Installing is easy with:</p>\n\n<div class=\"codehilite\"><pre><span></span><code>pip install pyflarum -U\n<span class=\"c1\"># or:</span>\npython -m pip install pyflarum -U\n</code></pre></div>\n\n<p>Updating:</p>\n\n<div class=\"codehilite\"><pre><span></span><code>python -m pip install pyflarum -U --upgrade\n<span class=\"c1\"># or:</span>\npip install pyflarum --upgrade -U\n</code></pre></div>\n\n<p>Uninstalling:</p>\n\n<div class=\"codehilite\"><pre><span></span><code>python -m pip uninstall pyflarum\n<span class=\"c1\"># or:</span>\npip uninstall pyflarum\n</code></pre></div>\n\n<h3 id=\"quickstart-example\">\ud83d\udcdc Quickstart Example:</h3>\n\n<p>How easy is it to fetch a specific discussion and print it's title?</p>\n\n<p>The answer - luckily, it's actually quite easy:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n\n<span class=\"c1\"># Here, we initialize our `FlarumUser` object. You can&#39;t do anything without this first:</span>\n<span class=\"n\">USER</span> <span class=\"o\">=</span> <span class=\"n\">FlarumUser</span><span class=\"p\">(</span><span class=\"n\">forum_url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://discuss.flarum.org/&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Now, let&#39;s get the discussion:</span>\n<span class=\"n\">discussion</span> <span class=\"o\">=</span> <span class=\"n\">USER</span><span class=\"o\">.</span><span class=\"n\">get_discussion_by_id</span><span class=\"p\">(</span><span class=\"mi\">28221</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">discussion</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>That's just amazing 4 lines of code (without comments and newlines)!</p>\n\n<h3 id=\"whats-next\">\u27a1 What's next?</h3>\n\n<p>Check the <a href=\"https://cwkevo.github.io/pyflarum/docs/\">documentation</a> to dive deep into the concepts of this project and learn more! </p>\n\n<p>I will now take a small break from maintaining this - I still want to do a bit more projects this summer now that I have some time. However, I am open for feature requests and bug reports at the <a href=\"https://github.com/CWKevo/pyflarum/issues\">GitHub repository</a>.</p>\n\n<p>The documentation is still not finished yet, but that can wait for now until some people show some interest in this. My honest view is that I do not want to work on something that people will not enjoy, and I will likely require some motivation in order to keep this project alive. If no interest is shown, I will occassionaly push bugfixes and features for my personal use over time. I don't actually expect much people to use this, but I'd be surprised and happy if you would!</p>\n\n<h2 id=\"examples\">\ud83d\udcdc Examples:</h2>\n\n<p>I'll show you some more examples before we dive deep into the details at the <a href=\"https://cwkevo.github.io/pyflarum/docs/\">documentation</a>. All of the following snippets assume that you already have your <code>USER</code> object initialized.</p>\n\n<p>Get all discussions from the front page (<code>/api/discussions</code>) and print the title &amp; URL:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">discussion</span> <span class=\"ow\">in</span> <span class=\"n\">USER</span><span class=\"o\">.</span><span class=\"n\">all_discussions</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">discussion</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"n\">discussion</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>Obtain some user:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">USER</span><span class=\"o\">.</span><span class=\"n\">get_user_by_id</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">group</span> <span class=\"ow\">in</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">get_groups</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">group</span><span class=\"o\">.</span><span class=\"n\">nameSingular</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>You can find more examples in the sections below, or browse the <a href=\"https://github.com/CWKevo/pyflarum/tree/main/tests\">tests</a> directory of the source code for full examples of various tasks. These will be regularly updated, <a href=\"#\u27a1-whats-next\">should this stay maintained</a>, to ensure that old stuff works and new features behave correctly too.</p>\n\n<h2 id=\"parameters\">\ud83d\udce1 Parameters</h2>\n\n<p>By default, pyFlarum works by just knowing the forum's URL. But there are more options to choose from. Let's go through the basic ones:</p>\n\n<h3 id=\"authentication\">\ud83d\udd10 Authentication</h3>\n\n<p>In order to perform user related actions, you must be logged in. This is easier done than said (pun unintended):</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">USER</span> <span class=\"o\">=</span> <span class=\"n\">FlarumUser</span><span class=\"p\">(</span><span class=\"n\">forum_url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://discuss.flarum.org&quot;</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s2\">&quot;yourusername&quot;</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">&quot;#TopSecret123&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>...just like that! However, I <strong>strongly</strong> recommend you to store your user's credentials in a <code>.env</code> file and load it by using a library such as <a href=\"https://pypi.org/project/python-dotenv\">python-dotenv</a>:</p>\n\n<p><em>.env:</em></p>\n\n<pre><code>username=\"foo\"\npassword=\"hahayouexpectedbarbutno\"\n</code></pre>\n\n<p><em>script.py:</em></p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dotenv</span> <span class=\"kn\">import</span> <span class=\"n\">load_dotenv</span>\n<span class=\"n\">load_dotenv</span><span class=\"p\">()</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n<span class=\"n\">USER</span> <span class=\"o\">=</span> <span class=\"n\">FlarumUser</span><span class=\"p\">(</span>\n    <span class=\"n\">forum_url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://discuss.flarum.org&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">&quot;username&quot;</span><span class=\"p\">],</span>\n    <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">&quot;password&quot;</span><span class=\"p\">]</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n\n<blockquote>\n  <p>Don't forget to exclude <code>.env</code> in your <code>.gitignore</code>, if you're using Git (in other words, don't be like me once)!</p>\n</blockquote>\n\n<h3 id=\"cached-sessions\">\ud83d\udcda Cached sessions:</h3>\n\n<p>By default, pyFlarum uses the standard <code>Session</code> object from Python's <a href=\"https://pypi.org/project/requests\">requests</a>. However, it is possible to pass your own <code>Session</code> object.</p>\n\n<p>A practical use case would be to use <a href=\"https://pypi.org/projects/requests_cache\">requests_cache's</a> <code>CachedSession</code> object instead:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">requests_cache</span> <span class=\"kn\">import</span> <span class=\"n\">CachedSession</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n<span class=\"n\">USER</span> <span class=\"o\">=</span> <span class=\"n\">FlarumUser</span><span class=\"p\">(</span>\n    <span class=\"n\">forum_url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://discuss.flarum.org&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">session_object</span><span class=\"o\">=</span><span class=\"n\">CachedSession</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n\n<p>The cache really makes a difference and can speed requests by up to 10x! But I decided to make it optional, as it is not ideal for frequent API calls (e. g. watching for notifications/mentions to respond to user's commands - yes, that's possible with <a href=\"https://github.com/CWKevo/pyflarum/blob/main/tests/watch_for_commands.py\">the commands and watch extensions</a>)</p>\n\n<h2 id=\"extensions\">\ud83e\udde9 Extensions</h2>\n\n<p>Similarly to <a href=\"https://discuss.flarum.org/t/extensions\">Flarum</a>, pyFlarum also works around the concept of <a href=\"https://cwkevo.github.io/pyflarum/docs/extensions/index.html\">extensions</a>.</p>\n\n<p>These can be imported and included in your <code>FlarumUser</code> object as a list of extension classes:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.flarum.core</span> <span class=\"kn\">import</span> <span class=\"n\">Flarum_Likes</span>\n\n<span class=\"n\">USER</span> <span class=\"o\">=</span> <span class=\"n\">FlarumUser</span><span class=\"p\">(</span>\n    <span class=\"n\">forum_url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://discuss.flarum.org&quot;</span>\n    <span class=\"n\">extensions</span><span class=\"o\">=</span><span class=\"p\">[</span>\n      <span class=\"n\">Flarum_Likes</span><span class=\"o\">.</span><span class=\"n\">LikesExtension</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># ...</span>\n</code></pre></div>\n\n<h3 id=\"dealing-with-type-hints\">\ud83d\udc32 Dealing with type hints</h3>\n\n<p>I really tried to make this work, but I couldn't. In case you haven't head about them, read <a href=\"https://docs.python.org/3/library/typing.html\">this</a>. Basically, they help you read your code before it's run.</p>\n\n<p>The thing is, extensions work on principe of <a href=\"https://stackoverflow.com/questions/5626193/what-is-monkey-patching\">monkey-patching</a>. When you create a <code>FlarumUser</code> object with extensions, the mixins (classes of properties and functions) of that extensions are copied to the main <code>FlarumUser</code> class (or others). And there is no way for your editor to handle this (or at least, I haven't found a way around this - if you do, that would be amazing).</p>\n\n<p>The only option for now is to type hint the mixins directly, to make your editor recognize also the functions and properties from the extension:</p>\n\n<p>Example:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.flarum.core</span> <span class=\"kn\">import</span> <span class=\"n\">Flarum_Approval</span>\n\n<span class=\"n\">USER</span> <span class=\"o\">=</span> <span class=\"n\">FlarumUser</span><span class=\"p\">(</span>\n    <span class=\"n\">forum_url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://discuss.flarum.org&quot;</span>\n    <span class=\"n\">extensions</span><span class=\"o\">=</span><span class=\"p\">[</span>\n      <span class=\"n\">Flarum_Approval</span><span class=\"o\">.</span><span class=\"n\">ApprovalExtension</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">discussion</span> <span class=\"o\">=</span> <span class=\"n\">USER</span><span class=\"o\">.</span><span class=\"n\">get_discussion_by_id</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">discussion</span><span class=\"o\">.</span><span class=\"n\">isApproved</span> <span class=\"c1\"># &lt;- no syntax highlighting</span>\n</code></pre></div>\n\n<p>...but specifying that the <code>discussion</code> should contain also the properties from the <code>Flarum_Approval.ApprovalDiscussionFromNotificationMixin</code> works:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">discussion</span> <span class=\"o\">=</span> <span class=\"n\">USER</span><span class=\"o\">.</span><span class=\"n\">get_discussion_by_id</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"c1\"># type: Flarum_Approval.ApprovalDiscussionFromNotificationMixin</span>\n<span class=\"n\">discussion</span><span class=\"o\">.</span><span class=\"n\">isApproved</span> <span class=\"c1\"># &lt;- syntax highlighting works</span>\n</code></pre></div>\n\n<blockquote>\n  <p><strong>Note:</strong> The <code>Flarum_Approval</code> extension contains only one mixin for discussions: <code>Flarum_Approval.ApprovalDiscussionFromNotificationMixin</code>. Since this is a parent of <code>Discussion</code> because of the <a href=\"#\u2b06-class-inheritance\">inheritance</a>, you can type-hint just that for it to work (no <code>Union</code> from <a href=\"https://docs.python.org/3/library/typing.html\">typing</a> is required). You can check the <a href=\"https://cwkevo.github.io/pyflarum/docs/extensions\">extensions documentation</a> for list of available mixins and extensions, or the <a href=\"https://github.com/CWKevo/pyflarum/tree/main/pyflarum/extensions\">source code</a>.</p>\n</blockquote>\n\n<h2 id=\"class-inheritance\">\u2b06 Class Inheritance</h2>\n\n<p>pyFlarum's inhertitance needed to be wrapped around Flarum's API, so that these two can work together. To understand this system, we need to first understand how Flarum's API works:</p>\n\n<p>Normally, there is an API route for multiple (bulk) object's data. You can further specify the ID to obtain the specific object's data. Let's say we want to fetch all discussions from the front page. We could do that by visiting <code>/api/discussions</code> of your favourite Flarum forum. Here, we see a bunch of JSON data of discussions. We can pick one, and then visit <code>/api/discussions/:discussion_id</code> to fetch specific discussion's JSON. By comparing the data from the bulk route (<code>/api/discussions</code>) and specific route (<code>/api/discussions/:discussion_id</code>), we can see that the specific route contains more detailed JSON information of the discussion. Specifically, this means that discussion from bulk contains just data for the first post, whereas the specific route contains all posts (for example).</p>\n\n<p>Usually, Flarum inherits the more detailed data's properties from the previous less detailed ones. This means that discussion from bulk might contain ID, type and a few attributes, such as the title of the discussion. So, the specific discussion contains all the data that discussion from bulk contains (ID, type, title...) + all the posts (which too only get referenced when there are many of them).</p>\n\n<p>Luckily, I have put my best efforts to make pyFlarum handle this for you. That's why there are multiple objects for each of Flarum's thingies. Here's an example inheritance structure for posts:</p>\n\n<pre><code>        (contains)                (is parent for)\nPosts       &gt;&gt;       PostFromBulk       -&gt;       Post\n</code></pre>\n\n<p>Or (more complicated) notifications:</p>\n\n<pre><code>                (contains)                  (contains)                        (inherits from)\nNotifications       &gt;&gt;       Notification       &gt;&gt;       PostFromNotification       &lt;-        PostFromDiscussion\n                                                                  |\n                                                                  \\_       PostFromBulk       -&gt;       Post\n                                                            (is parent for)             (is parent for)\n</code></pre>\n\n<h3 id=\"example\">\ud83d\udcdc Example:</h3>\n\n<p>Fetch all discussions from the front page:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">discussion</span> <span class=\"ow\">in</span> <span class=\"n\">USER</span><span class=\"o\">.</span><span class=\"n\">all_discussions</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">discussion</span><span class=\"p\">))</span> <span class=\"c1\"># &lt;class &#39;DiscussionFromBulk&#39;&gt;</span>\n</code></pre></div>\n\n<p>Note how the type is <code>DiscussionFromBulk</code> instead of <code>Discussion</code>? That's because <code>DiscussionFromBulk</code> doesn't contain full data like <code>Discussion</code> does.</p>\n\n<p>The data gets limited for Flarum's purposes. For example, you don't need all posts in order to render the discussions at the front page - so Flarum omits the posts from the data. You need to make additional API call to fetch the full data (with posts):</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Wrong:</span>\n<span class=\"k\">for</span> <span class=\"n\">discussion</span> <span class=\"ow\">in</span> <span class=\"n\">USER</span><span class=\"o\">.</span><span class=\"n\">all_discussions</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">posts</span> <span class=\"ow\">in</span> <span class=\"n\">discussion</span><span class=\"o\">.</span><span class=\"n\">get_posts</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Correct:</span>\n<span class=\"k\">for</span> <span class=\"n\">discussion</span> <span class=\"ow\">in</span> <span class=\"n\">USER</span><span class=\"o\">.</span><span class=\"n\">all_discussions</span><span class=\"p\">():</span>\n    <span class=\"n\">full_discussion</span> <span class=\"o\">=</span> <span class=\"n\">discussion</span><span class=\"o\">.</span><span class=\"n\">get_full_data</span><span class=\"p\">()</span> <span class=\"c1\"># makes an additional API call to fetch `/api/discussions/:discussion_id`</span>\n    <span class=\"k\">for</span> <span class=\"n\">posts</span> <span class=\"ow\">in</span> <span class=\"n\">full_discussion</span><span class=\"o\">.</span><span class=\"n\">get_posts</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"included-data\">\ud83d\udc40 Included data</h3>\n\n<p>That was the easy part of the inheritance system. It gets more complicated with the <code>included</code> things.</p>\n\n<p>Each API call might contain an <code>included</code> section with more detailed data for referenced objects.</p>\n\n<p>Let's examine a wild JSON spotted in the real world:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;data&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;discussions&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;attributes&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;title&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;An example title&quot;</span>\n      <span class=\"p\">},</span>\n      <span class=\"nt\">&quot;relationships&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;firstPost&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"nt\">&quot;data&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;posts&quot;</span><span class=\"p\">,</span>\n            <span class=\"nt\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1&quot;</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">&quot;included&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;posts&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;attributes&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;content&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Bla bla bla&quot;</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>This is a simplified syntax of how might a JSON for <code>/api/discussions</code> look like. We can see a discussion with ID <code>1</code>, that has a special <code>pyflarum.flarum.core.discussions.DiscussionFromBulk.relationships</code> array (or dictionary, if you're a Pythonista). This array contains a reference for <code>firstPost</code> (unsurprisingly, that's the first post of the discussion). The full data is in the <code>pyflarum.flarum.core.discussions.Discussions.included</code> section of the JSON, where we indeed can see a post object with the corresponding ID of <code>1</code>.</p>\n\n<p>Again, I put together what I could to make this work for you instead of you working for it. Whenever pyFlarum makes an API call to a top-level route such as <code>/api/discussions</code>, obtaining a discussion from that will include the parent <code>pyflarum.flarum.core.discussions.Discussions.included</code> in that discussion as well. So now, whenever you would like to obtain a post from that discussion, the reference for that post is found in the <code>relationships</code> array and then it gets recursively matched to the resulting <code>pyflarum.flarum.core.posts.PostFromDiscussion</code> in the <code>pyflarum.flarum.core.discussions.Discussions.included</code> section. See <a href=\"https://cwkevo.github.io/pyflarum/docs/#parent-included\">parent included</a> below.</p>\n\n<p>From Flarum's side, this was done to eliminate frequent API calls and to save on the JSON's size. Including the full data would possibly make the JSON contain duplicates, if for example, all posts were made by the same user. This way, the user is included only once in the <code>pyflarum.flarum.core.discussions.Discussions.included</code> section, and we saved some bytes to transfer. People using paid mobile networks will be grateful to save some cents.</p>\n\n<p>You might be asking, why keep tossing the parent <code>included</code> into every object? Well, from pyFlarum's side this was done to save on the amount of requests and to speed the package up. Of course, instead of looking things in <code>included</code>, you could make a direct API call to retrieve the full data of the object you want. But this would slow things down drastically, when you're operating with large amounts of data at the same time (e. g. fetching all discussions and posts - you'd need to make separate API call for every post in order to obtain the data - this way, everything's already in <code>included</code>).</p>\n\n<p>This is very complicated, and I can't explain things, so it might be worthy checking the source code, if you care to learn more about how pyFlarum handles this.</p>\n\n<h3 id=\"parent-included\">\ud83d\udcda Parent included</h3>\n\n<p>It is a JSON data of the parent's included JSON data.</p>\n\n<blockquote>\n  <p>I put together what I could to make this work for you instead of you working for it. Whenever pyFlarum makes an API call to a top-level route such as <code>/api/discussions</code>, obtaining a discussion from that will include the parent <code>pyflarum.flarum.core.discussions.Discussions.included</code> in that discussion as well. So now, whenever you would like to obtain a post from that discussion, the reference for that post is found in the <code>relationships</code> array and then it gets recursively matched to the resulting <code>pyflarum.flarum.core.posts.PostFromDiscussion</code> in the <code>pyflarum.flarum.core.discussions.Discussions.included</code> section.</p>\n</blockquote>\n\n<h4 id=\"long-explanation-for-nerds-i-am-not-good-at-explaining\">Long explanation for nerds (I am not good at explaining):</h4>\n\n<p>This is because of the way <a href=\"https://cwkevo.github.io/pyflarum/docs/#included-data\">Flarum's includes</a> work.\nWhen you run a function such as <code>pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author()</code>, the data for the author is not directly in the <code>pyflarum.flarum.core.discussions.DiscussionFromBulk</code>'s JSON.\nThis means that pyFlarum would have to make a new API call everytime you run <code>pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author()</code>, and you'd see 429 sooner than usual.\nInstead, the data is already in the parent's (<code>pyflarum.flarum.core.discussions.Discussions.included</code>) data. And since that gets passed to this object too, pyFlarum doesn't need to\nmake any more API calls - instead, it just picks the right author from that data.</p>\n\n<p>You can think of this as a cache in a nutshell, if it's unclear for you. And if things are still confusing you, you just don't need to worry about this\nbecause pyFlarum handles everything for you in the background. Unless you are forging this object's JSON data by yourself,\nand you don't pass the parent's included - this would mean that all functions that rely on that will break. I have never spotted any weird stuff by normal\nusage of pyFlarum during testing, but there's perhaps a very tiny chance that this system can possibly bug out.</p>\n"}, "pyflarum.custom_types": {"fullname": "pyflarum.custom_types", "modulename": "pyflarum.custom_types", "qualname": "", "type": "module", "doc": "<p>Custom types for pyFlarum.</p>\n\n<h3 id=\"types\">Types:</h3>\n\n<ul>\n<li><code>AnyUser</code> - <code>User</code> | <code>UserFromBulk</code> | <code>UserFromNotification</code></li>\n<li><code>AnyDiscussion</code> - <code>Discussion</code> | <code>DiscussionFromBulk</code> | <code>DiscussionFromNotification</code></li>\n<li><code>AnyPost</code> - <code>Post</code> | <code>PostFromBulk</code> | <code>PostFromNotification</code></li>\n</ul>\n"}, "pyflarum.datetime_conversions": {"fullname": "pyflarum.datetime_conversions", "modulename": "pyflarum.datetime_conversions", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.datetime_conversions.flarum_to_datetime": {"fullname": "pyflarum.datetime_conversions.flarum_to_datetime", "modulename": "pyflarum.datetime_conversions", "qualname": "flarum_to_datetime", "type": "function", "doc": "<p>Converts Flarum's datetime string to Python's datetime object.\nDoesn't convert if the parameter is already a datetime object.</p>\n\n<p>Flarum's datetime format is <code>%Y-%m-%dT%H:%M:%S%z</code></p>\n", "parameters": ["flarum_dt"], "funcdef": "def"}, "pyflarum.datetime_conversions.datetime_to_flarum": {"fullname": "pyflarum.datetime_conversions.datetime_to_flarum", "modulename": "pyflarum.datetime_conversions", "qualname": "datetime_to_flarum", "type": "function", "doc": "<p>Converts Python's datetime object to Flarum's datetime string.\nDoesn't convert if the parameter is already a string.</p>\n\n<p>Flarum's datetime format is <code>%Y-%m-%dT%H:%M:%S%z</code></p>\n", "parameters": ["dt"], "funcdef": "def"}, "pyflarum.error_handler": {"fullname": "pyflarum.error_handler", "modulename": "pyflarum.error_handler", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.error_handler.FlarumError": {"fullname": "pyflarum.error_handler.FlarumError", "modulename": "pyflarum.error_handler", "qualname": "FlarumError", "type": "class", "doc": "<p>Generic class for all Flarum related errors.</p>\n"}, "pyflarum.error_handler.FlarumError.__init__": {"fullname": "pyflarum.error_handler.FlarumError.__init__", "modulename": "pyflarum.error_handler", "qualname": "FlarumError.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "message", "status", "code", "details"], "funcdef": "def"}, "pyflarum.error_handler.MissingExtensionError": {"fullname": "pyflarum.error_handler.MissingExtensionError", "modulename": "pyflarum.error_handler", "qualname": "MissingExtensionError", "type": "class", "doc": "<p>Missing pyFlarum extension error.</p>\n"}, "pyflarum.error_handler.MissingExtensionWarning": {"fullname": "pyflarum.error_handler.MissingExtensionWarning", "modulename": "pyflarum.error_handler", "qualname": "MissingExtensionWarning", "type": "class", "doc": "<p>Missing pyFlarum extension warning.</p>\n"}, "pyflarum.error_handler.parse_request": {"fullname": "pyflarum.error_handler.parse_request", "modulename": "pyflarum.error_handler", "qualname": "parse_request", "type": "function", "doc": "<p>Parses the request as JSON, raises <code>FlarumError</code> if\nsomething went wrong.</p>\n", "parameters": ["response"], "funcdef": "def"}, "pyflarum.error_handler.handle_errors": {"fullname": "pyflarum.error_handler.handle_errors", "modulename": "pyflarum.error_handler", "qualname": "handle_errors", "type": "function", "doc": "<p>Handles Flarum &amp; request related errors.\nReturns <code>FlarumError</code> if an error was found, <code>True</code> otherwise.</p>\n", "parameters": ["errors", "status_code"], "funcdef": "def"}, "pyflarum.extensions": {"fullname": "pyflarum.extensions", "modulename": "pyflarum.extensions", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.ExtensionMixin": {"fullname": "pyflarum.extensions.ExtensionMixin", "modulename": "pyflarum.extensions", "qualname": "ExtensionMixin", "type": "class", "doc": "<p>A base class for mixing in custom classes (extensions) into another classes.</p>\n\n<h3 id=\"example-extension-code\">Example extension code:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">ExtensionMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.admin</span> <span class=\"kn\">import</span> <span class=\"n\">AdminExtension</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.session</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n\n\n<span class=\"c1\"># Lowecase:</span>\n<span class=\"n\">AUTHOR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yourname&quot;</span>\n<span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;extensionname&quot;</span>\n<span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">AUTHOR</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"c1\"># List of dependencies:</span>\n<span class=\"n\">SOFT_DEPENDENCIES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AdminExtension</span><span class=\"p\">]</span> <span class=\"c1\"># uses methods from this extension, but can run without it</span>\n<span class=\"n\">HARD_DEPENCENDIES</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n\n<span class=\"c1\"># I recommend to use the following naming pattern: `&lt;YourExtensionName&gt;&lt;ClassToMixin&gt;Mixin`</span>\n<span class=\"c1\"># Example:</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExampleFlarumUserMixin</span><span class=\"p\">(</span><span class=\"n\">FlarumUser</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            Calling `FlarumUser(&lt;...&gt;).example` would return this.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Example&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleExtension</span><span class=\"p\">(</span><span class=\"n\">ExtensionMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_dependencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"n\">SOFT_DEPENDENCIES</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"n\">HARD_DEPENCENDIES</span>\n        <span class=\"p\">}</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">FlarumUser</span><span class=\"p\">,</span> <span class=\"n\">ExampleFlarumUserMixin</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "pyflarum.extensions.ExtensionMixin.__init__": {"fullname": "pyflarum.extensions.ExtensionMixin.__init__", "modulename": "pyflarum.extensions", "qualname": "ExtensionMixin.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"fullname": "pyflarum.extensions.ExtensionMixin.get_dependencies", "modulename": "pyflarum.extensions", "qualname": "ExtensionMixin.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.ExtensionMixin.mixin": {"fullname": "pyflarum.extensions.ExtensionMixin.mixin", "modulename": "pyflarum.extensions", "qualname": "ExtensionMixin.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["_", "class_to_patch", "class_to_mix_in", "skip_protected"], "funcdef": "def"}, "pyflarum.extensions.absolutely_all": {"fullname": "pyflarum.extensions.absolutely_all", "modulename": "pyflarum.extensions.absolutely_all", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin": {"fullname": "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin", "modulename": "pyflarum.extensions.absolutely_all", "qualname": "AbsolutelyAllFlarumUserMixin", "type": "class", "doc": "<p>The main object that carries the Flarum session.</p>\n"}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users": {"fullname": "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users", "modulename": "pyflarum.extensions.absolutely_all", "qualname": "AbsolutelyAllFlarumUserMixin.absolutely_all_users", "type": "function", "doc": "<p>A generator that yields <code>Users</code> from entire forum, until there are <code>None</code> left. <code>Filter</code> compatible.</p>\n", "parameters": ["self", "filter"], "funcdef": "def"}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts": {"fullname": "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts", "modulename": "pyflarum.extensions.absolutely_all", "qualname": "AbsolutelyAllFlarumUserMixin.absolutely_all_posts", "type": "function", "doc": "<p>A generator that yields <code>Posts</code> from entire forum, until there are <code>None</code> left. <code>Filter</code> compatible.</p>\n", "parameters": ["self", "filter"], "funcdef": "def"}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions": {"fullname": "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions", "modulename": "pyflarum.extensions.absolutely_all", "qualname": "AbsolutelyAllFlarumUserMixin.absolutely_all_discussions", "type": "function", "doc": "<p>A generator that yields <code>Discussions</code> from entire forum, until there are <code>None</code> left. <code>Filter</code> compatible.</p>\n", "parameters": ["self", "filter"], "funcdef": "def"}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_notifications": {"fullname": "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_notifications", "modulename": "pyflarum.extensions.absolutely_all", "qualname": "AbsolutelyAllFlarumUserMixin.absolutely_all_notifications", "type": "function", "doc": "<p>A generator that yields all of your <code>Notifications</code>, until there are <code>None</code> left. <code>Filter</code> compatible.</p>\n", "parameters": ["self", "filter"], "funcdef": "def"}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"fullname": "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion", "modulename": "pyflarum.extensions.absolutely_all", "qualname": "AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion", "type": "function", "doc": "<p>This fetches all posts from a long discussion where only post IDs are present.</p>\n\n<p>First, a list of all IDs is created from the API response. Then, IDs are broken into chunks of size <code>at_once</code> and\nyielded as <code>Posts</code>.</p>\n\n<p>Use <code>force=True</code> to bypass <code>at_once</code> being capped at 50, if more than 50.</p>\n", "parameters": ["self", "discussion", "at_once", "force"], "funcdef": "def"}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"fullname": "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension", "modulename": "pyflarum.extensions.absolutely_all", "qualname": "AbsolutelyAllExtension", "type": "class", "doc": "<p>A pyFlarum extension. Allows you to fetch all specific data from a forum (e. g.: all discussions, all posts, etc.), until there are none left.</p>\n\n<p>Based on <code>Generator</code>, that yields in a while loop, until no <code>next_link</code> is present in the API.</p>\n"}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.__init__": {"fullname": "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.__init__", "modulename": "pyflarum.extensions.absolutely_all", "qualname": "AbsolutelyAllExtension.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"fullname": "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies", "modulename": "pyflarum.extensions.absolutely_all", "qualname": "AbsolutelyAllExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"fullname": "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin", "modulename": "pyflarum.extensions.absolutely_all", "qualname": "AbsolutelyAllExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.admin": {"fullname": "pyflarum.extensions.admin", "modulename": "pyflarum.extensions.admin", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.admin.MailSettings": {"fullname": "pyflarum.extensions.admin.MailSettings", "modulename": "pyflarum.extensions.admin", "qualname": "MailSettings", "type": "class", "doc": "<p>Base object for Flarum \"individual\" objects - all\nobjects have these properties.</p>\n\n<p>Examples of \"individual\" objects:</p>\n\n<ul>\n<li><code>pyflarum.flarum.core.discussions.Discussion</code></li>\n<li><code>pyflarum.flarum.core.posts.Post</code></li>\n<li><code>pyflarum.flarum.core.PostFromDiscussion</code></li>\n</ul>\n"}, "pyflarum.extensions.admin.MailSettings.fields": {"fullname": "pyflarum.extensions.admin.MailSettings.fields", "modulename": "pyflarum.extensions.admin", "qualname": "MailSettings.fields", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.admin.MailSettings.mail": {"fullname": "pyflarum.extensions.admin.MailSettings.mail", "modulename": "pyflarum.extensions.admin", "qualname": "MailSettings.mail", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.admin.MailSettings.mailgun": {"fullname": "pyflarum.extensions.admin.MailSettings.mailgun", "modulename": "pyflarum.extensions.admin", "qualname": "MailSettings.mailgun", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.admin.MailSettings.mailgun_secret": {"fullname": "pyflarum.extensions.admin.MailSettings.mailgun_secret", "modulename": "pyflarum.extensions.admin", "qualname": "MailSettings.mailgun_secret", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.admin.MailSettings.mailgun_domain": {"fullname": "pyflarum.extensions.admin.MailSettings.mailgun_domain", "modulename": "pyflarum.extensions.admin", "qualname": "MailSettings.mailgun_domain", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.admin.MailSettings.log": {"fullname": "pyflarum.extensions.admin.MailSettings.log", "modulename": "pyflarum.extensions.admin", "qualname": "MailSettings.log", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.admin.MailSettings.smtp": {"fullname": "pyflarum.extensions.admin.MailSettings.smtp", "modulename": "pyflarum.extensions.admin", "qualname": "MailSettings.smtp", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.admin.MailSettings.mail_host": {"fullname": "pyflarum.extensions.admin.MailSettings.mail_host", "modulename": "pyflarum.extensions.admin", "qualname": "MailSettings.mail_host", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.admin.MailSettings.mail_port": {"fullname": "pyflarum.extensions.admin.MailSettings.mail_port", "modulename": "pyflarum.extensions.admin", "qualname": "MailSettings.mail_port", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.admin.MailSettings.mail_encryption": {"fullname": "pyflarum.extensions.admin.MailSettings.mail_encryption", "modulename": "pyflarum.extensions.admin", "qualname": "MailSettings.mail_encryption", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.admin.MailSettings.mail_username": {"fullname": "pyflarum.extensions.admin.MailSettings.mail_username", "modulename": "pyflarum.extensions.admin", "qualname": "MailSettings.mail_username", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.admin.MailSettings.mail_password": {"fullname": "pyflarum.extensions.admin.MailSettings.mail_password", "modulename": "pyflarum.extensions.admin", "qualname": "MailSettings.mail_password", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.admin.MailSettings.sending": {"fullname": "pyflarum.extensions.admin.MailSettings.sending", "modulename": "pyflarum.extensions.admin", "qualname": "MailSettings.sending", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.admin.MailSettings.errors": {"fullname": "pyflarum.extensions.admin.MailSettings.errors", "modulename": "pyflarum.extensions.admin", "qualname": "MailSettings.errors", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.admin.AdminFlarumUserMixin": {"fullname": "pyflarum.extensions.admin.AdminFlarumUserMixin", "modulename": "pyflarum.extensions.admin", "qualname": "AdminFlarumUserMixin", "type": "class", "doc": "<p>The main object that carries the Flarum session.</p>\n"}, "pyflarum.extensions.admin.AdminFlarumUserMixin.enable_extension": {"fullname": "pyflarum.extensions.admin.AdminFlarumUserMixin.enable_extension", "modulename": "pyflarum.extensions.admin", "qualname": "AdminFlarumUserMixin.enable_extension", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "id"], "funcdef": "def"}, "pyflarum.extensions.admin.AdminFlarumUserMixin.disable_extension": {"fullname": "pyflarum.extensions.admin.AdminFlarumUserMixin.disable_extension", "modulename": "pyflarum.extensions.admin", "qualname": "AdminFlarumUserMixin.disable_extension", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "id"], "funcdef": "def"}, "pyflarum.extensions.admin.AdminFlarumUserMixin.clear_cache": {"fullname": "pyflarum.extensions.admin.AdminFlarumUserMixin.clear_cache", "modulename": "pyflarum.extensions.admin", "qualname": "AdminFlarumUserMixin.clear_cache", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_forum_info": {"fullname": "pyflarum.extensions.admin.AdminFlarumUserMixin.update_forum_info", "modulename": "pyflarum.extensions.admin", "qualname": "AdminFlarumUserMixin.update_forum_info", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "forum_title", "forum_description", "default_route", "welcome_title", "welcome_message", "user_slug_driver"], "funcdef": "def"}, "pyflarum.extensions.admin.AdminFlarumUserMixin.get_mail_settings": {"fullname": "pyflarum.extensions.admin.AdminFlarumUserMixin.get_mail_settings", "modulename": "pyflarum.extensions.admin", "qualname": "AdminFlarumUserMixin.get_mail_settings", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_mail_settings": {"fullname": "pyflarum.extensions.admin.AdminFlarumUserMixin.update_mail_settings", "modulename": "pyflarum.extensions.admin", "qualname": "AdminFlarumUserMixin.update_mail_settings", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "mail_from", "mail_encryption", "mail_username", "mail_password"], "funcdef": "def"}, "pyflarum.extensions.admin.AdminFlarumUserMixin.send_test_mail": {"fullname": "pyflarum.extensions.admin.AdminFlarumUserMixin.send_test_mail", "modulename": "pyflarum.extensions.admin", "qualname": "AdminFlarumUserMixin.send_test_mail", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_appearance": {"fullname": "pyflarum.extensions.admin.AdminFlarumUserMixin.update_appearance", "modulename": "pyflarum.extensions.admin", "qualname": "AdminFlarumUserMixin.update_appearance", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "theme_primary_color", "theme_secondary_color", "theme_dark_mode", "theme_colored_header"], "funcdef": "def"}, "pyflarum.extensions.admin.AdminFlarumUserMixin.upload_logo": {"fullname": "pyflarum.extensions.admin.AdminFlarumUserMixin.upload_logo", "modulename": "pyflarum.extensions.admin", "qualname": "AdminFlarumUserMixin.upload_logo", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "file", "file_name", "file_type"], "funcdef": "def"}, "pyflarum.extensions.admin.AdminFlarumUserMixin.remove_logo": {"fullname": "pyflarum.extensions.admin.AdminFlarumUserMixin.remove_logo", "modulename": "pyflarum.extensions.admin", "qualname": "AdminFlarumUserMixin.remove_logo", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.admin.AdminFlarumUserMixin.upload_favicon": {"fullname": "pyflarum.extensions.admin.AdminFlarumUserMixin.upload_favicon", "modulename": "pyflarum.extensions.admin", "qualname": "AdminFlarumUserMixin.upload_favicon", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "file", "file_name", "file_type"], "funcdef": "def"}, "pyflarum.extensions.admin.AdminFlarumUserMixin.remove_favicon": {"fullname": "pyflarum.extensions.admin.AdminFlarumUserMixin.remove_favicon", "modulename": "pyflarum.extensions.admin", "qualname": "AdminFlarumUserMixin.remove_favicon", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_header": {"fullname": "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_header", "modulename": "pyflarum.extensions.admin", "qualname": "AdminFlarumUserMixin.update_custom_header", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "header"], "funcdef": "def"}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_footer": {"fullname": "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_footer", "modulename": "pyflarum.extensions.admin", "qualname": "AdminFlarumUserMixin.update_custom_footer", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "footer"], "funcdef": "def"}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_css": {"fullname": "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_css", "modulename": "pyflarum.extensions.admin", "qualname": "AdminFlarumUserMixin.update_custom_css", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "css"], "funcdef": "def"}, "pyflarum.extensions.admin.AdminExtension": {"fullname": "pyflarum.extensions.admin.AdminExtension", "modulename": "pyflarum.extensions.admin", "qualname": "AdminExtension", "type": "class", "doc": "<p>A base class for mixing in custom classes (extensions) into another classes.</p>\n\n<h3 id=\"example-extension-code\">Example extension code:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">ExtensionMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.admin</span> <span class=\"kn\">import</span> <span class=\"n\">AdminExtension</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.session</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n\n\n<span class=\"c1\"># Lowecase:</span>\n<span class=\"n\">AUTHOR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yourname&quot;</span>\n<span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;extensionname&quot;</span>\n<span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">AUTHOR</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"c1\"># List of dependencies:</span>\n<span class=\"n\">SOFT_DEPENDENCIES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AdminExtension</span><span class=\"p\">]</span> <span class=\"c1\"># uses methods from this extension, but can run without it</span>\n<span class=\"n\">HARD_DEPENCENDIES</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n\n<span class=\"c1\"># I recommend to use the following naming pattern: `&lt;YourExtensionName&gt;&lt;ClassToMixin&gt;Mixin`</span>\n<span class=\"c1\"># Example:</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExampleFlarumUserMixin</span><span class=\"p\">(</span><span class=\"n\">FlarumUser</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            Calling `FlarumUser(&lt;...&gt;).example` would return this.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Example&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleExtension</span><span class=\"p\">(</span><span class=\"n\">ExtensionMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_dependencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"n\">SOFT_DEPENDENCIES</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"n\">HARD_DEPENCENDIES</span>\n        <span class=\"p\">}</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">FlarumUser</span><span class=\"p\">,</span> <span class=\"n\">ExampleFlarumUserMixin</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "pyflarum.extensions.admin.AdminExtension.__init__": {"fullname": "pyflarum.extensions.admin.AdminExtension.__init__", "modulename": "pyflarum.extensions.admin", "qualname": "AdminExtension.__init__", "type": "function", "doc": "<h3 id=\"parameters\">Parameters:</h3>\n\n<ul>\n<li><code>forum_url</code> - the forum URL that you want the bot to fetch/update data from. This mustn't end with trailing slash (e. g.: https://domain.tld/ - wrong; https://domain.tld - correct).</li>\n<li><code>username_or_email</code> - optional. The username or E-mail address to log into. If <code>None</code>, then the bot doesn't login.</li>\n<li><code>password</code> - optional. The user's password. If <code>None</code>, then the bot doesn't login.</li>\n<li><code>api_endpoint</code> - the API endpoint of the forum, without slashes. This can be specified in Flarum's <code>config.php</code> and normally forums don't need to change the default <code>'api'</code></li>\n<li><code>user_agent</code> - the user agent that will be used to make all requests. Defaults to <code>pyflarum &lt;version&gt;</code>.</li>\n<li><code>session_object</code> - the <code>Session</code> object to make requests with. You can pass any object that supports all operations from the <a href=\"https://pypi.org/project/requests/\">requests</a> library, check <a href=\"https://pypi.org/project/requests-cache/\">requests_cache</a> as an example.</li>\n<li><code>extensions</code> - a list of <code>ExtensionMixin</code> classes. These are monkey-patched on initialization. Learn more about <a href=\"https://cwkevo.github.io/pyflarum/docs/#extensions\">extensions</a>.\n```</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"fullname": "pyflarum.extensions.admin.AdminExtension.get_dependencies", "modulename": "pyflarum.extensions.admin", "qualname": "AdminExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.admin.AdminExtension.mixin": {"fullname": "pyflarum.extensions.admin.AdminExtension.mixin", "modulename": "pyflarum.extensions.admin", "qualname": "AdminExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.advanced_search": {"fullname": "pyflarum.extensions.advanced_search", "modulename": "pyflarum.extensions.advanced_search", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin": {"fullname": "pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin", "modulename": "pyflarum.extensions.advanced_search", "qualname": "AdvancedSearchFlarumUserMixin", "type": "class", "doc": "<p>The main object that carries the Flarum session.</p>\n"}, "pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin.get_user_by_username": {"fullname": "pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin.get_user_by_username", "modulename": "pyflarum.extensions.advanced_search", "qualname": "AdvancedSearchFlarumUserMixin.get_user_by_username", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "username"], "funcdef": "def"}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"fullname": "pyflarum.extensions.advanced_search.AdvancedSearchExtension", "modulename": "pyflarum.extensions.advanced_search", "qualname": "AdvancedSearchExtension", "type": "class", "doc": "<p>A base class for mixing in custom classes (extensions) into another classes.</p>\n\n<h3 id=\"example-extension-code\">Example extension code:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">ExtensionMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.admin</span> <span class=\"kn\">import</span> <span class=\"n\">AdminExtension</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.session</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n\n\n<span class=\"c1\"># Lowecase:</span>\n<span class=\"n\">AUTHOR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yourname&quot;</span>\n<span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;extensionname&quot;</span>\n<span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">AUTHOR</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"c1\"># List of dependencies:</span>\n<span class=\"n\">SOFT_DEPENDENCIES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AdminExtension</span><span class=\"p\">]</span> <span class=\"c1\"># uses methods from this extension, but can run without it</span>\n<span class=\"n\">HARD_DEPENCENDIES</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n\n<span class=\"c1\"># I recommend to use the following naming pattern: `&lt;YourExtensionName&gt;&lt;ClassToMixin&gt;Mixin`</span>\n<span class=\"c1\"># Example:</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExampleFlarumUserMixin</span><span class=\"p\">(</span><span class=\"n\">FlarumUser</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            Calling `FlarumUser(&lt;...&gt;).example` would return this.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Example&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleExtension</span><span class=\"p\">(</span><span class=\"n\">ExtensionMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_dependencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"n\">SOFT_DEPENDENCIES</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"n\">HARD_DEPENCENDIES</span>\n        <span class=\"p\">}</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">FlarumUser</span><span class=\"p\">,</span> <span class=\"n\">ExampleFlarumUserMixin</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"fullname": "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__", "modulename": "pyflarum.extensions.advanced_search", "qualname": "AdvancedSearchExtension.__init__", "type": "function", "doc": "<h3 id=\"parameters\">Parameters:</h3>\n\n<ul>\n<li><code>forum_url</code> - the forum URL that you want the bot to fetch/update data from. This mustn't end with trailing slash (e. g.: https://domain.tld/ - wrong; https://domain.tld - correct).</li>\n<li><code>username_or_email</code> - optional. The username or E-mail address to log into. If <code>None</code>, then the bot doesn't login.</li>\n<li><code>password</code> - optional. The user's password. If <code>None</code>, then the bot doesn't login.</li>\n<li><code>api_endpoint</code> - the API endpoint of the forum, without slashes. This can be specified in Flarum's <code>config.php</code> and normally forums don't need to change the default <code>'api'</code></li>\n<li><code>user_agent</code> - the user agent that will be used to make all requests. Defaults to <code>pyflarum &lt;version&gt;</code>.</li>\n<li><code>session_object</code> - the <code>Session</code> object to make requests with. You can pass any object that supports all operations from the <a href=\"https://pypi.org/project/requests/\">requests</a> library, check <a href=\"https://pypi.org/project/requests-cache/\">requests_cache</a> as an example.</li>\n<li><code>extensions</code> - a list of <code>ExtensionMixin</code> classes. These are monkey-patched on initialization. Learn more about <a href=\"https://cwkevo.github.io/pyflarum/docs/#extensions\">extensions</a>.\n```</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"fullname": "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies", "modulename": "pyflarum.extensions.advanced_search", "qualname": "AdvancedSearchExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"fullname": "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin", "modulename": "pyflarum.extensions.advanced_search", "qualname": "AdvancedSearchExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.commands": {"fullname": "pyflarum.extensions.commands", "modulename": "pyflarum.extensions.commands", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.commands.CommandsFlarumUserMixin": {"fullname": "pyflarum.extensions.commands.CommandsFlarumUserMixin", "modulename": "pyflarum.extensions.commands", "qualname": "CommandsFlarumUserMixin", "type": "class", "doc": "<p>The main object that carries the Flarum session.</p>\n"}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.is_mentioned_in": {"fullname": "pyflarum.extensions.commands.CommandsFlarumUserMixin.is_mentioned_in", "modulename": "pyflarum.extensions.commands", "qualname": "CommandsFlarumUserMixin.is_mentioned_in", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "string"], "funcdef": "def"}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"fullname": "pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command", "modulename": "pyflarum.extensions.commands", "qualname": "CommandsFlarumUserMixin.parse_as_command", "type": "function", "doc": "<p>Parses a command from a string (e. g.: post's content). The result is list of arguments.</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code>    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">parse_command</span><span class=\"p\">()</span>\n</code></pre></div>\n", "parameters": ["self", "string", "is_mentioned", "split_at"], "funcdef": "def"}, "pyflarum.extensions.commands.CommandsExtension": {"fullname": "pyflarum.extensions.commands.CommandsExtension", "modulename": "pyflarum.extensions.commands", "qualname": "CommandsExtension", "type": "class", "doc": "<p>A base class for mixing in custom classes (extensions) into another classes.</p>\n\n<h3 id=\"example-extension-code\">Example extension code:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">ExtensionMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.admin</span> <span class=\"kn\">import</span> <span class=\"n\">AdminExtension</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.session</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n\n\n<span class=\"c1\"># Lowecase:</span>\n<span class=\"n\">AUTHOR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yourname&quot;</span>\n<span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;extensionname&quot;</span>\n<span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">AUTHOR</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"c1\"># List of dependencies:</span>\n<span class=\"n\">SOFT_DEPENDENCIES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AdminExtension</span><span class=\"p\">]</span> <span class=\"c1\"># uses methods from this extension, but can run without it</span>\n<span class=\"n\">HARD_DEPENCENDIES</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n\n<span class=\"c1\"># I recommend to use the following naming pattern: `&lt;YourExtensionName&gt;&lt;ClassToMixin&gt;Mixin`</span>\n<span class=\"c1\"># Example:</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExampleFlarumUserMixin</span><span class=\"p\">(</span><span class=\"n\">FlarumUser</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            Calling `FlarumUser(&lt;...&gt;).example` would return this.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Example&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleExtension</span><span class=\"p\">(</span><span class=\"n\">ExtensionMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_dependencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"n\">SOFT_DEPENDENCIES</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"n\">HARD_DEPENCENDIES</span>\n        <span class=\"p\">}</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">FlarumUser</span><span class=\"p\">,</span> <span class=\"n\">ExampleFlarumUserMixin</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"fullname": "pyflarum.extensions.commands.CommandsExtension.__init__", "modulename": "pyflarum.extensions.commands", "qualname": "CommandsExtension.__init__", "type": "function", "doc": "<h3 id=\"parameters\">Parameters:</h3>\n\n<ul>\n<li><code>forum_url</code> - the forum URL that you want the bot to fetch/update data from. This mustn't end with trailing slash (e. g.: https://domain.tld/ - wrong; https://domain.tld - correct).</li>\n<li><code>username_or_email</code> - optional. The username or E-mail address to log into. If <code>None</code>, then the bot doesn't login.</li>\n<li><code>password</code> - optional. The user's password. If <code>None</code>, then the bot doesn't login.</li>\n<li><code>api_endpoint</code> - the API endpoint of the forum, without slashes. This can be specified in Flarum's <code>config.php</code> and normally forums don't need to change the default <code>'api'</code></li>\n<li><code>user_agent</code> - the user agent that will be used to make all requests. Defaults to <code>pyflarum &lt;version&gt;</code>.</li>\n<li><code>session_object</code> - the <code>Session</code> object to make requests with. You can pass any object that supports all operations from the <a href=\"https://pypi.org/project/requests/\">requests</a> library, check <a href=\"https://pypi.org/project/requests-cache/\">requests_cache</a> as an example.</li>\n<li><code>extensions</code> - a list of <code>ExtensionMixin</code> classes. These are monkey-patched on initialization. Learn more about <a href=\"https://cwkevo.github.io/pyflarum/docs/#extensions\">extensions</a>.\n```</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"fullname": "pyflarum.extensions.commands.CommandsExtension.get_dependencies", "modulename": "pyflarum.extensions.commands", "qualname": "CommandsExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"fullname": "pyflarum.extensions.commands.CommandsExtension.mixin", "modulename": "pyflarum.extensions.commands", "qualname": "CommandsExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum": {"fullname": "pyflarum.extensions.flarum", "modulename": "pyflarum.extensions.flarum", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings": {"fullname": "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings", "modulename": "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin": {"fullname": "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin", "modulename": "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings", "qualname": "ModeratorWarningsUserFromBulkMixin", "type": "class", "doc": "<p>An user from <code>Users</code>.</p>\n"}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canViewWarnings": {"fullname": "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canViewWarnings", "modulename": "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings", "qualname": "ModeratorWarningsUserFromBulkMixin.canViewWarnings", "type": "variable", "doc": "<p>Whether or not you can view the warnings of the user.</p>\n"}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canManageWarnings": {"fullname": "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canManageWarnings", "modulename": "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings", "qualname": "ModeratorWarningsUserFromBulkMixin.canManageWarnings", "type": "variable", "doc": "<p>Whether or not you are able to manage the user's warnings.</p>\n"}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canDeleteWarnings": {"fullname": "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canDeleteWarnings", "modulename": "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings", "qualname": "ModeratorWarningsUserFromBulkMixin.canDeleteWarnings", "type": "variable", "doc": "<p>Whether or not you can delete the user's warnings.</p>\n"}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.visibleWarningCount": {"fullname": "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.visibleWarningCount", "modulename": "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings", "qualname": "ModeratorWarningsUserFromBulkMixin.visibleWarningCount", "type": "variable", "doc": "<p>The amount of warnings that you can see that belong to the user.</p>\n"}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension": {"fullname": "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension", "modulename": "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings", "qualname": "ModeratorWarningsExtension", "type": "class", "doc": "<p>https://extiverse.com/extension/askvortsov/flarum-moderator-warnings</p>\n"}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings", "qualname": "ModeratorWarningsExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"fullname": "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin", "modulename": "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings", "qualname": "ModeratorWarningsExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates": {"fullname": "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates", "modulename": "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin": {"fullname": "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin", "modulename": "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates", "qualname": "ReplyTemplatesDiscussionFromBulkMixin", "type": "class", "doc": "<p>A discussion from <code>Discussions</code>.</p>\n"}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.replyTemplate": {"fullname": "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.replyTemplate", "modulename": "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates", "qualname": "ReplyTemplatesDiscussionFromBulkMixin.replyTemplate", "type": "variable", "doc": "<p>The reply template for the discussion.</p>\n"}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.canManageReplyTemplates": {"fullname": "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.canManageReplyTemplates", "modulename": "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates", "qualname": "ReplyTemplatesDiscussionFromBulkMixin.canManageReplyTemplates", "type": "variable", "doc": "<p>Whether or not you are able to manage the discussion's reply templates.</p>\n"}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension": {"fullname": "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension", "modulename": "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates", "qualname": "ReplyTemplatesExtension", "type": "class", "doc": "<p>https://extiverse.com/extension/askvortsov/flarum-discussion-templates</p>\n"}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates", "qualname": "ReplyTemplatesExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"fullname": "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin", "modulename": "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates", "qualname": "ReplyTemplatesExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Blomstra_Realtime": {"fullname": "pyflarum.extensions.flarum.Blomstra_Realtime", "modulename": "pyflarum.extensions.flarum.Blomstra_Realtime", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin": {"fullname": "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin", "modulename": "pyflarum.extensions.flarum.Blomstra_Realtime", "qualname": "RealtimeDiscussionMixin", "type": "class", "doc": "<p>A discussion from <code>Discussions</code>.</p>\n"}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin.canViewWhoTypes": {"fullname": "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin.canViewWhoTypes", "modulename": "pyflarum.extensions.flarum.Blomstra_Realtime", "qualname": "RealtimeDiscussionMixin.canViewWhoTypes", "type": "variable", "doc": "<p>Whether or not you can view who is typing in real time.</p>\n"}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension": {"fullname": "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension", "modulename": "pyflarum.extensions.flarum.Blomstra_Realtime", "qualname": "RealtimeExtension", "type": "class", "doc": "<p>https://extiverse.com/extension/blomstra/realtime</p>\n"}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.Blomstra_Realtime", "qualname": "RealtimeExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"fullname": "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin", "modulename": "pyflarum.extensions.flarum.Blomstra_Realtime", "qualname": "RealtimeExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Approval": {"fullname": "pyflarum.extensions.flarum.Flarum_Approval", "modulename": "pyflarum.extensions.flarum.Flarum_Approval", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin", "modulename": "pyflarum.extensions.flarum.Flarum_Approval", "qualname": "ApprovalDiscussionFromNotificationMixin", "type": "class", "doc": "<p>A discussion from <code>Notification</code>. Contains the least\ndata from all of the discussion classes (see <a href=\"https://cwkevo.github.io/pyflarum/docs/#class-inheritance\">inheritance</a>).</p>\n"}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin.isApproved": {"fullname": "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin.isApproved", "modulename": "pyflarum.extensions.flarum.Flarum_Approval", "qualname": "ApprovalDiscussionFromNotificationMixin.isApproved", "type": "variable", "doc": "<p>Whether or not the discussion is approved.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin", "modulename": "pyflarum.extensions.flarum.Flarum_Approval", "qualname": "ApprovalPostFromNotificationMixin", "type": "class", "doc": "<p>A post from <code>Notification</code>.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.isApproved": {"fullname": "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.isApproved", "modulename": "pyflarum.extensions.flarum.Flarum_Approval", "qualname": "ApprovalPostFromNotificationMixin.isApproved", "type": "variable", "doc": "<p>Whether or not the post is approved.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.canApprove": {"fullname": "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.canApprove", "modulename": "pyflarum.extensions.flarum.Flarum_Approval", "qualname": "ApprovalPostFromNotificationMixin.canApprove", "type": "variable", "doc": "<p>Whether or not you are able to approve the post</p>\n"}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve": {"fullname": "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve", "modulename": "pyflarum.extensions.flarum.Flarum_Approval", "qualname": "ApprovalPostFromNotificationMixin.approve", "type": "function", "doc": "<p>Approve the post. Use <code>force</code> to approve despite the post being approved already, and do not raise <code>FlarumError</code>.</p>\n", "parameters": ["self", "force"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension": {"fullname": "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension", "modulename": "pyflarum.extensions.flarum.Flarum_Approval", "qualname": "ApprovalExtension", "type": "class", "doc": "<p>https://packagist.org/packages/flarum/approval</p>\n"}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.Flarum_Approval", "qualname": "ApprovalExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin", "modulename": "pyflarum.extensions.flarum.Flarum_Approval", "qualname": "ApprovalExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Flags": {"fullname": "pyflarum.extensions.flarum.Flarum_Flags", "modulename": "pyflarum.extensions.flarum.Flarum_Flags", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin", "modulename": "pyflarum.extensions.flarum.Flarum_Flags", "qualname": "FlagsForumMixin", "type": "class", "doc": "<p>Entire forum, lives under the main <code>/api</code> route.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.canViewFlags": {"fullname": "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.canViewFlags", "modulename": "pyflarum.extensions.flarum.Flarum_Flags", "qualname": "FlagsForumMixin.canViewFlags", "type": "variable", "doc": "<p>Whether or not you can view all the flags on the forum.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.flagCount": {"fullname": "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.flagCount", "modulename": "pyflarum.extensions.flarum.Flarum_Flags", "qualname": "FlagsForumMixin.flagCount", "type": "variable", "doc": "<p>The total flagged post/discussion count (forum-wide).</p>\n"}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.guidelinesUrl": {"fullname": "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.guidelinesUrl", "modulename": "pyflarum.extensions.flarum.Flarum_Flags", "qualname": "FlagsForumMixin.guidelinesUrl", "type": "variable", "doc": "<p>The URL of the forum's guidelines, if specified by the admin.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin", "modulename": "pyflarum.extensions.flarum.Flarum_Flags", "qualname": "FlagsPostFromNotificationMixin", "type": "class", "doc": "<p>A post from <code>Notification</code>.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin.canFlag": {"fullname": "pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin.canFlag", "modulename": "pyflarum.extensions.flarum.Flarum_Flags", "qualname": "FlagsPostFromNotificationMixin.canFlag", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension": {"fullname": "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension", "modulename": "pyflarum.extensions.flarum.Flarum_Flags", "qualname": "FlagsExtension", "type": "class", "doc": "<p>https://packagist.org/packages/flarum/flags</p>\n"}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.Flarum_Flags", "qualname": "FlagsExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin", "modulename": "pyflarum.extensions.flarum.Flarum_Flags", "qualname": "FlagsExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Likes": {"fullname": "pyflarum.extensions.flarum.Flarum_Likes", "modulename": "pyflarum.extensions.flarum.Flarum_Likes", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin", "modulename": "pyflarum.extensions.flarum.Flarum_Likes", "qualname": "LikesPostFromDiscussionMixin", "type": "class", "doc": "<p>A post from <code>Discussion</code>.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.like": {"fullname": "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.like", "modulename": "pyflarum.extensions.flarum.Flarum_Likes", "qualname": "LikesPostFromDiscussionMixin.like", "type": "function", "doc": "<p>Likes a post.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.unlike": {"fullname": "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.unlike", "modulename": "pyflarum.extensions.flarum.Flarum_Likes", "qualname": "LikesPostFromDiscussionMixin.unlike", "type": "function", "doc": "<p>Unlikes liked post.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin", "modulename": "pyflarum.extensions.flarum.Flarum_Likes", "qualname": "LikesPostFromNotificationMixin", "type": "class", "doc": "<p>A post from <code>Notification</code>.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin.canLike": {"fullname": "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin.canLike", "modulename": "pyflarum.extensions.flarum.Flarum_Likes", "qualname": "LikesPostFromNotificationMixin.canLike", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin", "modulename": "pyflarum.extensions.flarum.Flarum_Likes", "qualname": "LikesPostFromBulkMixin", "type": "class", "doc": "<p>A post from <code>Posts</code>.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin.get_liked_by": {"fullname": "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin.get_liked_by", "modulename": "pyflarum.extensions.flarum.Flarum_Likes", "qualname": "LikesPostFromBulkMixin.get_liked_by", "type": "function", "doc": "<p>Obtain the list of users that liked the post.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension": {"fullname": "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension", "modulename": "pyflarum.extensions.flarum.Flarum_Likes", "qualname": "LikesExtension", "type": "class", "doc": "<p>https://packagist.org/packages/flarum/likes</p>\n"}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.Flarum_Likes", "qualname": "LikesExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin", "modulename": "pyflarum.extensions.flarum.Flarum_Likes", "qualname": "LikesExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Lock": {"fullname": "pyflarum.extensions.flarum.Flarum_Lock", "modulename": "pyflarum.extensions.flarum.Flarum_Lock", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin", "modulename": "pyflarum.extensions.flarum.Flarum_Lock", "qualname": "LockDiscussionFromNotificationMixin", "type": "class", "doc": "<p>A discussion from <code>Notification</code>. Contains the least\ndata from all of the discussion classes (see <a href=\"https://cwkevo.github.io/pyflarum/docs/#class-inheritance\">inheritance</a>).</p>\n"}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.lock": {"fullname": "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.lock", "modulename": "pyflarum.extensions.flarum.Flarum_Lock", "qualname": "LockDiscussionFromNotificationMixin.lock", "type": "function", "doc": "<p>Locks the discussion.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.unlock": {"fullname": "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.unlock", "modulename": "pyflarum.extensions.flarum.Flarum_Lock", "qualname": "LockDiscussionFromNotificationMixin.unlock", "type": "function", "doc": "<p>Unlocks the discussion.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin", "modulename": "pyflarum.extensions.flarum.Flarum_Lock", "qualname": "LockDiscussionFromBulkMixin", "type": "class", "doc": "<p>A discussion from <code>Discussions</code>.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.isLocked": {"fullname": "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.isLocked", "modulename": "pyflarum.extensions.flarum.Flarum_Lock", "qualname": "LockDiscussionFromBulkMixin.isLocked", "type": "variable", "doc": "<p>Whether or not the discussion is locked.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.canLock": {"fullname": "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.canLock", "modulename": "pyflarum.extensions.flarum.Flarum_Lock", "qualname": "LockDiscussionFromBulkMixin.canLock", "type": "variable", "doc": "<p>Whether or not you are able to lock the discussion.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension": {"fullname": "pyflarum.extensions.flarum.Flarum_Lock.LockExtension", "modulename": "pyflarum.extensions.flarum.Flarum_Lock", "qualname": "LockExtension", "type": "class", "doc": "<p>https://packagist.org/packages/flarum/lock</p>\n"}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.Flarum_Lock", "qualname": "LockExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin", "modulename": "pyflarum.extensions.flarum.Flarum_Lock", "qualname": "LockExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Markdown": {"fullname": "pyflarum.extensions.flarum.Flarum_Markdown", "modulename": "pyflarum.extensions.flarum.Flarum_Markdown", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin", "modulename": "pyflarum.extensions.flarum.Flarum_Markdown", "qualname": "ForumMixin", "type": "class", "doc": "<p>Entire forum, lives under the main <code>/api</code> route.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin.markdown_mdarea": {"fullname": "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin.markdown_mdarea", "modulename": "pyflarum.extensions.flarum.Flarum_Markdown", "qualname": "ForumMixin.markdown_mdarea", "type": "variable", "doc": "<p>Whether or not the MDArea is enabled for markdown.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension": {"fullname": "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension", "modulename": "pyflarum.extensions.flarum.Flarum_Markdown", "qualname": "ExampleExtension", "type": "class", "doc": "<p>https://packagist.org/packages/flarum/markdown</p>\n"}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.Flarum_Markdown", "qualname": "ExampleExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin", "modulename": "pyflarum.extensions.flarum.Flarum_Markdown", "qualname": "ExampleExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Sticky": {"fullname": "pyflarum.extensions.flarum.Flarum_Sticky", "modulename": "pyflarum.extensions.flarum.Flarum_Sticky", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin", "modulename": "pyflarum.extensions.flarum.Flarum_Sticky", "qualname": "StickyDiscussionFromNotificationMixin", "type": "class", "doc": "<p>A discussion from <code>Notification</code>. Contains the least\ndata from all of the discussion classes (see <a href=\"https://cwkevo.github.io/pyflarum/docs/#class-inheritance\">inheritance</a>).</p>\n"}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.stick": {"fullname": "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.stick", "modulename": "pyflarum.extensions.flarum.Flarum_Sticky", "qualname": "StickyDiscussionFromNotificationMixin.stick", "type": "function", "doc": "<p>Stickies a discussion.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.unstick": {"fullname": "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.unstick", "modulename": "pyflarum.extensions.flarum.Flarum_Sticky", "qualname": "StickyDiscussionFromNotificationMixin.unstick", "type": "function", "doc": "<p>Unstickies a discussion.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin", "modulename": "pyflarum.extensions.flarum.Flarum_Sticky", "qualname": "StickyDiscussionFromBulkMixin", "type": "class", "doc": "<p>A discussion from <code>Discussions</code>.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.isSticky": {"fullname": "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.isSticky", "modulename": "pyflarum.extensions.flarum.Flarum_Sticky", "qualname": "StickyDiscussionFromBulkMixin.isSticky", "type": "variable", "doc": "<p>Whether or not the discussion is stickied.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.canSticky": {"fullname": "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.canSticky", "modulename": "pyflarum.extensions.flarum.Flarum_Sticky", "qualname": "StickyDiscussionFromBulkMixin.canSticky", "type": "variable", "doc": "<p>Whether or not you are able to stick this discussion.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"fullname": "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension", "modulename": "pyflarum.extensions.flarum.Flarum_Sticky", "qualname": "StickyExtension", "type": "class", "doc": "<p>A base class for mixing in custom classes (extensions) into another classes.</p>\n\n<h3 id=\"example-extension-code\">Example extension code:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">ExtensionMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.admin</span> <span class=\"kn\">import</span> <span class=\"n\">AdminExtension</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.session</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n\n\n<span class=\"c1\"># Lowecase:</span>\n<span class=\"n\">AUTHOR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yourname&quot;</span>\n<span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;extensionname&quot;</span>\n<span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">AUTHOR</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"c1\"># List of dependencies:</span>\n<span class=\"n\">SOFT_DEPENDENCIES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AdminExtension</span><span class=\"p\">]</span> <span class=\"c1\"># uses methods from this extension, but can run without it</span>\n<span class=\"n\">HARD_DEPENCENDIES</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n\n<span class=\"c1\"># I recommend to use the following naming pattern: `&lt;YourExtensionName&gt;&lt;ClassToMixin&gt;Mixin`</span>\n<span class=\"c1\"># Example:</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExampleFlarumUserMixin</span><span class=\"p\">(</span><span class=\"n\">FlarumUser</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            Calling `FlarumUser(&lt;...&gt;).example` would return this.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Example&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleExtension</span><span class=\"p\">(</span><span class=\"n\">ExtensionMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_dependencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"n\">SOFT_DEPENDENCIES</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"n\">HARD_DEPENCENDIES</span>\n        <span class=\"p\">}</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">FlarumUser</span><span class=\"p\">,</span> <span class=\"n\">ExampleFlarumUserMixin</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.Flarum_Sticky", "qualname": "StickyExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin", "modulename": "pyflarum.extensions.flarum.Flarum_Sticky", "qualname": "StickyExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Subscriptions": {"fullname": "pyflarum.extensions.flarum.Flarum_Subscriptions", "modulename": "pyflarum.extensions.flarum.Flarum_Subscriptions", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin", "modulename": "pyflarum.extensions.flarum.Flarum_Subscriptions", "qualname": "SubscriptionsDiscussionFromNotificationMixin", "type": "class", "doc": "<p>A discussion from <code>Notification</code>. Contains the least\ndata from all of the discussion classes (see <a href=\"https://cwkevo.github.io/pyflarum/docs/#class-inheritance\">inheritance</a>).</p>\n"}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.follow": {"fullname": "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.follow", "modulename": "pyflarum.extensions.flarum.Flarum_Subscriptions", "qualname": "SubscriptionsDiscussionFromNotificationMixin.follow", "type": "function", "doc": "<p>Follow the discussion and be notified of all new activity.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.unfollow": {"fullname": "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.unfollow", "modulename": "pyflarum.extensions.flarum.Flarum_Subscriptions", "qualname": "SubscriptionsDiscussionFromNotificationMixin.unfollow", "type": "function", "doc": "<p>Unfollow the discussion, but be notified when someone mentions you.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"fullname": "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore", "modulename": "pyflarum.extensions.flarum.Flarum_Subscriptions", "qualname": "SubscriptionsDiscussionFromNotificationMixin.ignore", "type": "function", "doc": "<p>Ignore the discussion, never be mentioned.</p>\n\n<p>Note that this will also hide the discussion from <code>Discussions</code>.\nCurrently, the only ways to access ignored Flarum discussions that I am aware of are:</p>\n\n<ol>\n<li>Accessing the discussion directly (by ID).</li>\n<li>Using <code>pyflarum.flarum.core.filters.Filter</code> (e. g. <code>Filter(query=\"is:ignored\")</code>).</li>\n</ol>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin", "modulename": "pyflarum.extensions.flarum.Flarum_Subscriptions", "qualname": "SubscriptionsDiscussionFromBulkMixin", "type": "class", "doc": "<p>A discussion from <code>Discussions</code>.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin.subscription": {"fullname": "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin.subscription", "modulename": "pyflarum.extensions.flarum.Flarum_Subscriptions", "qualname": "SubscriptionsDiscussionFromBulkMixin.subscription", "type": "variable", "doc": "<p>Get the current subscription state of the discussion.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"fullname": "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension", "modulename": "pyflarum.extensions.flarum.Flarum_Subscriptions", "qualname": "SubscriptionsExtension", "type": "class", "doc": "<p>A base class for mixing in custom classes (extensions) into another classes.</p>\n\n<h3 id=\"example-extension-code\">Example extension code:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">ExtensionMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.admin</span> <span class=\"kn\">import</span> <span class=\"n\">AdminExtension</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.session</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n\n\n<span class=\"c1\"># Lowecase:</span>\n<span class=\"n\">AUTHOR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yourname&quot;</span>\n<span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;extensionname&quot;</span>\n<span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">AUTHOR</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"c1\"># List of dependencies:</span>\n<span class=\"n\">SOFT_DEPENDENCIES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AdminExtension</span><span class=\"p\">]</span> <span class=\"c1\"># uses methods from this extension, but can run without it</span>\n<span class=\"n\">HARD_DEPENCENDIES</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n\n<span class=\"c1\"># I recommend to use the following naming pattern: `&lt;YourExtensionName&gt;&lt;ClassToMixin&gt;Mixin`</span>\n<span class=\"c1\"># Example:</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExampleFlarumUserMixin</span><span class=\"p\">(</span><span class=\"n\">FlarumUser</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            Calling `FlarumUser(&lt;...&gt;).example` would return this.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Example&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleExtension</span><span class=\"p\">(</span><span class=\"n\">ExtensionMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_dependencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"n\">SOFT_DEPENDENCIES</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"n\">HARD_DEPENCENDIES</span>\n        <span class=\"p\">}</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">FlarumUser</span><span class=\"p\">,</span> <span class=\"n\">ExampleFlarumUserMixin</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.Flarum_Subscriptions", "qualname": "SubscriptionsExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin", "modulename": "pyflarum.extensions.flarum.Flarum_Subscriptions", "qualname": "SubscriptionsExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Suspend": {"fullname": "pyflarum.extensions.flarum.Flarum_Suspend", "modulename": "pyflarum.extensions.flarum.Flarum_Suspend", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin", "modulename": "pyflarum.extensions.flarum.Flarum_Suspend", "qualname": "SuspendUserMixin", "type": "class", "doc": "<p>An user from <code>Users</code>.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.canSuspend": {"fullname": "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.canSuspend", "modulename": "pyflarum.extensions.flarum.Flarum_Suspend", "qualname": "SuspendUserMixin.canSuspend", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspendedUntil": {"fullname": "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspendedUntil", "modulename": "pyflarum.extensions.flarum.Flarum_Suspend", "qualname": "SuspendUserMixin.suspendedUntil", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspend": {"fullname": "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspend", "modulename": "pyflarum.extensions.flarum.Flarum_Suspend", "qualname": "SuspendUserMixin.suspend", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "suspended_until", "suspended_for"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"fullname": "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension", "modulename": "pyflarum.extensions.flarum.Flarum_Suspend", "qualname": "SuspendExtension", "type": "class", "doc": "<p>A base class for mixing in custom classes (extensions) into another classes.</p>\n\n<h3 id=\"example-extension-code\">Example extension code:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">ExtensionMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.admin</span> <span class=\"kn\">import</span> <span class=\"n\">AdminExtension</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.session</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n\n\n<span class=\"c1\"># Lowecase:</span>\n<span class=\"n\">AUTHOR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yourname&quot;</span>\n<span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;extensionname&quot;</span>\n<span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">AUTHOR</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"c1\"># List of dependencies:</span>\n<span class=\"n\">SOFT_DEPENDENCIES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AdminExtension</span><span class=\"p\">]</span> <span class=\"c1\"># uses methods from this extension, but can run without it</span>\n<span class=\"n\">HARD_DEPENCENDIES</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n\n<span class=\"c1\"># I recommend to use the following naming pattern: `&lt;YourExtensionName&gt;&lt;ClassToMixin&gt;Mixin`</span>\n<span class=\"c1\"># Example:</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExampleFlarumUserMixin</span><span class=\"p\">(</span><span class=\"n\">FlarumUser</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            Calling `FlarumUser(&lt;...&gt;).example` would return this.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Example&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleExtension</span><span class=\"p\">(</span><span class=\"n\">ExtensionMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_dependencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"n\">SOFT_DEPENDENCIES</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"n\">HARD_DEPENCENDIES</span>\n        <span class=\"p\">}</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">FlarumUser</span><span class=\"p\">,</span> <span class=\"n\">ExampleFlarumUserMixin</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.Flarum_Suspend", "qualname": "SuspendExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin", "modulename": "pyflarum.extensions.flarum.Flarum_Suspend", "qualname": "SuspendExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Tags": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag", "type": "class", "doc": "<p>A Flarum tag.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.name": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.name", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.name", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.description": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.description", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.description", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.slug": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.slug", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.slug", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.color": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.color", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.color", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundUrl": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundUrl", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.backgroundUrl", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundMode": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundMode", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.backgroundMode", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.icon": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.icon", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.icon", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.discussionCount": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.discussionCount", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.discussionCount", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.position": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.position", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.position", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.defaultSort": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.defaultSort", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.defaultSort", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.isChild": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.isChild", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.isChild", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.isHidden": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.isHidden", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.isHidden", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.lastPostedAt": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.lastPostedAt", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.lastPostedAt", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.canStartDiscussion": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.canStartDiscussion", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.canStartDiscussion", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.canAddToDiscussion": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.canAddToDiscussion", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.canAddToDiscussion", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.subscription": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.subscription", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.subscription", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.template": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.template", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.template", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.relationships", "type": "variable", "doc": "<p>Raw <code>dict</code> of the object's relationships with\nother objects.</p>\n\n<p>This contains references to objects in the included data.\nRead more about <a href=\"https://cwkevo.github.io/pyflarum/docs/#included-data\">included data</a>.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.get_parent_tag": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.get_parent_tag", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.get_parent_tag", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "force"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.restrict_permissions": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.restrict_permissions", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.restrict_permissions", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.unrestrict_permissions": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.Tag.unrestrict_permissions", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "Tag.unrestrict_permissions", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "TagsForumMixin", "type": "class", "doc": "<p>Entire forum, lives under the main <code>/api</code> route.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.canBypassTagCounts": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.canBypassTagCounts", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "TagsForumMixin.canBypassTagCounts", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minPrimaryTags": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minPrimaryTags", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "TagsForumMixin.minPrimaryTags", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxPrimaryTags": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxPrimaryTags", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "TagsForumMixin.maxPrimaryTags", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minSecondaryTags": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minSecondaryTags", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "TagsForumMixin.minSecondaryTags", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxSecondaryTags": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxSecondaryTags", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "TagsForumMixin.maxSecondaryTags", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "TagsDiscussionMixin", "type": "class", "doc": "<p>A discussion from <code>Discussions</code>.</p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.canTag": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.canTag", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "TagsDiscussionMixin.canTag", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.get_tags": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.get_tags", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "TagsDiscussionMixin.get_tags", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "TagsExtension", "type": "class", "doc": "<p>A base class for mixing in custom classes (extensions) into another classes.</p>\n\n<h3 id=\"example-extension-code\">Example extension code:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">ExtensionMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.admin</span> <span class=\"kn\">import</span> <span class=\"n\">AdminExtension</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.session</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n\n\n<span class=\"c1\"># Lowecase:</span>\n<span class=\"n\">AUTHOR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yourname&quot;</span>\n<span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;extensionname&quot;</span>\n<span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">AUTHOR</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"c1\"># List of dependencies:</span>\n<span class=\"n\">SOFT_DEPENDENCIES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AdminExtension</span><span class=\"p\">]</span> <span class=\"c1\"># uses methods from this extension, but can run without it</span>\n<span class=\"n\">HARD_DEPENCENDIES</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n\n<span class=\"c1\"># I recommend to use the following naming pattern: `&lt;YourExtensionName&gt;&lt;ClassToMixin&gt;Mixin`</span>\n<span class=\"c1\"># Example:</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExampleFlarumUserMixin</span><span class=\"p\">(</span><span class=\"n\">FlarumUser</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            Calling `FlarumUser(&lt;...&gt;).example` would return this.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Example&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleExtension</span><span class=\"p\">(</span><span class=\"n\">ExtensionMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_dependencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"n\">SOFT_DEPENDENCIES</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"n\">HARD_DEPENCENDIES</span>\n        <span class=\"p\">}</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">FlarumUser</span><span class=\"p\">,</span> <span class=\"n\">ExampleFlarumUserMixin</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "TagsExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"fullname": "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin", "modulename": "pyflarum.extensions.flarum.Flarum_Tags", "qualname": "TagsExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.FoF_BestAnswer": {"fullname": "pyflarum.extensions.flarum.FoF_BestAnswer", "modulename": "pyflarum.extensions.flarum.FoF_BestAnswer", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin": {"fullname": "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin", "modulename": "pyflarum.extensions.flarum.FoF_BestAnswer", "qualname": "BestAnswerDiscussionNotificationMixin", "type": "class", "doc": "<p>A discussion from <code>Notification</code>. Contains the least\ndata from all of the discussion classes (see <a href=\"https://cwkevo.github.io/pyflarum/docs/#class-inheritance\">inheritance</a>).</p>\n"}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.hasBestAnswer": {"fullname": "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.hasBestAnswer", "modulename": "pyflarum.extensions.flarum.FoF_BestAnswer", "qualname": "BestAnswerDiscussionNotificationMixin.hasBestAnswer", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.bestAnswerSetAt": {"fullname": "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.bestAnswerSetAt", "modulename": "pyflarum.extensions.flarum.FoF_BestAnswer", "qualname": "BestAnswerDiscussionNotificationMixin.bestAnswerSetAt", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin": {"fullname": "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin", "modulename": "pyflarum.extensions.flarum.FoF_BestAnswer", "qualname": "BestAnswerDiscussionMixin", "type": "class", "doc": "<p>A discussion from <code>Discussions</code>.</p>\n"}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin.canSelectBestAnswer": {"fullname": "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin.canSelectBestAnswer", "modulename": "pyflarum.extensions.flarum.FoF_BestAnswer", "qualname": "BestAnswerDiscussionMixin.canSelectBestAnswer", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"fullname": "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension", "modulename": "pyflarum.extensions.flarum.FoF_BestAnswer", "qualname": "BestAnswerExtension", "type": "class", "doc": "<p>A base class for mixing in custom classes (extensions) into another classes.</p>\n\n<h3 id=\"example-extension-code\">Example extension code:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">ExtensionMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.admin</span> <span class=\"kn\">import</span> <span class=\"n\">AdminExtension</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.session</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n\n\n<span class=\"c1\"># Lowecase:</span>\n<span class=\"n\">AUTHOR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yourname&quot;</span>\n<span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;extensionname&quot;</span>\n<span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">AUTHOR</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"c1\"># List of dependencies:</span>\n<span class=\"n\">SOFT_DEPENDENCIES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AdminExtension</span><span class=\"p\">]</span> <span class=\"c1\"># uses methods from this extension, but can run without it</span>\n<span class=\"n\">HARD_DEPENCENDIES</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n\n<span class=\"c1\"># I recommend to use the following naming pattern: `&lt;YourExtensionName&gt;&lt;ClassToMixin&gt;Mixin`</span>\n<span class=\"c1\"># Example:</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExampleFlarumUserMixin</span><span class=\"p\">(</span><span class=\"n\">FlarumUser</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            Calling `FlarumUser(&lt;...&gt;).example` would return this.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Example&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleExtension</span><span class=\"p\">(</span><span class=\"n\">ExtensionMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_dependencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"n\">SOFT_DEPENDENCIES</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"n\">HARD_DEPENCENDIES</span>\n        <span class=\"p\">}</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">FlarumUser</span><span class=\"p\">,</span> <span class=\"n\">ExampleFlarumUserMixin</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.FoF_BestAnswer", "qualname": "BestAnswerExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"fullname": "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin", "modulename": "pyflarum.extensions.flarum.FoF_BestAnswer", "qualname": "BestAnswerExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.FoF_Byobu": {"fullname": "pyflarum.extensions.flarum.FoF_Byobu", "modulename": "pyflarum.extensions.flarum.FoF_Byobu", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin": {"fullname": "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin", "modulename": "pyflarum.extensions.flarum.FoF_Byobu", "qualname": "ByobuDiscussionMixin", "type": "class", "doc": "<p>A discussion from <code>Discussions</code>.</p>\n"}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditRecipients": {"fullname": "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditRecipients", "modulename": "pyflarum.extensions.flarum.FoF_Byobu", "qualname": "ByobuDiscussionMixin.canEditRecipients", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditUserRecipients": {"fullname": "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditUserRecipients", "modulename": "pyflarum.extensions.flarum.FoF_Byobu", "qualname": "ByobuDiscussionMixin.canEditUserRecipients", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditGroupRecipients": {"fullname": "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditGroupRecipients", "modulename": "pyflarum.extensions.flarum.FoF_Byobu", "qualname": "ByobuDiscussionMixin.canEditGroupRecipients", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin": {"fullname": "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin", "modulename": "pyflarum.extensions.flarum.FoF_Byobu", "qualname": "ByobuUserMixin", "type": "class", "doc": "<p>An user from <code>Users</code>.</p>\n"}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.blocksPd": {"fullname": "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.blocksPd", "modulename": "pyflarum.extensions.flarum.FoF_Byobu", "qualname": "ByobuUserMixin.blocksPd", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.cannotBeDirectlyMessaged": {"fullname": "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.cannotBeDirectlyMessaged", "modulename": "pyflarum.extensions.flarum.FoF_Byobu", "qualname": "ByobuUserMixin.cannotBeDirectlyMessaged", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"fullname": "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension", "modulename": "pyflarum.extensions.flarum.FoF_Byobu", "qualname": "ByobuExtension", "type": "class", "doc": "<p>A base class for mixing in custom classes (extensions) into another classes.</p>\n\n<h3 id=\"example-extension-code\">Example extension code:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">ExtensionMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.admin</span> <span class=\"kn\">import</span> <span class=\"n\">AdminExtension</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.session</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n\n\n<span class=\"c1\"># Lowecase:</span>\n<span class=\"n\">AUTHOR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yourname&quot;</span>\n<span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;extensionname&quot;</span>\n<span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">AUTHOR</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"c1\"># List of dependencies:</span>\n<span class=\"n\">SOFT_DEPENDENCIES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AdminExtension</span><span class=\"p\">]</span> <span class=\"c1\"># uses methods from this extension, but can run without it</span>\n<span class=\"n\">HARD_DEPENCENDIES</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n\n<span class=\"c1\"># I recommend to use the following naming pattern: `&lt;YourExtensionName&gt;&lt;ClassToMixin&gt;Mixin`</span>\n<span class=\"c1\"># Example:</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExampleFlarumUserMixin</span><span class=\"p\">(</span><span class=\"n\">FlarumUser</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            Calling `FlarumUser(&lt;...&gt;).example` would return this.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Example&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleExtension</span><span class=\"p\">(</span><span class=\"n\">ExtensionMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_dependencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"n\">SOFT_DEPENDENCIES</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"n\">HARD_DEPENCENDIES</span>\n        <span class=\"p\">}</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">FlarumUser</span><span class=\"p\">,</span> <span class=\"n\">ExampleFlarumUserMixin</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.FoF_Byobu", "qualname": "ByobuExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"fullname": "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin", "modulename": "pyflarum.extensions.flarum.FoF_Byobu", "qualname": "ByobuExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.FoF_Merge": {"fullname": "pyflarum.extensions.flarum.FoF_Merge", "modulename": "pyflarum.extensions.flarum.FoF_Merge", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin": {"fullname": "pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin", "modulename": "pyflarum.extensions.flarum.FoF_Merge", "qualname": "MergeDiscussionMixin", "type": "class", "doc": "<p>A discussion from <code>Discussions</code>.</p>\n"}, "pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin.canMerge": {"fullname": "pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin.canMerge", "modulename": "pyflarum.extensions.flarum.FoF_Merge", "qualname": "MergeDiscussionMixin.canMerge", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"fullname": "pyflarum.extensions.flarum.FoF_Merge.MergeExtension", "modulename": "pyflarum.extensions.flarum.FoF_Merge", "qualname": "MergeExtension", "type": "class", "doc": "<p>A base class for mixing in custom classes (extensions) into another classes.</p>\n\n<h3 id=\"example-extension-code\">Example extension code:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">ExtensionMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.admin</span> <span class=\"kn\">import</span> <span class=\"n\">AdminExtension</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.session</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n\n\n<span class=\"c1\"># Lowecase:</span>\n<span class=\"n\">AUTHOR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yourname&quot;</span>\n<span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;extensionname&quot;</span>\n<span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">AUTHOR</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"c1\"># List of dependencies:</span>\n<span class=\"n\">SOFT_DEPENDENCIES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AdminExtension</span><span class=\"p\">]</span> <span class=\"c1\"># uses methods from this extension, but can run without it</span>\n<span class=\"n\">HARD_DEPENCENDIES</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n\n<span class=\"c1\"># I recommend to use the following naming pattern: `&lt;YourExtensionName&gt;&lt;ClassToMixin&gt;Mixin`</span>\n<span class=\"c1\"># Example:</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExampleFlarumUserMixin</span><span class=\"p\">(</span><span class=\"n\">FlarumUser</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            Calling `FlarumUser(&lt;...&gt;).example` would return this.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Example&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleExtension</span><span class=\"p\">(</span><span class=\"n\">ExtensionMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_dependencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"n\">SOFT_DEPENDENCIES</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"n\">HARD_DEPENCENDIES</span>\n        <span class=\"p\">}</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">FlarumUser</span><span class=\"p\">,</span> <span class=\"n\">ExampleFlarumUserMixin</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.FoF_Merge", "qualname": "MergeExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"fullname": "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin", "modulename": "pyflarum.extensions.flarum.FoF_Merge", "qualname": "MergeExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping": {"fullname": "pyflarum.extensions.flarum.FoF_PreventNecrobumping", "modulename": "pyflarum.extensions.flarum.FoF_PreventNecrobumping", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin": {"fullname": "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin", "modulename": "pyflarum.extensions.flarum.FoF_PreventNecrobumping", "qualname": "PreventNecrobumpingDiscussionMixin", "type": "class", "doc": "<p>A discussion from <code>Discussions</code>.</p>\n"}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin.fof_prevent_necrobumping": {"fullname": "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin.fof_prevent_necrobumping", "modulename": "pyflarum.extensions.flarum.FoF_PreventNecrobumping", "qualname": "PreventNecrobumpingDiscussionMixin.fof_prevent_necrobumping", "type": "variable", "doc": "<p>I have no idea what this does either, sorry.</p>\n"}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"fullname": "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension", "modulename": "pyflarum.extensions.flarum.FoF_PreventNecrobumping", "qualname": "PreventNecrobumpingExtension", "type": "class", "doc": "<p>A base class for mixing in custom classes (extensions) into another classes.</p>\n\n<h3 id=\"example-extension-code\">Example extension code:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">ExtensionMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.admin</span> <span class=\"kn\">import</span> <span class=\"n\">AdminExtension</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.session</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n\n\n<span class=\"c1\"># Lowecase:</span>\n<span class=\"n\">AUTHOR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yourname&quot;</span>\n<span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;extensionname&quot;</span>\n<span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">AUTHOR</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"c1\"># List of dependencies:</span>\n<span class=\"n\">SOFT_DEPENDENCIES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AdminExtension</span><span class=\"p\">]</span> <span class=\"c1\"># uses methods from this extension, but can run without it</span>\n<span class=\"n\">HARD_DEPENCENDIES</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n\n<span class=\"c1\"># I recommend to use the following naming pattern: `&lt;YourExtensionName&gt;&lt;ClassToMixin&gt;Mixin`</span>\n<span class=\"c1\"># Example:</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExampleFlarumUserMixin</span><span class=\"p\">(</span><span class=\"n\">FlarumUser</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            Calling `FlarumUser(&lt;...&gt;).example` would return this.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Example&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleExtension</span><span class=\"p\">(</span><span class=\"n\">ExtensionMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_dependencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"n\">SOFT_DEPENDENCIES</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"n\">HARD_DEPENCENDIES</span>\n        <span class=\"p\">}</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">FlarumUser</span><span class=\"p\">,</span> <span class=\"n\">ExampleFlarumUserMixin</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.FoF_PreventNecrobumping", "qualname": "PreventNecrobumpingExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"fullname": "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin", "modulename": "pyflarum.extensions.flarum.FoF_PreventNecrobumping", "qualname": "PreventNecrobumpingExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.FoF_Spamblock": {"fullname": "pyflarum.extensions.flarum.FoF_Spamblock", "modulename": "pyflarum.extensions.flarum.FoF_Spamblock", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin": {"fullname": "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin", "modulename": "pyflarum.extensions.flarum.FoF_Spamblock", "qualname": "SpamblockUserFromNotificationMixin", "type": "class", "doc": "<p>An user from <code>BaseNotification</code></p>\n"}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin.spamblock": {"fullname": "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin.spamblock", "modulename": "pyflarum.extensions.flarum.FoF_Spamblock", "qualname": "SpamblockUserFromNotificationMixin.spamblock", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin": {"fullname": "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin", "modulename": "pyflarum.extensions.flarum.FoF_Spamblock", "qualname": "SpamblockUserMixin", "type": "class", "doc": "<p>An user from <code>Users</code>.</p>\n"}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin.canSpamblock": {"fullname": "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin.canSpamblock", "modulename": "pyflarum.extensions.flarum.FoF_Spamblock", "qualname": "SpamblockUserMixin.canSpamblock", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"fullname": "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension", "modulename": "pyflarum.extensions.flarum.FoF_Spamblock", "qualname": "SpamblockExtension", "type": "class", "doc": "<p>A base class for mixing in custom classes (extensions) into another classes.</p>\n\n<h3 id=\"example-extension-code\">Example extension code:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">ExtensionMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.admin</span> <span class=\"kn\">import</span> <span class=\"n\">AdminExtension</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.session</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n\n\n<span class=\"c1\"># Lowecase:</span>\n<span class=\"n\">AUTHOR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yourname&quot;</span>\n<span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;extensionname&quot;</span>\n<span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">AUTHOR</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"c1\"># List of dependencies:</span>\n<span class=\"n\">SOFT_DEPENDENCIES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AdminExtension</span><span class=\"p\">]</span> <span class=\"c1\"># uses methods from this extension, but can run without it</span>\n<span class=\"n\">HARD_DEPENCENDIES</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n\n<span class=\"c1\"># I recommend to use the following naming pattern: `&lt;YourExtensionName&gt;&lt;ClassToMixin&gt;Mixin`</span>\n<span class=\"c1\"># Example:</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExampleFlarumUserMixin</span><span class=\"p\">(</span><span class=\"n\">FlarumUser</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            Calling `FlarumUser(&lt;...&gt;).example` would return this.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Example&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleExtension</span><span class=\"p\">(</span><span class=\"n\">ExtensionMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_dependencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"n\">SOFT_DEPENDENCIES</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"n\">HARD_DEPENCENDIES</span>\n        <span class=\"p\">}</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">FlarumUser</span><span class=\"p\">,</span> <span class=\"n\">ExampleFlarumUserMixin</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.FoF_Spamblock", "qualname": "SpamblockExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"fullname": "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin", "modulename": "pyflarum.extensions.flarum.FoF_Spamblock", "qualname": "SpamblockExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.FoF_Split": {"fullname": "pyflarum.extensions.flarum.FoF_Split", "modulename": "pyflarum.extensions.flarum.FoF_Split", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin": {"fullname": "pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin", "modulename": "pyflarum.extensions.flarum.FoF_Split", "qualname": "SplitDiscussionMixin", "type": "class", "doc": "<p>A discussion from <code>Discussions</code>.</p>\n"}, "pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin.canSplit": {"fullname": "pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin.canSplit", "modulename": "pyflarum.extensions.flarum.FoF_Split", "qualname": "SplitDiscussionMixin.canSplit", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"fullname": "pyflarum.extensions.flarum.FoF_Split.SplitExtension", "modulename": "pyflarum.extensions.flarum.FoF_Split", "qualname": "SplitExtension", "type": "class", "doc": "<p>A base class for mixing in custom classes (extensions) into another classes.</p>\n\n<h3 id=\"example-extension-code\">Example extension code:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">ExtensionMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.admin</span> <span class=\"kn\">import</span> <span class=\"n\">AdminExtension</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.session</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n\n\n<span class=\"c1\"># Lowecase:</span>\n<span class=\"n\">AUTHOR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yourname&quot;</span>\n<span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;extensionname&quot;</span>\n<span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">AUTHOR</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"c1\"># List of dependencies:</span>\n<span class=\"n\">SOFT_DEPENDENCIES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AdminExtension</span><span class=\"p\">]</span> <span class=\"c1\"># uses methods from this extension, but can run without it</span>\n<span class=\"n\">HARD_DEPENCENDIES</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n\n<span class=\"c1\"># I recommend to use the following naming pattern: `&lt;YourExtensionName&gt;&lt;ClassToMixin&gt;Mixin`</span>\n<span class=\"c1\"># Example:</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExampleFlarumUserMixin</span><span class=\"p\">(</span><span class=\"n\">FlarumUser</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            Calling `FlarumUser(&lt;...&gt;).example` would return this.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Example&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleExtension</span><span class=\"p\">(</span><span class=\"n\">ExtensionMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_dependencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"n\">SOFT_DEPENDENCIES</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"n\">HARD_DEPENCENDIES</span>\n        <span class=\"p\">}</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">FlarumUser</span><span class=\"p\">,</span> <span class=\"n\">ExampleFlarumUserMixin</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.FoF_Split", "qualname": "SplitExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"fullname": "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin", "modulename": "pyflarum.extensions.flarum.FoF_Split", "qualname": "SplitExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.FoF_UserBio": {"fullname": "pyflarum.extensions.flarum.FoF_UserBio", "modulename": "pyflarum.extensions.flarum.FoF_UserBio", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin": {"fullname": "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin", "modulename": "pyflarum.extensions.flarum.FoF_UserBio", "qualname": "UserBioForumMixin", "type": "class", "doc": "<p>Entire forum, lives under the main <code>/api</code> route.</p>\n"}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin.max_bio_length": {"fullname": "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin.max_bio_length", "modulename": "pyflarum.extensions.flarum.FoF_UserBio", "qualname": "UserBioForumMixin.max_bio_length", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin": {"fullname": "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin", "modulename": "pyflarum.extensions.flarum.FoF_UserBio", "qualname": "UserBioFlarumUserMixin", "type": "class", "doc": "<p>The main object that carries the Flarum session.</p>\n"}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin.update_user_bio": {"fullname": "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin.update_user_bio", "modulename": "pyflarum.extensions.flarum.FoF_UserBio", "qualname": "UserBioFlarumUserMixin.update_user_bio", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "bio", "user"], "funcdef": "def"}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin": {"fullname": "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin", "modulename": "pyflarum.extensions.flarum.FoF_UserBio", "qualname": "UserBioUserFromBulkMixin", "type": "class", "doc": "<p>An user from <code>Users</code>.</p>\n"}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.bio": {"fullname": "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.bio", "modulename": "pyflarum.extensions.flarum.FoF_UserBio", "qualname": "UserBioUserFromBulkMixin.bio", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canViewBio": {"fullname": "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canViewBio", "modulename": "pyflarum.extensions.flarum.FoF_UserBio", "qualname": "UserBioUserFromBulkMixin.canViewBio", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canEditBio": {"fullname": "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canEditBio", "modulename": "pyflarum.extensions.flarum.FoF_UserBio", "qualname": "UserBioUserFromBulkMixin.canEditBio", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"fullname": "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension", "modulename": "pyflarum.extensions.flarum.FoF_UserBio", "qualname": "UserBioExtension", "type": "class", "doc": "<p>A base class for mixing in custom classes (extensions) into another classes.</p>\n\n<h3 id=\"example-extension-code\">Example extension code:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">ExtensionMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.admin</span> <span class=\"kn\">import</span> <span class=\"n\">AdminExtension</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.session</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n\n\n<span class=\"c1\"># Lowecase:</span>\n<span class=\"n\">AUTHOR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yourname&quot;</span>\n<span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;extensionname&quot;</span>\n<span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">AUTHOR</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"c1\"># List of dependencies:</span>\n<span class=\"n\">SOFT_DEPENDENCIES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AdminExtension</span><span class=\"p\">]</span> <span class=\"c1\"># uses methods from this extension, but can run without it</span>\n<span class=\"n\">HARD_DEPENCENDIES</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n\n<span class=\"c1\"># I recommend to use the following naming pattern: `&lt;YourExtensionName&gt;&lt;ClassToMixin&gt;Mixin`</span>\n<span class=\"c1\"># Example:</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExampleFlarumUserMixin</span><span class=\"p\">(</span><span class=\"n\">FlarumUser</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            Calling `FlarumUser(&lt;...&gt;).example` would return this.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Example&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleExtension</span><span class=\"p\">(</span><span class=\"n\">ExtensionMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_dependencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"n\">SOFT_DEPENDENCIES</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"n\">HARD_DEPENCENDIES</span>\n        <span class=\"p\">}</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">FlarumUser</span><span class=\"p\">,</span> <span class=\"n\">ExampleFlarumUserMixin</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.FoF_UserBio", "qualname": "UserBioExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"fullname": "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin", "modulename": "pyflarum.extensions.flarum.FoF_UserBio", "qualname": "UserBioExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.FoF_UsernameRequest": {"fullname": "pyflarum.extensions.flarum.FoF_UsernameRequest", "modulename": "pyflarum.extensions.flarum.FoF_UsernameRequest", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin": {"fullname": "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin", "modulename": "pyflarum.extensions.flarum.FoF_UsernameRequest", "qualname": "UsernameRequestUserMixin", "type": "class", "doc": "<p>An user from <code>Users</code>.</p>\n"}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin.usernameHistory": {"fullname": "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin.usernameHistory", "modulename": "pyflarum.extensions.flarum.FoF_UsernameRequest", "qualname": "UsernameRequestUserMixin.usernameHistory", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"fullname": "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension", "modulename": "pyflarum.extensions.flarum.FoF_UsernameRequest", "qualname": "UsernameRequestExtension", "type": "class", "doc": "<p>A base class for mixing in custom classes (extensions) into another classes.</p>\n\n<h3 id=\"example-extension-code\">Example extension code:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">ExtensionMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.admin</span> <span class=\"kn\">import</span> <span class=\"n\">AdminExtension</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.session</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n\n\n<span class=\"c1\"># Lowecase:</span>\n<span class=\"n\">AUTHOR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yourname&quot;</span>\n<span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;extensionname&quot;</span>\n<span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">AUTHOR</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"c1\"># List of dependencies:</span>\n<span class=\"n\">SOFT_DEPENDENCIES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AdminExtension</span><span class=\"p\">]</span> <span class=\"c1\"># uses methods from this extension, but can run without it</span>\n<span class=\"n\">HARD_DEPENCENDIES</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n\n<span class=\"c1\"># I recommend to use the following naming pattern: `&lt;YourExtensionName&gt;&lt;ClassToMixin&gt;Mixin`</span>\n<span class=\"c1\"># Example:</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExampleFlarumUserMixin</span><span class=\"p\">(</span><span class=\"n\">FlarumUser</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            Calling `FlarumUser(&lt;...&gt;).example` would return this.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Example&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleExtension</span><span class=\"p\">(</span><span class=\"n\">ExtensionMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_dependencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"n\">SOFT_DEPENDENCIES</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"n\">HARD_DEPENCENDIES</span>\n        <span class=\"p\">}</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">FlarumUser</span><span class=\"p\">,</span> <span class=\"n\">ExampleFlarumUserMixin</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.FoF_UsernameRequest", "qualname": "UsernameRequestExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"fullname": "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin", "modulename": "pyflarum.extensions.flarum.FoF_UsernameRequest", "qualname": "UsernameRequestExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Malago_Achievements": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.Achievement", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "Achievement", "type": "class", "doc": "<p>An achievement (Malago's Achievements extension).</p>\n"}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.name": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.Achievement.name", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "Achievement.name", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.description": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.Achievement.description", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "Achievement.description", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.computation": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.Achievement.computation", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "Achievement.computation", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.points": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.Achievement.points", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "Achievement.points", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.icon": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.Achievement.icon", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "Achievement.icon", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.rectangle": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.Achievement.rectangle", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "Achievement.rectangle", "type": "variable", "doc": "<p>No, I have no idea what this is either.</p>\n"}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.active": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.Achievement.active", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "Achievement.active", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.hidden": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.Achievement.hidden", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "Achievement.hidden", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.new": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.Achievement.new", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "Achievement.new", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "AchievementsForumMixin", "type": "class", "doc": "<p>Entire forum, lives under the main <code>/api</code> route.</p>\n"}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_post_footer": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_post_footer", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "AchievementsForumMixin.show_achievements_in_post_footer", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_user_card": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_user_card", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "AchievementsForumMixin.show_achievements_in_user_card", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "AchievementsAdminFlarumUserMixin", "type": "class", "doc": "<p>The main object that carries the Flarum session.</p>\n"}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.update_settings": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.update_settings", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "AchievementsAdminFlarumUserMixin.update_settings", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "show_achievement_list_in_each_post_footer", "show_achievement_list_in_user_badge"], "funcdef": "def"}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.create_achievement": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.create_achievement", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "AchievementsAdminFlarumUserMixin.create_achievement", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "name", "description", "computation", "points", "image_url_or_fa_icon", "active", "hidden"], "funcdef": "def"}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.get_all_achievements": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.get_all_achievements", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "AchievementsAdminFlarumUserMixin.get_all_achievements", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "AchievementsExtension", "type": "class", "doc": "<p>A base class for mixing in custom classes (extensions) into another classes.</p>\n\n<h3 id=\"example-extension-code\">Example extension code:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">ExtensionMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.admin</span> <span class=\"kn\">import</span> <span class=\"n\">AdminExtension</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.session</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n\n\n<span class=\"c1\"># Lowecase:</span>\n<span class=\"n\">AUTHOR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yourname&quot;</span>\n<span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;extensionname&quot;</span>\n<span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">AUTHOR</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"c1\"># List of dependencies:</span>\n<span class=\"n\">SOFT_DEPENDENCIES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AdminExtension</span><span class=\"p\">]</span> <span class=\"c1\"># uses methods from this extension, but can run without it</span>\n<span class=\"n\">HARD_DEPENCENDIES</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n\n<span class=\"c1\"># I recommend to use the following naming pattern: `&lt;YourExtensionName&gt;&lt;ClassToMixin&gt;Mixin`</span>\n<span class=\"c1\"># Example:</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExampleFlarumUserMixin</span><span class=\"p\">(</span><span class=\"n\">FlarumUser</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            Calling `FlarumUser(&lt;...&gt;).example` would return this.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Example&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleExtension</span><span class=\"p\">(</span><span class=\"n\">ExtensionMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_dependencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"n\">SOFT_DEPENDENCIES</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"n\">HARD_DEPENCENDIES</span>\n        <span class=\"p\">}</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">FlarumUser</span><span class=\"p\">,</span> <span class=\"n\">ExampleFlarumUserMixin</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "AchievementsExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"fullname": "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin", "modulename": "pyflarum.extensions.flarum.Malago_Achievements", "qualname": "AchievementsExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.watch": {"fullname": "pyflarum.extensions.watch", "modulename": "pyflarum.extensions.watch", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.extensions.watch.WatchFlarumUserMixin": {"fullname": "pyflarum.extensions.watch.WatchFlarumUserMixin", "modulename": "pyflarum.extensions.watch", "qualname": "WatchFlarumUserMixin", "type": "class", "doc": "<p>The main object that carries the Flarum session.</p>\n"}, "pyflarum.extensions.watch.WatchFlarumUserMixin.watch_notifications": {"fullname": "pyflarum.extensions.watch.WatchFlarumUserMixin.watch_notifications", "modulename": "pyflarum.extensions.watch", "qualname": "WatchFlarumUserMixin.watch_notifications", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "on_notification", "interval", "auto_mark_as_read", "kwargs"], "funcdef": "def"}, "pyflarum.extensions.watch.WatchExtension": {"fullname": "pyflarum.extensions.watch.WatchExtension", "modulename": "pyflarum.extensions.watch", "qualname": "WatchExtension", "type": "class", "doc": "<p>A base class for mixing in custom classes (extensions) into another classes.</p>\n\n<h3 id=\"example-extension-code\">Example extension code:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">ExtensionMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.extensions.admin</span> <span class=\"kn\">import</span> <span class=\"n\">AdminExtension</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyflarum.session</span> <span class=\"kn\">import</span> <span class=\"n\">FlarumUser</span>\n\n\n<span class=\"c1\"># Lowecase:</span>\n<span class=\"n\">AUTHOR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yourname&quot;</span>\n<span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;extensionname&quot;</span>\n<span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">AUTHOR</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"c1\"># List of dependencies:</span>\n<span class=\"n\">SOFT_DEPENDENCIES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AdminExtension</span><span class=\"p\">]</span> <span class=\"c1\"># uses methods from this extension, but can run without it</span>\n<span class=\"n\">HARD_DEPENCENDIES</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n\n<span class=\"c1\"># I recommend to use the following naming pattern: `&lt;YourExtensionName&gt;&lt;ClassToMixin&gt;Mixin`</span>\n<span class=\"c1\"># Example:</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExampleFlarumUserMixin</span><span class=\"p\">(</span><span class=\"n\">FlarumUser</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            Calling `FlarumUser(&lt;...&gt;).example` would return this.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Example&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleExtension</span><span class=\"p\">(</span><span class=\"n\">ExtensionMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_dependencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"n\">SOFT_DEPENDENCIES</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"n\">HARD_DEPENCENDIES</span>\n        <span class=\"p\">}</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">FlarumUser</span><span class=\"p\">,</span> <span class=\"n\">ExampleFlarumUserMixin</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "pyflarum.extensions.watch.WatchExtension.__init__": {"fullname": "pyflarum.extensions.watch.WatchExtension.__init__", "modulename": "pyflarum.extensions.watch", "qualname": "WatchExtension.__init__", "type": "function", "doc": "<h3 id=\"parameters\">Parameters:</h3>\n\n<ul>\n<li><code>forum_url</code> - the forum URL that you want the bot to fetch/update data from. This mustn't end with trailing slash (e. g.: https://domain.tld/ - wrong; https://domain.tld - correct).</li>\n<li><code>username_or_email</code> - optional. The username or E-mail address to log into. If <code>None</code>, then the bot doesn't login.</li>\n<li><code>password</code> - optional. The user's password. If <code>None</code>, then the bot doesn't login.</li>\n<li><code>api_endpoint</code> - the API endpoint of the forum, without slashes. This can be specified in Flarum's <code>config.php</code> and normally forums don't need to change the default <code>'api'</code></li>\n<li><code>user_agent</code> - the user agent that will be used to make all requests. Defaults to <code>pyflarum &lt;version&gt;</code>.</li>\n<li><code>session_object</code> - the <code>Session</code> object to make requests with. You can pass any object that supports all operations from the <a href=\"https://pypi.org/project/requests/\">requests</a> library, check <a href=\"https://pypi.org/project/requests-cache/\">requests_cache</a> as an example.</li>\n<li><code>extensions</code> - a list of <code>ExtensionMixin</code> classes. These are monkey-patched on initialization. Learn more about <a href=\"https://cwkevo.github.io/pyflarum/docs/#extensions\">extensions</a>.\n```</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"fullname": "pyflarum.extensions.watch.WatchExtension.get_dependencies", "modulename": "pyflarum.extensions.watch", "qualname": "WatchExtension.get_dependencies", "type": "function", "doc": "<p>This should return the following <code>dict</code>:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;hard&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;soft&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">class</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>A dependency is anything that you can pass into <code>FlarumUser(extensions=[...])</code> (e. g. an extension class).</p>\n\n<h4 id=\"hard-dependencies\">Hard-dependencies:</h4>\n\n<ul>\n<li>Will raise an error when they're not found in the initialized <code>FlarumUser</code> object. It is impossible for the extension\nto function without these.</li>\n</ul>\n\n<h4 id=\"soft-dependencies\">Soft-dependencies:</h4>\n\n<ul>\n<li>Will raise just a warning. It is possible for the extension to function without these, although with limitations\n(such that some functions might be unavailable).</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.extensions.watch.WatchExtension.mixin": {"fullname": "pyflarum.extensions.watch.WatchExtension.mixin", "modulename": "pyflarum.extensions.watch", "qualname": "WatchExtension.mixin", "type": "function", "doc": "<p>A function to mix-in/merge properties, methods, functions, etc... of one class into another.</p>\n\n<p>This skips all functions and properties starting with <code>__</code> (double underscore), unless <code>skip_protected</code> is False.</p>\n\n<p>This sets/overwrites attributes of <code>class_to_patch</code> to attributes of\n<code>class_to_mix_in</code> (monkey-patch).</p>\n\n<h3 id=\"example\">Example:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">mixin</span><span class=\"p\">(</span><span class=\"n\">myclass</span><span class=\"p\">,</span> <span class=\"n\">pyflarum_class</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum": {"fullname": "pyflarum.flarum", "modulename": "pyflarum.flarum", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.flarum.core": {"fullname": "pyflarum.flarum.core", "modulename": "pyflarum.flarum.core", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.flarum.core.BaseFlarumObject": {"fullname": "pyflarum.flarum.core.BaseFlarumObject", "modulename": "pyflarum.flarum.core", "qualname": "BaseFlarumObject", "type": "class", "doc": "<p>The base Flarum object - all API objects have properties of this object.</p>\n"}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"fullname": "pyflarum.flarum.core.BaseFlarumObject.__init__", "modulename": "pyflarum.flarum.core", "qualname": "BaseFlarumObject.__init__", "type": "function", "doc": "<h3 id=\"parameters\">Parameters:</h3>\n\n<ul>\n<li><code>user</code> - the <code>pyflarum.session.FlarumUser</code> object, required to make additional API calls.</li>\n<li><code>_fetched_data</code> - the JSON data that was fetched from the API.</li>\n</ul>\n\n<p>I strongly discourage from forging objects this way, unless you are creating an extension.</p>\n", "parameters": ["self", "user", "_fetched_data"], "funcdef": "def"}, "pyflarum.flarum.core.BaseFlarumObject.data": {"fullname": "pyflarum.flarum.core.BaseFlarumObject.data", "modulename": "pyflarum.flarum.core", "qualname": "BaseFlarumObject.data", "type": "variable", "doc": "<p>A raw <code>dict</code> of the object's data.</p>\n"}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"fullname": "pyflarum.flarum.core.BaseFlarumBulkObject", "modulename": "pyflarum.flarum.core", "qualname": "BaseFlarumBulkObject", "type": "class", "doc": "<p>The base object for Flarum \"bulk\" objects - all API objects\nthat contain other objects have these properties.</p>\n\n<p>Examples of bulk objects:</p>\n\n<ul>\n<li><code>pyflarum.flarum.core.users.UserFromBulk</code></li>\n<li><code>pyflarum.flarum.core.discussions.DiscussionFromBulk</code></li>\n<li><code>pyflarum.flarum.core.posts.PostFromBulk</code></li>\n</ul>\n"}, "pyflarum.flarum.core.BaseFlarumBulkObject.__init__": {"fullname": "pyflarum.flarum.core.BaseFlarumBulkObject.__init__", "modulename": "pyflarum.flarum.core", "qualname": "BaseFlarumBulkObject.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "user", "_fetched_data", "_listclass", "_required_type"], "funcdef": "def"}, "pyflarum.flarum.core.BaseFlarumBulkObject.first_link": {"fullname": "pyflarum.flarum.core.BaseFlarumBulkObject.first_link", "modulename": "pyflarum.flarum.core", "qualname": "BaseFlarumBulkObject.first_link", "type": "variable", "doc": "<p>First link in the API.</p>\n"}, "pyflarum.flarum.core.BaseFlarumBulkObject.previous_link": {"fullname": "pyflarum.flarum.core.BaseFlarumBulkObject.previous_link", "modulename": "pyflarum.flarum.core", "qualname": "BaseFlarumBulkObject.previous_link", "type": "variable", "doc": "<p>Previous link in the API.</p>\n"}, "pyflarum.flarum.core.BaseFlarumBulkObject.next_link": {"fullname": "pyflarum.flarum.core.BaseFlarumBulkObject.next_link", "modulename": "pyflarum.flarum.core", "qualname": "BaseFlarumBulkObject.next_link", "type": "variable", "doc": "<p>Next link in the API.</p>\n"}, "pyflarum.flarum.core.BaseFlarumIndividualObject": {"fullname": "pyflarum.flarum.core.BaseFlarumIndividualObject", "modulename": "pyflarum.flarum.core", "qualname": "BaseFlarumIndividualObject", "type": "class", "doc": "<p>Base object for Flarum \"individual\" objects - all\nobjects have these properties.</p>\n\n<p>Examples of \"individual\" objects:</p>\n\n<ul>\n<li><code>pyflarum.flarum.core.discussions.Discussion</code></li>\n<li><code>pyflarum.flarum.core.posts.Post</code></li>\n<li><code>pyflarum.flarum.core.PostFromDiscussion</code></li>\n</ul>\n"}, "pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"fullname": "pyflarum.flarum.core.BaseFlarumIndividualObject.type", "modulename": "pyflarum.flarum.core", "qualname": "BaseFlarumIndividualObject.type", "type": "variable", "doc": "<p>The type of the object.</p>\n\n<p>This should always be the plural form of Flarum's name of the object, e. g. <code>discussions</code>, <code>posts</code>, <code>users</code>, etc...</p>\n"}, "pyflarum.flarum.core.BaseFlarumIndividualObject.id": {"fullname": "pyflarum.flarum.core.BaseFlarumIndividualObject.id", "modulename": "pyflarum.flarum.core", "qualname": "BaseFlarumIndividualObject.id", "type": "variable", "doc": "<p>The <code>int</code> ID of the object. This should always be unique for the object's type.</p>\n"}, "pyflarum.flarum.core.BaseFlarumIndividualObject.attributes": {"fullname": "pyflarum.flarum.core.BaseFlarumIndividualObject.attributes", "modulename": "pyflarum.flarum.core", "qualname": "BaseFlarumIndividualObject.attributes", "type": "variable", "doc": "<p>Raw <code>dict</code> of the object's attributes.</p>\n"}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"fullname": "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships", "modulename": "pyflarum.flarum.core", "qualname": "BaseFlarumIndividualObject.relationships", "type": "variable", "doc": "<p>Raw <code>dict</code> of the object's relationships with\nother objects.</p>\n\n<p>This contains references to objects in the included data.\nRead more about <a href=\"https://cwkevo.github.io/pyflarum/docs/#included-data\">included data</a>.</p>\n"}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"fullname": "pyflarum.flarum.core.BaseFlarumIndividualObject.included", "modulename": "pyflarum.flarum.core", "qualname": "BaseFlarumIndividualObject.included", "type": "variable", "doc": "<p>Returns raw list of JSON included data.</p>\n\n<p>Learn more about included data <a href=\"https://cwkevo.github.io/pyflarum/docs/#included-data\">here</a>.</p>\n\n<p>Note: Not all \"individual\" objects have this property, usually the low-level ones (such as <code>PostFromX</code>, <code>DiscussionFromX</code>, etc...).</p>\n"}, "pyflarum.flarum.core.discussions": {"fullname": "pyflarum.flarum.core.discussions", "modulename": "pyflarum.flarum.core.discussions", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.flarum.core.discussions.PreparedDiscussion": {"fullname": "pyflarum.flarum.core.discussions.PreparedDiscussion", "modulename": "pyflarum.flarum.core.discussions", "qualname": "PreparedDiscussion", "type": "class", "doc": "<p>A prepared discussion that can be sent to the API.</p>\n"}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"fullname": "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__", "modulename": "pyflarum.flarum.core.discussions", "qualname": "PreparedDiscussion.__init__", "type": "function", "doc": "<h3 id=\"parameters\">Parameters:</h3>\n\n<ul>\n<li><code>user</code> - the <code>pyflarum.session.FlarumUser</code> object that will create the discussion\n(see <code>PreparedDiscussion.post()</code>).</li>\n<li><code>title</code> - the discussion's title.</li>\n<li><code>content</code> - discussion's content. You can use the traditional Flarum's markdown syntax.</li>\n</ul>\n", "parameters": ["self", "user", "title", "content"], "funcdef": "def"}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"fullname": "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict", "modulename": "pyflarum.flarum.core.discussions", "qualname": "PreparedDiscussion.to_dict", "type": "variable", "doc": "<p>Converts the discussion to a <code>dict</code>, so that\nit can be sent to the API.</p>\n\n<p>An extension might add additional data during runtime. This is the\nmost basic template that Flarum requires when creating a discussion.</p>\n"}, "pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"fullname": "pyflarum.flarum.core.discussions.PreparedDiscussion.post", "modulename": "pyflarum.flarum.core.discussions", "qualname": "PreparedDiscussion.post", "type": "function", "doc": "<p>Posts/creates the discussion. Raises <code>FlarumError</code> if it failed, otherwise the new <code>Discussion</code> is returned.\nThis is the same as <code>PreparedDiscussion.create()</code>.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"fullname": "pyflarum.flarum.core.discussions.PreparedDiscussion.create", "modulename": "pyflarum.flarum.core.discussions", "qualname": "PreparedDiscussion.create", "type": "function", "doc": "<p>Posts/creates the discussion. Raises <code>FlarumError</code> if it failed, otherwise the new <code>Discussion</code> is returned.\nThis is the same as <code>PreparedDiscussion.create()</code>.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.discussions.Discussions": {"fullname": "pyflarum.flarum.core.discussions.Discussions", "modulename": "pyflarum.flarum.core.discussions", "qualname": "Discussions", "type": "class", "doc": "<p>A data of multiple discussions fetched from <code>/api/discussions</code>.</p>\n"}, "pyflarum.flarum.core.discussions.Discussions.__init__": {"fullname": "pyflarum.flarum.core.discussions.Discussions.__init__", "modulename": "pyflarum.flarum.core.discussions", "qualname": "Discussions.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "user", "_fetched_data"], "funcdef": "def"}, "pyflarum.flarum.core.discussions.DiscussionFromNotification": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromNotification", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromNotification", "type": "class", "doc": "<p>A discussion from <code>Notification</code>. Contains the least\ndata from all of the discussion classes (see <a href=\"https://cwkevo.github.io/pyflarum/docs/#class-inheritance\">inheritance</a>).</p>\n"}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromNotification.get_full_data", "type": "function", "doc": "<p>Makes an additional API call to fetch the full data of the discussion, e. g.\nthe top-level discussion class (<code>Discussion</code>).</p>\n\n<p>Learn more about <a href=\"https://cwkevo.github.io/pyflarum/docs/#class-inheritance\">inheritance</a>.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.title": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromNotification.title", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromNotification.title", "type": "variable", "doc": "<p>Returns the discussion's title.</p>\n"}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromNotification.slug", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromNotification.slug", "type": "variable", "doc": "<p>Returns the discussion's slug\n(consists of ID and dash separated words from discussion's title,\ne. g. <code>123-some-title</code>).</p>\n"}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.hide": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromNotification.hide", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromNotification.hide", "type": "function", "doc": "<p>Hides the discussion.\nRaises <code>FlarumError</code> if it failed, otherwise the new discussion is returned.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromNotification.restore", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromNotification.restore", "type": "function", "doc": "<p>Restores the discussion (unhides).\nRaises <code>FlarumError</code> if it failed, otherwise the new discussion is returned.</p>\n\n<p><code>Discussion.unhide()</code> does the same thing.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromNotification.unhide", "type": "function", "doc": "<p>Restores the discussion (unhides).\nRaises <code>FlarumError</code> if it failed, otherwise the new discussion is returned.</p>\n\n<p><code>Discussion.unhide()</code> does the same thing.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromNotification.delete", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromNotification.delete", "type": "function", "doc": "<p>Deletes a discussion forever - this action is irreversible!\nReturns <code>True</code> on success, <code>FlarumError</code> otherwise.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk", "type": "class", "doc": "<p>A discussion from <code>Discussions</code>.</p>\n"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.url": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.url", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.url", "type": "variable", "doc": "<p>Returns the discussion's URL (including slug, if it's available).</p>\n"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.commentCount": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.commentCount", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.commentCount", "type": "variable", "doc": "<p>Obtains the comment count of the discussion.</p>\n\n<p>A comment is a post made by an user.</p>\n"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.participantCount": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.participantCount", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.participantCount", "type": "variable", "doc": "<p>The participant count of the discussion. This is\nthe number of all users that have participated in a\ndiscussion by posting.</p>\n"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.createdAt": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.createdAt", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.createdAt", "type": "variable", "doc": "<p>The <code>datetime</code> of when this discussion was created at.</p>\n"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostedAt": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostedAt", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.lastPostedAt", "type": "variable", "doc": "<p>The <code>datetime</code> of when the last post in this\ndiscussion was made, e. g. when was this\ndiscussion last updated at.</p>\n"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostNumber": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostNumber", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.lastPostNumber", "type": "variable", "doc": "<p>Returns the number of the newest post in the\ndiscussion.</p>\n"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadPostNumber": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadPostNumber", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.lastReadPostNumber", "type": "variable", "doc": "<p>Number of a post that you've last read in the discussion.</p>\n"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canReply": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.canReply", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.canReply", "type": "variable", "doc": "<p>Whether or not you are able to create a post in the discussion.</p>\n"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canRename": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.canRename", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.canRename", "type": "variable", "doc": "<p>Whether or not you are able to rename the discussion.</p>\n"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canDelete": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.canDelete", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.canDelete", "type": "variable", "doc": "<p>Whether or not you are able to delete the discussion.</p>\n"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canHide": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.canHide", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.canHide", "type": "variable", "doc": "<p>Whether or not you are able to hide the discussion.</p>\n"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadAt": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadAt", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.lastReadAt", "type": "variable", "doc": "<p>The <code>datetime</code> when you last read that discussion.</p>\n"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.isHidden": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.isHidden", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.isHidden", "type": "variable", "doc": "<p>Whether or not the discussion is hidden. This happens when\nyou delete the discussion for the first time.</p>\n"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.get_author", "type": "function", "doc": "<p>Obtains the author of the discussion.</p>\n\n<p>It returns <code>pyflarum.flarum.core.users.UserFromNotification</code> because it's JSON\ndata matches the data of user from notification. If no user is found, <code>None</code> is\nreturned.</p>\n\n<p>This works by fetching it from the <code>_parent_included</code> property.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.get_last_posted_user", "type": "function", "doc": "<p>Obtains the user that posted the latest post in the discussion.</p>\n\n<p>It returns <code>pyflarum.flarum.core.users.UserFromNotification</code> because it's JSON\ndata matches the data of user from notification. If no user is found, <code>None</code> is returned.</p>\n\n<p>This works by fetching it from the <code>_parent_included</code> property.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.get_first_post", "type": "function", "doc": "<p>Obtains the first post of the discussion. If no post is found,\n<code>None</code> is returned.</p>\n\n<p>This works by fetching it from the <code>_parent_included</code> property.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.hide": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.hide", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.hide", "type": "function", "doc": "<p>Hides the discussion from the sight of other unprivileged users\nthat are not worthy to view such thread.</p>\n", "parameters": ["self", "force"], "funcdef": "def"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.restore": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.restore", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.restore", "type": "function", "doc": "<p>Restores the discussion (unhides it), bringing it back to life.</p>\n", "parameters": ["self", "force"], "funcdef": "def"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.unhide": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.unhide", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.unhide", "type": "function", "doc": "<p>Restores the discussion (unhides it), bringing it back to life.</p>\n", "parameters": ["self", "force"], "funcdef": "def"}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"fullname": "pyflarum.flarum.core.discussions.DiscussionFromBulk.delete", "modulename": "pyflarum.flarum.core.discussions", "qualname": "DiscussionFromBulk.delete", "type": "function", "doc": "<p>Scronches the discussion forever. This cannot be reverted.</p>\n\n<p>Use <code>force=True</code> to attempt to delete the discussion even if the API states that you can't.</p>\n", "parameters": ["self", "force"], "funcdef": "def"}, "pyflarum.flarum.core.discussions.Discussion": {"fullname": "pyflarum.flarum.core.discussions.Discussion", "modulename": "pyflarum.flarum.core.discussions", "qualname": "Discussion", "type": "class", "doc": "<p>A Flarum discussion, obtained directly from the API by ID.</p>\n\n<p>This is the top-level discussion object that contains all the properties of a discussion, and\ninherits properties from all previous discussion-like objects.</p>\n\n<p>Learn more about inheritance <a href=\"https://cwkevo.github.io/pyflarum/docs/#class-inheritance\">here</a></p>\n"}, "pyflarum.flarum.core.discussions.Discussion.included": {"fullname": "pyflarum.flarum.core.discussions.Discussion.included", "modulename": "pyflarum.flarum.core.discussions", "qualname": "Discussion.included", "type": "variable", "doc": "<p>Returns raw list of JSON included data.</p>\n\n<p>Learn more about included data <a href=\"https://cwkevo.github.io/pyflarum/docs/#included-data\">here</a></p>\n"}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"fullname": "pyflarum.flarum.core.discussions.Discussion.get_author", "modulename": "pyflarum.flarum.core.discussions", "qualname": "Discussion.get_author", "type": "function", "doc": "<p>Obtains the discussion's author, AKA. the author\nof the post with number 1 in a discussion.</p>\n\n<p><code>mode</code> allows you to specify the mode that is used to determine whether or not the post is the first post\nof the discussion.</p>\n\n<ul>\n<li><code>'first_number'</code> - checks if the number of the post is 1 - if yes, it fetches that post's author.</li>\n<li><code>Any</code> - if anything other than <code>'first_number'</code> is passed (e. g. `'first_user``, but this can be anything), then this\nreturns the author of the first post in the JSON.\nI am not sure how reliable is this, and whether or not the posts are actually ordered correctly in the API, so it's\nprobably a good idea to also check if the number of the post is 1 - but then again, what if the first post gets removed?</li>\n</ul>\n", "parameters": ["self", "mode"], "funcdef": "def"}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"fullname": "pyflarum.flarum.core.discussions.Discussion.get_posts", "modulename": "pyflarum.flarum.core.discussions", "qualname": "Discussion.get_posts", "type": "function", "doc": "<p>Returns a list of <code>pyflarum.flarum.core.posts.PostFromBulk</code> objects.</p>\n\n<p>It might seem strange why this doesn't return <code>pyflarum.flarum.core.posts.PostFromDiscussion</code> instead,\nbut these posts are in fact identical to <code>pyflarum.flarum.core.posts.PostFromBulk</code>, that's why they are returned.</p>\n\n<p><code>pyflarum.flarum.core.posts.PostFromDiscussion</code> comes from <code>pyflarum.flarum.core.discussions.DiscussionFromBulk</code> instead.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"fullname": "pyflarum.flarum.core.discussions.Discussion.get_first_post", "modulename": "pyflarum.flarum.core.discussions", "qualname": "Discussion.get_first_post", "type": "function", "doc": "<p>The <code>Discussion</code> object does not have the first post's JSON data in it's own JSON. Because of Python's subclass inheritance, this\nfunction was included in <code>Discussion</code>, but it does not work!</p>\n\n<h3 id=\"alternative\">Alternative:</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">discussion</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">get_discussion_by_id</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">first_post</span> <span class=\"o\">=</span> <span class=\"n\">discussion</span><span class=\"o\">.</span><span class=\"n\">get_posts</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</code></pre></div>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.filters": {"fullname": "pyflarum.flarum.core.filters", "modulename": "pyflarum.flarum.core.filters", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.flarum.core.filters.Filter": {"fullname": "pyflarum.flarum.core.filters.Filter", "modulename": "pyflarum.flarum.core.filters", "qualname": "Filter", "type": "class", "doc": "<p>Represents a Flarum API filter as a <code>dict</code>.</p>\n\n<p>It allows you to filter discussions without having to manually specify URL parameters.</p>\n"}, "pyflarum.flarum.core.filters.Filter.__init__": {"fullname": "pyflarum.flarum.core.filters.Filter.__init__", "modulename": "pyflarum.flarum.core.filters", "qualname": "Filter.__init__", "type": "function", "doc": "<ul>\n<li><code>order_by</code> - gets passed into <code>?sort=</code> parameter. Common values are <code>commentCount</code>, <code>createdAt</code> and their reverse/negated values (prefixed with <code>-</code>)</li>\n<li><code>query</code> - the search query, passed into <code>?filter[q]=</code>. This can be a string. Flarum search bar uses this. Gambits such as <code>author:username</code> are supported.</li>\n<li><code>ids</code> - fetches entries with specific ids, passed into <code>?filter[id]=</code>. This is a list, that is then converted into comma separated string.</li>\n<li><code>limit</code> - limit of entires to fetch. Flarum (by default) allows a max. of 50 entries to be fetched at once. Passed into <code>?page[limit]=</code></li>\n<li><code>page</code> - fetch a specific page of entires. This is actually an offset - which is determined by multiplying <code>page</code> with <code>limit</code> (see above).</li>\n<li><code>include</code> - include specific entries. See <a href=\"https://cwkevo.github.io/pyflarum/docs/#included-data\">included data</a>. You will likely never use this.</li>\n<li><code>additional_data</code> - this is a <code>dict</code> (<code>parameter: value</code>) of additional search parameters that you might want to use. This can be used to overwrite previous filters.</li>\n</ul>\n", "parameters": ["self", "order_by", "query", "ids", "limit", "page", "include", "additional_data"], "funcdef": "def"}, "pyflarum.flarum.core.filters.Filter.to_dict": {"fullname": "pyflarum.flarum.core.filters.Filter.to_dict", "modulename": "pyflarum.flarum.core.filters", "qualname": "Filter.to_dict", "type": "variable", "doc": "<p>Converts the filter to a <code>dict</code>, so that\nit can be sent to the API (<code>requests</code> module, see <a href=\"https://docs.python-requests.org/en/master/user/quickstart/#passing-parameters-in-urls\">\"Passing parameters in URLs\"</a>).</p>\n\n<p>An extension might add additional filter data after the filter was initialized\n(for example: <code>absolutely_all</code> needs to update page number to continuously yield results).</p>\n"}, "pyflarum.flarum.core.forum": {"fullname": "pyflarum.flarum.core.forum", "modulename": "pyflarum.flarum.core.forum", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.flarum.core.forum.Forum": {"fullname": "pyflarum.flarum.core.forum.Forum", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum", "type": "class", "doc": "<p>Entire forum, lives under the main <code>/api</code> route.</p>\n"}, "pyflarum.flarum.core.forum.Forum.title": {"fullname": "pyflarum.flarum.core.forum.Forum.title", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.title", "type": "variable", "doc": "<p>The forum's title.</p>\n"}, "pyflarum.flarum.core.forum.Forum.description": {"fullname": "pyflarum.flarum.core.forum.Forum.description", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.description", "type": "variable", "doc": "<p>The description of the forum.</p>\n"}, "pyflarum.flarum.core.forum.Forum.showLanguageSelector": {"fullname": "pyflarum.flarum.core.forum.Forum.showLanguageSelector", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.showLanguageSelector", "type": "variable", "doc": "<p>Whether or not the language selector is available.</p>\n"}, "pyflarum.flarum.core.forum.Forum.baseUrl": {"fullname": "pyflarum.flarum.core.forum.Forum.baseUrl", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.baseUrl", "type": "variable", "doc": "<p>Base URL of the forum/where the forum is located at.</p>\n"}, "pyflarum.flarum.core.forum.Forum.basePath": {"fullname": "pyflarum.flarum.core.forum.Forum.basePath", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.basePath", "type": "variable", "doc": "<p>Base path to the forum.</p>\n"}, "pyflarum.flarum.core.forum.Forum.debug": {"fullname": "pyflarum.flarum.core.forum.Forum.debug", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.debug", "type": "variable", "doc": "<p>Whether or not debug mode is enabled.</p>\n"}, "pyflarum.flarum.core.forum.Forum.apiUrl": {"fullname": "pyflarum.flarum.core.forum.Forum.apiUrl", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.apiUrl", "type": "variable", "doc": "<p>The API URL of the forum.</p>\n"}, "pyflarum.flarum.core.forum.Forum.welcomeTitle": {"fullname": "pyflarum.flarum.core.forum.Forum.welcomeTitle", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.welcomeTitle", "type": "variable", "doc": "<p>The title of the welcome message box of the forum.</p>\n"}, "pyflarum.flarum.core.forum.Forum.welcomeMessage": {"fullname": "pyflarum.flarum.core.forum.Forum.welcomeMessage", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.welcomeMessage", "type": "variable", "doc": "<p>The welcome message of the forum (shown in the welcome box).</p>\n"}, "pyflarum.flarum.core.forum.Forum.themePrimaryColor": {"fullname": "pyflarum.flarum.core.forum.Forum.themePrimaryColor", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.themePrimaryColor", "type": "variable", "doc": "<p>Forum's primary color in HEX format.</p>\n"}, "pyflarum.flarum.core.forum.Forum.themeSecondaryColor": {"fullname": "pyflarum.flarum.core.forum.Forum.themeSecondaryColor", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.themeSecondaryColor", "type": "variable", "doc": "<p>Forum's secondary color in HEX format.</p>\n"}, "pyflarum.flarum.core.forum.Forum.logoUrl": {"fullname": "pyflarum.flarum.core.forum.Forum.logoUrl", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.logoUrl", "type": "variable", "doc": "<p>URL to forum's logo.</p>\n"}, "pyflarum.flarum.core.forum.Forum.faviconUrl": {"fullname": "pyflarum.flarum.core.forum.Forum.faviconUrl", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.faviconUrl", "type": "variable", "doc": "<p>URL to forum's favicon.</p>\n"}, "pyflarum.flarum.core.forum.Forum.headerHtml": {"fullname": "pyflarum.flarum.core.forum.Forum.headerHtml", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.headerHtml", "type": "variable", "doc": "<p>The header HTML of the forum.</p>\n"}, "pyflarum.flarum.core.forum.Forum.footerHtml": {"fullname": "pyflarum.flarum.core.forum.Forum.footerHtml", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.footerHtml", "type": "variable", "doc": "<p>The footer HTML of the forum.</p>\n"}, "pyflarum.flarum.core.forum.Forum.allowSignUp": {"fullname": "pyflarum.flarum.core.forum.Forum.allowSignUp", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.allowSignUp", "type": "variable", "doc": "<p>Whether or not signup is allowed.</p>\n"}, "pyflarum.flarum.core.forum.Forum.defaultRoute": {"fullname": "pyflarum.flarum.core.forum.Forum.defaultRoute", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.defaultRoute", "type": "variable", "doc": "<p>The homepage of the forum (default route)</p>\n"}, "pyflarum.flarum.core.forum.Forum.canViewForum": {"fullname": "pyflarum.flarum.core.forum.Forum.canViewForum", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.canViewForum", "type": "variable", "doc": "<p>Whether or not you are allowed to view the forum.</p>\n"}, "pyflarum.flarum.core.forum.Forum.canStartDiscussion": {"fullname": "pyflarum.flarum.core.forum.Forum.canStartDiscussion", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.canStartDiscussion", "type": "variable", "doc": "<p>Whether or not you are allowed to start a discussion.</p>\n"}, "pyflarum.flarum.core.forum.Forum.canSearchUsers": {"fullname": "pyflarum.flarum.core.forum.Forum.canSearchUsers", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.canSearchUsers", "type": "variable", "doc": "<p>Whether or not you are able to search for users.</p>\n"}, "pyflarum.flarum.core.forum.Forum.adminUrl": {"fullname": "pyflarum.flarum.core.forum.Forum.adminUrl", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.adminUrl", "type": "variable", "doc": "<p>The administration panel URL of the forum.</p>\n"}, "pyflarum.flarum.core.forum.Forum.version": {"fullname": "pyflarum.flarum.core.forum.Forum.version", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.version", "type": "variable", "doc": "<p>The Flarum version this forum is running on.</p>\n"}, "pyflarum.flarum.core.forum.Forum.allowUsernameMentionFormat": {"fullname": "pyflarum.flarum.core.forum.Forum.allowUsernameMentionFormat", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.allowUsernameMentionFormat", "type": "variable", "doc": "<p></p>\n"}, "pyflarum.flarum.core.forum.Forum.get_groups": {"fullname": "pyflarum.flarum.core.forum.Forum.get_groups", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.get_groups", "type": "function", "doc": "<p>Obtains the forum groups.</p>\n\n<p>Returns a list of <code>Group</code> objects.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.forum.Forum.included": {"fullname": "pyflarum.flarum.core.forum.Forum.included", "modulename": "pyflarum.flarum.core.forum", "qualname": "Forum.included", "type": "variable", "doc": "<p>Returns raw list of JSON included data.</p>\n\n<p>Learn more about included data <a href=\"https://cwkevo.github.io/pyflarum/docs/#included-data\">here</a></p>\n"}, "pyflarum.flarum.core.groups": {"fullname": "pyflarum.flarum.core.groups", "modulename": "pyflarum.flarum.core.groups", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.flarum.core.groups.PreparedGroup": {"fullname": "pyflarum.flarum.core.groups.PreparedGroup", "modulename": "pyflarum.flarum.core.groups", "qualname": "PreparedGroup", "type": "class", "doc": "<p>Base object for Flarum \"individual\" objects - all\nobjects have these properties.</p>\n\n<p>Examples of \"individual\" objects:</p>\n\n<ul>\n<li><code>pyflarum.flarum.core.discussions.Discussion</code></li>\n<li><code>pyflarum.flarum.core.posts.Post</code></li>\n<li><code>pyflarum.flarum.core.PostFromDiscussion</code></li>\n</ul>\n"}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"fullname": "pyflarum.flarum.core.groups.PreparedGroup.__init__", "modulename": "pyflarum.flarum.core.groups", "qualname": "PreparedGroup.__init__", "type": "function", "doc": "<h3 id=\"parameters\">Parameters:</h3>\n\n<ul>\n<li><code>user</code> - the <code>pyflarum.session.FlarumUser</code> object, required to make additional API calls.</li>\n<li><code>_fetched_data</code> - the JSON data that was fetched from the API.</li>\n</ul>\n\n<p>I strongly discourage from forging objects this way, unless you are creating an extension.</p>\n", "parameters": ["self", "user", "nameSingular", "namePlural", "color", "icon", "isHidden"], "funcdef": "def"}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"fullname": "pyflarum.flarum.core.groups.PreparedGroup.to_dict", "modulename": "pyflarum.flarum.core.groups", "qualname": "PreparedGroup.to_dict", "type": "variable", "doc": "<p>Converts the group to a <code>dict</code>, so that\nit can be sent to the API.</p>\n\n<p>An extension might add additional data during runtime. This is the\nmost basic template that Flarum requires when creating a group.</p>\n"}, "pyflarum.flarum.core.groups.PreparedGroup.create": {"fullname": "pyflarum.flarum.core.groups.PreparedGroup.create", "modulename": "pyflarum.flarum.core.groups", "qualname": "PreparedGroup.create", "type": "function", "doc": "<p>Creates the group. Returns the created <code>Group</code>.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.groups.Groups": {"fullname": "pyflarum.flarum.core.groups.Groups", "modulename": "pyflarum.flarum.core.groups", "qualname": "Groups", "type": "class", "doc": "<p>A data of multiple groups fetched from the API.</p>\n"}, "pyflarum.flarum.core.groups.Groups.__init__": {"fullname": "pyflarum.flarum.core.groups.Groups.__init__", "modulename": "pyflarum.flarum.core.groups", "qualname": "Groups.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "user", "_fetched_data"], "funcdef": "def"}, "pyflarum.flarum.core.groups.Group": {"fullname": "pyflarum.flarum.core.groups.Group", "modulename": "pyflarum.flarum.core.groups", "qualname": "Group", "type": "class", "doc": "<p>A Flarum group.</p>\n"}, "pyflarum.flarum.core.groups.Group.nameSingular": {"fullname": "pyflarum.flarum.core.groups.Group.nameSingular", "modulename": "pyflarum.flarum.core.groups", "qualname": "Group.nameSingular", "type": "variable", "doc": "<p>Singular form of the group's name.</p>\n"}, "pyflarum.flarum.core.groups.Group.namePlural": {"fullname": "pyflarum.flarum.core.groups.Group.namePlural", "modulename": "pyflarum.flarum.core.groups", "qualname": "Group.namePlural", "type": "variable", "doc": "<p>Plural form of the group's name.</p>\n"}, "pyflarum.flarum.core.groups.Group.color": {"fullname": "pyflarum.flarum.core.groups.Group.color", "modulename": "pyflarum.flarum.core.groups", "qualname": "Group.color", "type": "variable", "doc": "<p>The color of the group.</p>\n"}, "pyflarum.flarum.core.groups.Group.icon": {"fullname": "pyflarum.flarum.core.groups.Group.icon", "modulename": "pyflarum.flarum.core.groups", "qualname": "Group.icon", "type": "variable", "doc": "<p><a href=\"https://fontawesome.com/v5.15/icons?d=gallery\">FontAwesome</a> icon of the group.</p>\n"}, "pyflarum.flarum.core.groups.Group.isHidden": {"fullname": "pyflarum.flarum.core.groups.Group.isHidden", "modulename": "pyflarum.flarum.core.groups", "qualname": "Group.isHidden", "type": "variable", "doc": "<p>Whether or not the group is hidden on the forum.</p>\n"}, "pyflarum.flarum.core.groups.Group.edit": {"fullname": "pyflarum.flarum.core.groups.Group.edit", "modulename": "pyflarum.flarum.core.groups", "qualname": "Group.edit", "type": "function", "doc": "<p>Edits the group with new <code>PreparedGroup</code>.</p>\n\n<p>Returns the edited <code>Group</code></p>\n", "parameters": ["self", "new_data"], "funcdef": "def"}, "pyflarum.flarum.core.groups.Group.delete": {"fullname": "pyflarum.flarum.core.groups.Group.delete", "modulename": "pyflarum.flarum.core.groups", "qualname": "Group.delete", "type": "function", "doc": "<p>Removes the group forever. This is irreversible!</p>\n\n<p>Returns <code>True</code> when the deletion was successful.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.notifications": {"fullname": "pyflarum.flarum.core.notifications", "modulename": "pyflarum.flarum.core.notifications", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.flarum.core.notifications.Notifications": {"fullname": "pyflarum.flarum.core.notifications.Notifications", "modulename": "pyflarum.flarum.core.notifications", "qualname": "Notifications", "type": "class", "doc": "<p>A data of multiple notifications fetched from the API.</p>\n"}, "pyflarum.flarum.core.notifications.Notifications.__init__": {"fullname": "pyflarum.flarum.core.notifications.Notifications.__init__", "modulename": "pyflarum.flarum.core.notifications", "qualname": "Notifications.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "user", "_fetched_data"], "funcdef": "def"}, "pyflarum.flarum.core.notifications.Notifications.mark_all_as_read": {"fullname": "pyflarum.flarum.core.notifications.Notifications.mark_all_as_read", "modulename": "pyflarum.flarum.core.notifications", "qualname": "Notifications.mark_all_as_read", "type": "function", "doc": "<p>Marks all notifications as read. Returns <code>True</code> when successful.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.notifications.Notification": {"fullname": "pyflarum.flarum.core.notifications.Notification", "modulename": "pyflarum.flarum.core.notifications", "qualname": "Notification", "type": "class", "doc": "<p>Notification.</p>\n"}, "pyflarum.flarum.core.notifications.Notification.contentType": {"fullname": "pyflarum.flarum.core.notifications.Notification.contentType", "modulename": "pyflarum.flarum.core.notifications", "qualname": "Notification.contentType", "type": "variable", "doc": "<p>The content type of the notification.</p>\n\n<p>Examples: <code>newPost</code>, <code>postLiked</code>, etc...</p>\n"}, "pyflarum.flarum.core.notifications.Notification.content": {"fullname": "pyflarum.flarum.core.notifications.Notification.content", "modulename": "pyflarum.flarum.core.notifications", "qualname": "Notification.content", "type": "variable", "doc": "<p>The <code>dict</code> of the notification's content.</p>\n"}, "pyflarum.flarum.core.notifications.Notification.new_post_number": {"fullname": "pyflarum.flarum.core.notifications.Notification.new_post_number", "modulename": "pyflarum.flarum.core.notifications", "qualname": "Notification.new_post_number", "type": "variable", "doc": "<p>The new number of the potential post that triggered\nthe notification.</p>\n"}, "pyflarum.flarum.core.notifications.Notification.reply_number": {"fullname": "pyflarum.flarum.core.notifications.Notification.reply_number", "modulename": "pyflarum.flarum.core.notifications", "qualname": "Notification.reply_number", "type": "variable", "doc": "<p>The number of the reply post that possibly triggered\nthe notification.</p>\n"}, "pyflarum.flarum.core.notifications.Notification.createdAt": {"fullname": "pyflarum.flarum.core.notifications.Notification.createdAt", "modulename": "pyflarum.flarum.core.notifications", "qualname": "Notification.createdAt", "type": "variable", "doc": "<p>The <code>datetime</code> of when was this notification triggered/created at.</p>\n"}, "pyflarum.flarum.core.notifications.Notification.isRead": {"fullname": "pyflarum.flarum.core.notifications.Notification.isRead", "modulename": "pyflarum.flarum.core.notifications", "qualname": "Notification.isRead", "type": "variable", "doc": "<p>Whether or not the notification was read by you.</p>\n"}, "pyflarum.flarum.core.notifications.Notification.from_user": {"fullname": "pyflarum.flarum.core.notifications.Notification.from_user", "modulename": "pyflarum.flarum.core.notifications", "qualname": "Notification.from_user", "type": "function", "doc": "<p>From which user does the notification originate from?</p>\n\n<p>Returns <code>pyflarum.flarum.core.users.UserFromNotification</code>.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.notifications.Notification.get_subject": {"fullname": "pyflarum.flarum.core.notifications.Notification.get_subject", "modulename": "pyflarum.flarum.core.notifications", "qualname": "Notification.get_subject", "type": "function", "doc": "<p>Returns the subject of the notification, either one of these:</p>\n\n<ul>\n<li><code>pyflarum.flarum.core.discussions.DiscussionFromNotification</code></li>\n<li><code>pyflarum.flarum.core.posts.PostFromNotification</code></li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.notifications.Notification.mark_as_read": {"fullname": "pyflarum.flarum.core.notifications.Notification.mark_as_read", "modulename": "pyflarum.flarum.core.notifications", "qualname": "Notification.mark_as_read", "type": "function", "doc": "<p>Marks the notification as read.</p>\n\n<p>Returns <code>True</code> when successful.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.posts": {"fullname": "pyflarum.flarum.core.posts", "modulename": "pyflarum.flarum.core.posts", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.flarum.core.posts.PreparedPost": {"fullname": "pyflarum.flarum.core.posts.PreparedPost", "modulename": "pyflarum.flarum.core.posts", "qualname": "PreparedPost", "type": "class", "doc": "<p>A prepared post that can be sent to the API.</p>\n"}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"fullname": "pyflarum.flarum.core.posts.PreparedPost.__init__", "modulename": "pyflarum.flarum.core.posts", "qualname": "PreparedPost.__init__", "type": "function", "doc": "<h3 id=\"parameters\">Parameters:</h3>\n\n<ul>\n<li><code>user</code> - the <code>pyflarum.session.FlarumUser</code> object that will create the post\n(see <code>PreparedPost.post()</code>).</li>\n<li><code>discussion</code> - any discussion that the post belongs to.</li>\n<li><code>content</code> - the post's content. You can use the traditional Flarum's markdown syntax.</li>\n</ul>\n", "parameters": ["self", "user", "discussion", "content"], "funcdef": "def"}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"fullname": "pyflarum.flarum.core.posts.PreparedPost.to_dict", "modulename": "pyflarum.flarum.core.posts", "qualname": "PreparedPost.to_dict", "type": "variable", "doc": "<p>Converts the post to a <code>dict</code>, so that\nit can be sent to the API.</p>\n\n<p>An extension might add additional data during runtime. This is the\nmost basic template that Flarum requires when creating a post.</p>\n"}, "pyflarum.flarum.core.posts.PreparedPost.post": {"fullname": "pyflarum.flarum.core.posts.PreparedPost.post", "modulename": "pyflarum.flarum.core.posts", "qualname": "PreparedPost.post", "type": "function", "doc": "<p>Posts/creates the post. Raises <code>FlarumError</code> on error, otherwise it returns the created <code>Post</code>.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.posts.PreparedPost.create": {"fullname": "pyflarum.flarum.core.posts.PreparedPost.create", "modulename": "pyflarum.flarum.core.posts", "qualname": "PreparedPost.create", "type": "function", "doc": "<p>Posts/creates the post. Raises <code>FlarumError</code> on error, otherwise it returns the created <code>Post</code>.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.posts.Posts": {"fullname": "pyflarum.flarum.core.posts.Posts", "modulename": "pyflarum.flarum.core.posts", "qualname": "Posts", "type": "class", "doc": "<p>A data of multiple posts fetched from <code>/api/posts</code>.</p>\n"}, "pyflarum.flarum.core.posts.Posts.__init__": {"fullname": "pyflarum.flarum.core.posts.Posts.__init__", "modulename": "pyflarum.flarum.core.posts", "qualname": "Posts.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "user", "_fetched_data"], "funcdef": "def"}, "pyflarum.flarum.core.posts.PostFromDiscussion": {"fullname": "pyflarum.flarum.core.posts.PostFromDiscussion", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromDiscussion", "type": "class", "doc": "<p>A post from <code>Discussion</code>.</p>\n"}, "pyflarum.flarum.core.posts.PostFromDiscussion.number": {"fullname": "pyflarum.flarum.core.posts.PostFromDiscussion.number", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromDiscussion.number", "type": "variable", "doc": "<p>The post's number/order in the discussion.</p>\n"}, "pyflarum.flarum.core.posts.PostFromDiscussion.createdAt": {"fullname": "pyflarum.flarum.core.posts.PostFromDiscussion.createdAt", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromDiscussion.createdAt", "type": "variable", "doc": "<p>The <code>datetime</code> of when was this post created.</p>\n"}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"fullname": "pyflarum.flarum.core.posts.PostFromDiscussion.contentType", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromDiscussion.contentType", "type": "variable", "doc": "<p>Post's content type. This is usually a <code>comment</code> for user-made posts,\nbut this can differ if it's actually a message that a post's tags changed, or\nthe discussion got moved elsewhere (these messages are treated as posts too by Flarum)</p>\n"}, "pyflarum.flarum.core.posts.PostFromDiscussion.is_comment": {"fullname": "pyflarum.flarum.core.posts.PostFromDiscussion.is_comment", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromDiscussion.is_comment", "type": "function", "doc": "<p>Whether or not the post is comment.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentHtml": {"fullname": "pyflarum.flarum.core.posts.PostFromDiscussion.contentHtml", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromDiscussion.contentHtml", "type": "variable", "doc": "<p>The HTML content of the post.</p>\n"}, "pyflarum.flarum.core.posts.PostFromDiscussion.hide": {"fullname": "pyflarum.flarum.core.posts.PostFromDiscussion.hide", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromDiscussion.hide", "type": "function", "doc": "<p>Hides the post. Raises <code>FlarumError</code> if it failed, otherwise the hidden <code>Post</code> is returned.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.posts.PostFromDiscussion.restore": {"fullname": "pyflarum.flarum.core.posts.PostFromDiscussion.restore", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromDiscussion.restore", "type": "function", "doc": "<p>Restores the post (unhides). Raises <code>FlarumError</code> if it failed, otherwise the restored <code>Post</code> is returned.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.posts.PostFromDiscussion.unhide": {"fullname": "pyflarum.flarum.core.posts.PostFromDiscussion.unhide", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromDiscussion.unhide", "type": "function", "doc": "<p>Restores the post (unhides). Raises <code>FlarumError</code> if it failed, otherwise the restored <code>Post</code> is returned.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.posts.PostFromDiscussion.delete": {"fullname": "pyflarum.flarum.core.posts.PostFromDiscussion.delete", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromDiscussion.delete", "type": "function", "doc": "<p>Removes the post forever.</p>\n\n<p>Returns <code>True</code> if the deletion was successful.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.posts.PostFromDiscussion.edit": {"fullname": "pyflarum.flarum.core.posts.PostFromDiscussion.edit", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromDiscussion.edit", "type": "function", "doc": "<p>Edits the post.</p>\n\n<p><code>new_post</code> has to be a <code>PreparedPost</code> object. Returns the <code>Post</code> after edit.</p>\n", "parameters": ["self", "new_post"], "funcdef": "def"}, "pyflarum.flarum.core.posts.PostFromNotification": {"fullname": "pyflarum.flarum.core.posts.PostFromNotification", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromNotification", "type": "class", "doc": "<p>A post from <code>Notification</code>.</p>\n"}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"fullname": "pyflarum.flarum.core.posts.PostFromNotification.content", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromNotification.content", "type": "variable", "doc": "<p>The post's content. Doesn't contain markdown, and is just plain-text.</p>\n\n<p>If not accessed from <code>pyflarum.flarum.core.posts.PostFromNotification</code>, then it can return a <code>dict</code> too\n(messages that indicate whether the discussion was renamed, locked, etc. are treated as posts too - the content\nbecomes the metadata, if that's the case)</p>\n"}, "pyflarum.flarum.core.posts.PostFromNotification.ipAddress": {"fullname": "pyflarum.flarum.core.posts.PostFromNotification.ipAddress", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromNotification.ipAddress", "type": "variable", "doc": "<p>The post's IP address.</p>\n\n<p>Returns <code>None</code> if you don't have the permissions to view IP address\nof the post.</p>\n"}, "pyflarum.flarum.core.posts.PostFromNotification.editedAt": {"fullname": "pyflarum.flarum.core.posts.PostFromNotification.editedAt", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromNotification.editedAt", "type": "variable", "doc": "<p>The <code>datetime</code> when was this post edited at.</p>\n"}, "pyflarum.flarum.core.posts.PostFromNotification.canEdit": {"fullname": "pyflarum.flarum.core.posts.PostFromNotification.canEdit", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromNotification.canEdit", "type": "variable", "doc": "<p>Whether or not you are able to edit this post.</p>\n"}, "pyflarum.flarum.core.posts.PostFromNotification.canDelete": {"fullname": "pyflarum.flarum.core.posts.PostFromNotification.canDelete", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromNotification.canDelete", "type": "variable", "doc": "<p>Whether or not you are able to delete this post.</p>\n"}, "pyflarum.flarum.core.posts.PostFromNotification.canHide": {"fullname": "pyflarum.flarum.core.posts.PostFromNotification.canHide", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromNotification.canHide", "type": "variable", "doc": "<p>Whether or not you are able to hide this post.</p>\n"}, "pyflarum.flarum.core.posts.PostFromNotification.url": {"fullname": "pyflarum.flarum.core.posts.PostFromNotification.url", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromNotification.url", "type": "variable", "doc": "<p>The post's URL.</p>\n"}, "pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"fullname": "pyflarum.flarum.core.posts.PostFromNotification.get_discussion", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromNotification.get_discussion", "type": "function", "doc": "<p>Obtains the discussion of the post.</p>\n\n<p>Returns <code>pyflarum.flarum.core.discussions.DiscussionFromNotification</code>, because its\nJSON data matches.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.posts.PostFromNotification.reply_to": {"fullname": "pyflarum.flarum.core.posts.PostFromNotification.reply_to", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromNotification.reply_to", "type": "function", "doc": "<p>Replies to this <code>Post</code> with another <code>PreparedPost</code>.</p>\n", "parameters": ["self", "post"], "funcdef": "def"}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"fullname": "pyflarum.flarum.core.posts.PostFromNotification.get_author", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromNotification.get_author", "type": "function", "doc": "<p>Obtains the post's author.</p>\n\n<p>Returns <code>pyflarum.flarum.core.users.UserFromBulk</code>, because its\nJSON data is the same.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.posts.PostFromNotification.edit": {"fullname": "pyflarum.flarum.core.posts.PostFromNotification.edit", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromNotification.edit", "type": "function", "doc": "<p>Edits the post. The new post should be a <code>PreparedPost</code> object.</p>\n", "parameters": ["self", "new_data"], "funcdef": "def"}, "pyflarum.flarum.core.posts.PostFromBulk": {"fullname": "pyflarum.flarum.core.posts.PostFromBulk", "modulename": "pyflarum.flarum.core.posts", "qualname": "PostFromBulk", "type": "class", "doc": "<p>A post from <code>Posts</code>.</p>\n"}, "pyflarum.flarum.core.posts.Post": {"fullname": "pyflarum.flarum.core.posts.Post", "modulename": "pyflarum.flarum.core.posts", "qualname": "Post", "type": "class", "doc": "<p>A Flarum post.</p>\n"}, "pyflarum.flarum.core.posts.Post.get_author": {"fullname": "pyflarum.flarum.core.posts.Post.get_author", "modulename": "pyflarum.flarum.core.posts", "qualname": "Post.get_author", "type": "function", "doc": "<p>Obtains the post's author.</p>\n\n<p>Returns <code>pyflarum.flarum.core.users.UserFromBulk</code>, because its\nJSON data is the same.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.flarum.core.users": {"fullname": "pyflarum.flarum.core.users", "modulename": "pyflarum.flarum.core.users", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.flarum.core.users.Users": {"fullname": "pyflarum.flarum.core.users.Users", "modulename": "pyflarum.flarum.core.users", "qualname": "Users", "type": "class", "doc": "<p>A data of multiple users fetched from the API.</p>\n"}, "pyflarum.flarum.core.users.Users.__init__": {"fullname": "pyflarum.flarum.core.users.Users.__init__", "modulename": "pyflarum.flarum.core.users", "qualname": "Users.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "user", "_fetched_data"], "funcdef": "def"}, "pyflarum.flarum.core.users.UserFromNotification": {"fullname": "pyflarum.flarum.core.users.UserFromNotification", "modulename": "pyflarum.flarum.core.users", "qualname": "UserFromNotification", "type": "class", "doc": "<p>An user from <code>BaseNotification</code></p>\n"}, "pyflarum.flarum.core.users.UserFromNotification.username": {"fullname": "pyflarum.flarum.core.users.UserFromNotification.username", "modulename": "pyflarum.flarum.core.users", "qualname": "UserFromNotification.username", "type": "variable", "doc": "<p>The user's username.</p>\n"}, "pyflarum.flarum.core.users.UserFromNotification.email": {"fullname": "pyflarum.flarum.core.users.UserFromNotification.email", "modulename": "pyflarum.flarum.core.users", "qualname": "UserFromNotification.email", "type": "variable", "doc": "<p>The user's E-mail, if you have permission to view it.</p>\n"}, "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"fullname": "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed", "modulename": "pyflarum.flarum.core.users", "qualname": "UserFromNotification.isEmailConfirmed", "type": "variable", "doc": "<p>Whether or not this user confirmed their E-mail address.</p>\n\n<p>You must have the permission to view the user's E-mail address\nin order to know this too in the first place.</p>\n"}, "pyflarum.flarum.core.users.UserFromNotification.displayName": {"fullname": "pyflarum.flarum.core.users.UserFromNotification.displayName", "modulename": "pyflarum.flarum.core.users", "qualname": "UserFromNotification.displayName", "type": "variable", "doc": "<p>The display name/nickname of the user.</p>\n"}, "pyflarum.flarum.core.users.UserFromNotification.avatarUrl": {"fullname": "pyflarum.flarum.core.users.UserFromNotification.avatarUrl", "modulename": "pyflarum.flarum.core.users", "qualname": "UserFromNotification.avatarUrl", "type": "variable", "doc": "<p>The user's avatar URL.</p>\n"}, "pyflarum.flarum.core.users.UserFromNotification.slug": {"fullname": "pyflarum.flarum.core.users.UserFromNotification.slug", "modulename": "pyflarum.flarum.core.users", "qualname": "UserFromNotification.slug", "type": "variable", "doc": "<p>The user's slug.</p>\n"}, "pyflarum.flarum.core.users.UserFromBulk": {"fullname": "pyflarum.flarum.core.users.UserFromBulk", "modulename": "pyflarum.flarum.core.users", "qualname": "UserFromBulk", "type": "class", "doc": "<p>An user from <code>Users</code>.</p>\n"}, "pyflarum.flarum.core.users.UserFromBulk.joinTime": {"fullname": "pyflarum.flarum.core.users.UserFromBulk.joinTime", "modulename": "pyflarum.flarum.core.users", "qualname": "UserFromBulk.joinTime", "type": "variable", "doc": "<p>The <code>datetime</code> of when the user had joined this forum.</p>\n"}, "pyflarum.flarum.core.users.UserFromBulk.discussionCount": {"fullname": "pyflarum.flarum.core.users.UserFromBulk.discussionCount", "modulename": "pyflarum.flarum.core.users", "qualname": "UserFromBulk.discussionCount", "type": "variable", "doc": "<p>The user's discussion count.</p>\n"}, "pyflarum.flarum.core.users.UserFromBulk.commentCount": {"fullname": "pyflarum.flarum.core.users.UserFromBulk.commentCount", "modulename": "pyflarum.flarum.core.users", "qualname": "UserFromBulk.commentCount", "type": "variable", "doc": "<p>The user's comment/post count.</p>\n"}, "pyflarum.flarum.core.users.UserFromBulk.canEdit": {"fullname": "pyflarum.flarum.core.users.UserFromBulk.canEdit", "modulename": "pyflarum.flarum.core.users", "qualname": "UserFromBulk.canEdit", "type": "variable", "doc": "<p>Whether or not you are able to edit this user.</p>\n"}, "pyflarum.flarum.core.users.UserFromBulk.canEditCredentials": {"fullname": "pyflarum.flarum.core.users.UserFromBulk.canEditCredentials", "modulename": "pyflarum.flarum.core.users", "qualname": "UserFromBulk.canEditCredentials", "type": "variable", "doc": "<p>Whether or not you are able to edit this user's credentials.</p>\n"}, "pyflarum.flarum.core.users.UserFromBulk.canEditGroups": {"fullname": "pyflarum.flarum.core.users.UserFromBulk.canEditGroups", "modulename": "pyflarum.flarum.core.users", "qualname": "UserFromBulk.canEditGroups", "type": "variable", "doc": "<p>Whether or not you are able to edit this user's groups.</p>\n"}, "pyflarum.flarum.core.users.UserFromBulk.canDelete": {"fullname": "pyflarum.flarum.core.users.UserFromBulk.canDelete", "modulename": "pyflarum.flarum.core.users", "qualname": "UserFromBulk.canDelete", "type": "variable", "doc": "<p>Whether or not you are able to scronch this user forever.</p>\n"}, "pyflarum.flarum.core.users.User": {"fullname": "pyflarum.flarum.core.users.User", "modulename": "pyflarum.flarum.core.users", "qualname": "User", "type": "class", "doc": "<p>An user that was fetched from the API.</p>\n"}, "pyflarum.flarum.core.users.MyUser": {"fullname": "pyflarum.flarum.core.users.MyUser", "modulename": "pyflarum.flarum.core.users", "qualname": "MyUser", "type": "class", "doc": "<p>Your user, contains fullest user data.</p>\n"}, "pyflarum.flarum.core.users.MyUser.markedAllAsReadAt": {"fullname": "pyflarum.flarum.core.users.MyUser.markedAllAsReadAt", "modulename": "pyflarum.flarum.core.users", "qualname": "MyUser.markedAllAsReadAt", "type": "variable", "doc": "<p>When did you mark all discussions as read.</p>\n"}, "pyflarum.flarum.core.users.MyUser.unreadNotificationCount": {"fullname": "pyflarum.flarum.core.users.MyUser.unreadNotificationCount", "modulename": "pyflarum.flarum.core.users", "qualname": "MyUser.unreadNotificationCount", "type": "variable", "doc": "<p>Amount of your unread notifications.</p>\n"}, "pyflarum.flarum.core.users.MyUser.newNotificationCount": {"fullname": "pyflarum.flarum.core.users.MyUser.newNotificationCount", "modulename": "pyflarum.flarum.core.users", "qualname": "MyUser.newNotificationCount", "type": "variable", "doc": "<p>Amount of your new notifications.</p>\n"}, "pyflarum.flarum.core.users.MyUser.preferences": {"fullname": "pyflarum.flarum.core.users.MyUser.preferences", "modulename": "pyflarum.flarum.core.users", "qualname": "MyUser.preferences", "type": "variable", "doc": "<p>A raw <code>dict</code> of your preferences (for notifications).</p>\n"}, "pyflarum.session": {"fullname": "pyflarum.session", "modulename": "pyflarum.session", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyflarum.session.FlarumSession": {"fullname": "pyflarum.session.FlarumSession", "modulename": "pyflarum.session", "qualname": "FlarumSession", "type": "class", "doc": "<p>The main object that carries the Flarum session.</p>\n"}, "pyflarum.session.FlarumSession.__init__": {"fullname": "pyflarum.session.FlarumSession.__init__", "modulename": "pyflarum.session", "qualname": "FlarumSession.__init__", "type": "function", "doc": "<h3 id=\"parameters\">Parameters:</h3>\n\n<ul>\n<li><code>forum_url</code> - the forum URL that you want the bot to fetch/update data from.</li>\n<li><code>username_or_email</code> - optional. The username or E-mail address to log into. If <code>None</code>, then the user isn't logged in.</li>\n<li><code>password</code> - optional. The user's password. If <code>None</code>, then the user isn't logged in.</li>\n<li><code>api_endpoint</code> - the API endpoint of the forum, without slashes. This can be specified in Flarum's <code>config.php</code> and normally forums don't need to change the default <code>'api'</code></li>\n<li><code>user_agent</code> - the user agent that will be used to make all requests. Defaults to <code>'pyflarum'</code>.</li>\n<li><code>session_object</code> - the <code>Session</code> object to make requests with. You can pass any object that supports all operations from the <a href=\"https://pypi.org/project/requests/\">requests</a> library, check <a href=\"https://pypi.org/project/requests-cache/\">requests_cache</a> as an example.\n```</li>\n</ul>\n", "parameters": ["self", "forum_url", "username_or_email", "password", "api_endpoint", "user_agent", "session_object"], "funcdef": "def"}, "pyflarum.session.FlarumSession.authenticate": {"fullname": "pyflarum.session.FlarumSession.authenticate", "modulename": "pyflarum.session", "qualname": "FlarumSession.authenticate", "type": "function", "doc": "<p>Authenticates your user. This can be run after <code>FlarumUser</code> was initialized, to switch to a different user. You can even change\n<code>FlarumUser.forum_url</code> to login to another forum.</p>\n\n<h3 id=\"parameters\">Parameters:</h3>\n\n<ul>\n<li><code>username_or_email</code> - optional. The username or E-mail address to log into. If <code>None</code>, then the user isn't logged in.</li>\n<li><code>password</code> - optional. The user's password. If <code>None</code>, then the user isn't logged in.</li>\n</ul>\n", "parameters": ["self", "username_or_email", "password"], "funcdef": "def"}, "pyflarum.session.FlarumSession.api_urls": {"fullname": "pyflarum.session.FlarumSession.api_urls", "modulename": "pyflarum.session", "qualname": "FlarumSession.api_urls", "type": "variable", "doc": "<p>Simple, hardcoded <code>'key: value'</code> <code>dict</code> of Flarum's API routes for quick access.</p>\n\n<p>API routes reference (old):\nhttps://github.com/flarum/flarum.github.io/blob/20322c0e6011e4f304ae7e95f41594a0b086bc27/_docs/api.md</p>\n"}, "pyflarum.session.FlarumUser": {"fullname": "pyflarum.session.FlarumUser", "modulename": "pyflarum.session", "qualname": "FlarumUser", "type": "class", "doc": "<p>The main object that carries the Flarum session.</p>\n"}, "pyflarum.session.FlarumUser.__init__": {"fullname": "pyflarum.session.FlarumUser.__init__", "modulename": "pyflarum.session", "qualname": "FlarumUser.__init__", "type": "function", "doc": "<h3 id=\"parameters\">Parameters:</h3>\n\n<ul>\n<li><code>forum_url</code> - the forum URL that you want the bot to fetch/update data from. This mustn't end with trailing slash (e. g.: https://domain.tld/ - wrong; https://domain.tld - correct).</li>\n<li><code>username_or_email</code> - optional. The username or E-mail address to log into. If <code>None</code>, then the bot doesn't login.</li>\n<li><code>password</code> - optional. The user's password. If <code>None</code>, then the bot doesn't login.</li>\n<li><code>api_endpoint</code> - the API endpoint of the forum, without slashes. This can be specified in Flarum's <code>config.php</code> and normally forums don't need to change the default <code>'api'</code></li>\n<li><code>user_agent</code> - the user agent that will be used to make all requests. Defaults to <code>pyflarum &lt;version&gt;</code>.</li>\n<li><code>session_object</code> - the <code>Session</code> object to make requests with. You can pass any object that supports all operations from the <a href=\"https://pypi.org/project/requests/\">requests</a> library, check <a href=\"https://pypi.org/project/requests-cache/\">requests_cache</a> as an example.</li>\n<li><code>extensions</code> - a list of <code>ExtensionMixin</code> classes. These are monkey-patched on initialization. Learn more about <a href=\"https://cwkevo.github.io/pyflarum/docs/#extensions\">extensions</a>.\n```</li>\n</ul>\n", "parameters": ["self", "extensions", "kwargs"], "funcdef": "def"}, "pyflarum.session.FlarumUser.get_forum_data": {"fullname": "pyflarum.session.FlarumUser.get_forum_data", "modulename": "pyflarum.session", "qualname": "FlarumUser.get_forum_data", "type": "function", "doc": "<p>Obtains the forum data, returns <code>Forum</code> object.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.session.FlarumUser.get_user_by_id": {"fullname": "pyflarum.session.FlarumUser.get_user_by_id", "modulename": "pyflarum.session", "qualname": "FlarumUser.get_user_by_id", "type": "function", "doc": "<p>Obtains a user by specific ID.</p>\n", "parameters": ["self", "id"], "funcdef": "def"}, "pyflarum.session.FlarumUser.get_discussion_by_id": {"fullname": "pyflarum.session.FlarumUser.get_discussion_by_id", "modulename": "pyflarum.session", "qualname": "FlarumUser.get_discussion_by_id", "type": "function", "doc": "<p>Obtains a discussion by specific ID.</p>\n", "parameters": ["self", "id"], "funcdef": "def"}, "pyflarum.session.FlarumUser.get_post_by_id": {"fullname": "pyflarum.session.FlarumUser.get_post_by_id", "modulename": "pyflarum.session", "qualname": "FlarumUser.get_post_by_id", "type": "function", "doc": "<p>Obtains a post by specific ID.</p>\n", "parameters": ["self", "id"], "funcdef": "def"}, "pyflarum.session.FlarumUser.get_discussions": {"fullname": "pyflarum.session.FlarumUser.get_discussions", "modulename": "pyflarum.session", "qualname": "FlarumUser.get_discussions", "type": "function", "doc": "<p>Obtains all discussions from <code>/api/discussions</code>, optionally filtering results by using <code>filter</code>.</p>\n", "parameters": ["self", "filter"], "funcdef": "def"}, "pyflarum.session.FlarumUser.get_posts": {"fullname": "pyflarum.session.FlarumUser.get_posts", "modulename": "pyflarum.session", "qualname": "FlarumUser.get_posts", "type": "function", "doc": "<p>Obtains all posts from <code>/api/posts</code>, optionally filtering results by using <code>filter</code>.</p>\n", "parameters": ["self", "filter"], "funcdef": "def"}, "pyflarum.session.FlarumUser.get_users": {"fullname": "pyflarum.session.FlarumUser.get_users", "modulename": "pyflarum.session", "qualname": "FlarumUser.get_users", "type": "function", "doc": "<p>Obtains all users from <code>/api/users</code>, optionally filtering results by using <code>filter</code>.</p>\n", "parameters": ["self", "filter"], "funcdef": "def"}, "pyflarum.session.FlarumUser.get_notifications": {"fullname": "pyflarum.session.FlarumUser.get_notifications", "modulename": "pyflarum.session", "qualname": "FlarumUser.get_notifications", "type": "function", "doc": "<p>Obtains all of your notifications from <code>/api/notifications</code>, optionally filtering results by using <code>filter</code>.</p>\n", "parameters": ["self", "filter"], "funcdef": "def"}, "pyflarum.session.FlarumUser.mark_all_discussions_as_read": {"fullname": "pyflarum.session.FlarumUser.mark_all_discussions_as_read", "modulename": "pyflarum.session", "qualname": "FlarumUser.mark_all_discussions_as_read", "type": "function", "doc": "<p>Marks all discussions as read.</p>\n\n<p>Specify <code>at</code> to mark discussions as read at a specific date (strange how this is allowed, might be\nbecause of timezones).</p>\n", "parameters": ["self", "at"], "funcdef": "def"}, "pyflarum.session.FlarumUser.mark_all_notifications_as_read": {"fullname": "pyflarum.session.FlarumUser.mark_all_notifications_as_read", "modulename": "pyflarum.session", "qualname": "FlarumUser.mark_all_notifications_as_read", "type": "function", "doc": "<p>Marks all notifications as read. Returns <code>True</code> when successful.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.session.FlarumUser.get_groups": {"fullname": "pyflarum.session.FlarumUser.get_groups", "modulename": "pyflarum.session", "qualname": "FlarumUser.get_groups", "type": "function", "doc": "<p>Obtains all groups of a forum from <code>/api/groups</code>.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.session.FlarumUser.update_user_info": {"fullname": "pyflarum.session.FlarumUser.update_user_info", "modulename": "pyflarum.session", "qualname": "FlarumUser.update_user_info", "type": "function", "doc": "<p>Updates the info of a user (this can be your user or someone else).</p>\n\n<p>If you are updating yourself, then <code>FlarumUser</code> is returned (with the new data).\nIf you are updating someone else, then the updated <code>User</code> is returned.</p>\n\n<h3 id=\"parameters\">Parameters:</h3>\n\n<ul>\n<li><code>user</code> - the user to update.</li>\n<li><code>new_username</code> - the user's new username.</li>\n<li><code>groups</code> - new groups of the user. This can either be a list of <code>pyflarum.flarum.core.groups.Group</code> objects,\nor just one <code>pyflarum.flarum.core.groups.Groups</code>, or a list of <code>str</code> or <code>int</code> representing the group IDs.</li>\n</ul>\n", "parameters": ["self", "user", "new_username", "groups"], "funcdef": "def"}, "pyflarum.session.FlarumUser.send_password_reset_email": {"fullname": "pyflarum.session.FlarumUser.send_password_reset_email", "modulename": "pyflarum.session", "qualname": "FlarumUser.send_password_reset_email", "type": "function", "doc": "<p>Allows you to send yourself a password reset E-mail.</p>\n", "parameters": ["self"], "funcdef": "def"}, "pyflarum.session.FlarumUser.update_preferences": {"fullname": "pyflarum.session.FlarumUser.update_preferences", "modulename": "pyflarum.session", "qualname": "FlarumUser.update_preferences", "type": "function", "doc": "<p>Updates an user's preferences.</p>\n\n<p>If no user is specified, then your user is updated.</p>\n", "parameters": ["self", "preferences", "user"], "funcdef": "def"}, "pyflarum.session.FlarumUser.change_email": {"fullname": "pyflarum.session.FlarumUser.change_email", "modulename": "pyflarum.session", "qualname": "FlarumUser.change_email", "type": "function", "doc": "<p>Changes your E-mail. If <code>user</code> is specified, then that user's E-mail is changed.</p>\n\n<p>If you are changing the E-mail of another user, you do not need to specify their password.</p>\n", "parameters": ["self", "new_email", "password_confirmation", "user"], "funcdef": "def"}, "pyflarum.session.FlarumUser.upload_user_avatar": {"fullname": "pyflarum.session.FlarumUser.upload_user_avatar", "modulename": "pyflarum.session", "qualname": "FlarumUser.upload_user_avatar", "type": "function", "doc": "<p>Uploads an avatar for yourself. If <code>user</code> is specified, then avatar of that user is changed.</p>\n", "parameters": ["self", "file", "user", "file_name", "file_type"], "funcdef": "def"}, "pyflarum.session.FlarumUser.remove_user_avatar": {"fullname": "pyflarum.session.FlarumUser.remove_user_avatar", "modulename": "pyflarum.session", "qualname": "FlarumUser.remove_user_avatar", "type": "function", "doc": "<p>Removes your user's avatar. If <code>user</code> is specified, then avatar of that user is removed.</p>\n", "parameters": ["self", "user"], "funcdef": "def"}}, "docInfo": {"pyflarum": {"qualname": 0, "fullname": 1, "doc": 1566}, "pyflarum.custom_types": {"qualname": 0, "fullname": 2, "doc": 16}, "pyflarum.datetime_conversions": {"qualname": 0, "fullname": 2, "doc": 0}, "pyflarum.datetime_conversions.flarum_to_datetime": {"qualname": 1, "fullname": 3, "doc": 19}, "pyflarum.datetime_conversions.datetime_to_flarum": {"qualname": 1, "fullname": 3, "doc": 18}, "pyflarum.error_handler": {"qualname": 0, "fullname": 2, "doc": 0}, "pyflarum.error_handler.FlarumError": {"qualname": 1, "fullname": 3, "doc": 5}, "pyflarum.error_handler.FlarumError.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "pyflarum.error_handler.MissingExtensionError": {"qualname": 1, "fullname": 3, "doc": 4}, "pyflarum.error_handler.MissingExtensionWarning": {"qualname": 1, "fullname": 3, "doc": 4}, "pyflarum.error_handler.parse_request": {"qualname": 1, "fullname": 3, "doc": 8}, "pyflarum.error_handler.handle_errors": {"qualname": 1, "fullname": 3, "doc": 12}, "pyflarum.extensions": {"qualname": 0, "fullname": 2, "doc": 0}, "pyflarum.extensions.ExtensionMixin": {"qualname": 1, "fullname": 3, "doc": 108}, "pyflarum.extensions.ExtensionMixin.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"qualname": 2, "fullname": 4, "doc": 55}, "pyflarum.extensions.ExtensionMixin.mixin": {"qualname": 2, "fullname": 4, "doc": 32}, "pyflarum.extensions.absolutely_all": {"qualname": 0, "fullname": 3, "doc": 0}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin": {"qualname": 1, "fullname": 4, "doc": 5}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users": {"qualname": 2, "fullname": 5, "doc": 10}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts": {"qualname": 2, "fullname": 5, "doc": 10}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions": {"qualname": 2, "fullname": 5, "doc": 10}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_notifications": {"qualname": 2, "fullname": 5, "doc": 8}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"qualname": 2, "fullname": 5, "doc": 29}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"qualname": 1, "fullname": 4, "doc": 23}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"qualname": 2, "fullname": 5, "doc": 55}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"qualname": 2, "fullname": 5, "doc": 32}, "pyflarum.extensions.admin": {"qualname": 0, "fullname": 3, "doc": 0}, "pyflarum.extensions.admin.MailSettings": {"qualname": 1, "fullname": 4, "doc": 24}, "pyflarum.extensions.admin.MailSettings.fields": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.MailSettings.mail": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.MailSettings.mailgun": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.MailSettings.mailgun_secret": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.MailSettings.mailgun_domain": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.MailSettings.log": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.MailSettings.smtp": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.MailSettings.mail_host": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.MailSettings.mail_port": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.MailSettings.mail_encryption": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.MailSettings.mail_username": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.MailSettings.mail_password": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.MailSettings.sending": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.MailSettings.errors": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.AdminFlarumUserMixin": {"qualname": 1, "fullname": 4, "doc": 5}, "pyflarum.extensions.admin.AdminFlarumUserMixin.enable_extension": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.AdminFlarumUserMixin.disable_extension": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.AdminFlarumUserMixin.clear_cache": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_forum_info": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.AdminFlarumUserMixin.get_mail_settings": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_mail_settings": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.AdminFlarumUserMixin.send_test_mail": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_appearance": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.AdminFlarumUserMixin.upload_logo": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.AdminFlarumUserMixin.remove_logo": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.AdminFlarumUserMixin.upload_favicon": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.AdminFlarumUserMixin.remove_favicon": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_header": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_footer": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_css": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.admin.AdminExtension": {"qualname": 1, "fullname": 4, "doc": 108}, "pyflarum.extensions.admin.AdminExtension.__init__": {"qualname": 2, "fullname": 5, "doc": 91}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"qualname": 2, "fullname": 5, "doc": 55}, "pyflarum.extensions.admin.AdminExtension.mixin": {"qualname": 2, "fullname": 5, "doc": 32}, "pyflarum.extensions.advanced_search": {"qualname": 0, "fullname": 3, "doc": 0}, "pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin": {"qualname": 1, "fullname": 4, "doc": 5}, "pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin.get_user_by_username": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"qualname": 1, "fullname": 4, "doc": 108}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"qualname": 2, "fullname": 5, "doc": 91}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"qualname": 2, "fullname": 5, "doc": 55}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"qualname": 2, "fullname": 5, "doc": 32}, "pyflarum.extensions.commands": {"qualname": 0, "fullname": 3, "doc": 0}, "pyflarum.extensions.commands.CommandsFlarumUserMixin": {"qualname": 1, "fullname": 4, "doc": 5}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.is_mentioned_in": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"qualname": 2, "fullname": 5, "doc": 13}, "pyflarum.extensions.commands.CommandsExtension": {"qualname": 1, "fullname": 4, "doc": 108}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"qualname": 2, "fullname": 5, "doc": 91}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"qualname": 2, "fullname": 5, "doc": 55}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"qualname": 2, "fullname": 5, "doc": 32}, "pyflarum.extensions.flarum": {"qualname": 0, "fullname": 3, "doc": 0}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canViewWarnings": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canManageWarnings": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canDeleteWarnings": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.visibleWarningCount": {"qualname": 2, "fullname": 6, "doc": 5}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension": {"qualname": 1, "fullname": 5, "doc": 4}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.replyTemplate": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.canManageReplyTemplates": {"qualname": 2, "fullname": 6, "doc": 5}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension": {"qualname": 1, "fullname": 5, "doc": 4}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.Blomstra_Realtime": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin.canViewWhoTypes": {"qualname": 2, "fullname": 6, "doc": 5}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.Flarum_Approval": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin": {"qualname": 1, "fullname": 5, "doc": 8}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin.isApproved": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.isApproved": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.canApprove": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve": {"qualname": 2, "fullname": 6, "doc": 12}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.Flarum_Flags": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin": {"qualname": 1, "fullname": 5, "doc": 7}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.canViewFlags": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.flagCount": {"qualname": 2, "fullname": 6, "doc": 6}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.guidelinesUrl": {"qualname": 2, "fullname": 6, "doc": 5}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin.canFlag": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.Flarum_Likes": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.like": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.unlike": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin.canLike": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin.get_liked_by": {"qualname": 2, "fullname": 6, "doc": 5}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.Flarum_Lock": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin": {"qualname": 1, "fullname": 5, "doc": 8}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.lock": {"qualname": 2, "fullname": 6, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.unlock": {"qualname": 2, "fullname": 6, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.isLocked": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.canLock": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.Flarum_Markdown": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin": {"qualname": 1, "fullname": 5, "doc": 7}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin.markdown_mdarea": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.Flarum_Sticky": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin": {"qualname": 1, "fullname": 5, "doc": 8}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.stick": {"qualname": 2, "fullname": 6, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.unstick": {"qualname": 2, "fullname": 6, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.isSticky": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.canSticky": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"qualname": 1, "fullname": 5, "doc": 108}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.Flarum_Subscriptions": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin": {"qualname": 1, "fullname": 5, "doc": 8}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.follow": {"qualname": 2, "fullname": 6, "doc": 5}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.unfollow": {"qualname": 2, "fullname": 6, "doc": 5}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"qualname": 2, "fullname": 6, "doc": 28}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin.subscription": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"qualname": 1, "fullname": 5, "doc": 108}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.Flarum_Suspend": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.canSuspend": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspendedUntil": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspend": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"qualname": 1, "fullname": 5, "doc": 108}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.Flarum_Tags": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.name": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.description": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.slug": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.color": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundUrl": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundMode": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.icon": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.discussionCount": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.position": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.defaultSort": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.isChild": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.isHidden": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.lastPostedAt": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.canStartDiscussion": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.canAddToDiscussion": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.subscription": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.template": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"qualname": 2, "fullname": 6, "doc": 14}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.get_parent_tag": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.restrict_permissions": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.unrestrict_permissions": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin": {"qualname": 1, "fullname": 5, "doc": 7}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.canBypassTagCounts": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minPrimaryTags": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxPrimaryTags": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minSecondaryTags": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxSecondaryTags": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.canTag": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.get_tags": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"qualname": 1, "fullname": 5, "doc": 108}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.FoF_BestAnswer": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin": {"qualname": 1, "fullname": 5, "doc": 8}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.hasBestAnswer": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.bestAnswerSetAt": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin.canSelectBestAnswer": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"qualname": 1, "fullname": 5, "doc": 108}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.FoF_Byobu": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditRecipients": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditUserRecipients": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditGroupRecipients": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.blocksPd": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.cannotBeDirectlyMessaged": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"qualname": 1, "fullname": 5, "doc": 108}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.FoF_Merge": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin.canMerge": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"qualname": 1, "fullname": 5, "doc": 108}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin.fof_prevent_necrobumping": {"qualname": 2, "fullname": 6, "doc": 2}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"qualname": 1, "fullname": 5, "doc": 108}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.FoF_Spamblock": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin.spamblock": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin.canSpamblock": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"qualname": 1, "fullname": 5, "doc": 108}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.FoF_Split": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin.canSplit": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"qualname": 1, "fullname": 5, "doc": 108}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.FoF_UserBio": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin": {"qualname": 1, "fullname": 5, "doc": 7}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin.max_bio_length": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin": {"qualname": 1, "fullname": 5, "doc": 5}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin.update_user_bio": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.bio": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canViewBio": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canEditBio": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"qualname": 1, "fullname": 5, "doc": 108}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.FoF_UsernameRequest": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin.usernameHistory": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"qualname": 1, "fullname": 5, "doc": 108}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.flarum.Malago_Achievements": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement": {"qualname": 1, "fullname": 5, "doc": 4}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.name": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.description": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.computation": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.points": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.icon": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.rectangle": {"qualname": 2, "fullname": 6, "doc": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.active": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.hidden": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.new": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin": {"qualname": 1, "fullname": 5, "doc": 7}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_post_footer": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_user_card": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin": {"qualname": 1, "fullname": 5, "doc": 5}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.update_settings": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.create_achievement": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.get_all_achievements": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"qualname": 1, "fullname": 5, "doc": 108}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"qualname": 2, "fullname": 6, "doc": 55}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"qualname": 2, "fullname": 6, "doc": 32}, "pyflarum.extensions.watch": {"qualname": 0, "fullname": 3, "doc": 0}, "pyflarum.extensions.watch.WatchFlarumUserMixin": {"qualname": 1, "fullname": 4, "doc": 5}, "pyflarum.extensions.watch.WatchFlarumUserMixin.watch_notifications": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.extensions.watch.WatchExtension": {"qualname": 1, "fullname": 4, "doc": 108}, "pyflarum.extensions.watch.WatchExtension.__init__": {"qualname": 2, "fullname": 5, "doc": 91}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"qualname": 2, "fullname": 5, "doc": 55}, "pyflarum.extensions.watch.WatchExtension.mixin": {"qualname": 2, "fullname": 5, "doc": 32}, "pyflarum.flarum": {"qualname": 0, "fullname": 2, "doc": 0}, "pyflarum.flarum.core": {"qualname": 0, "fullname": 3, "doc": 0}, "pyflarum.flarum.core.BaseFlarumObject": {"qualname": 1, "fullname": 4, "doc": 7}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"qualname": 2, "fullname": 5, "doc": 24}, "pyflarum.flarum.core.BaseFlarumObject.data": {"qualname": 2, "fullname": 5, "doc": 4}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"qualname": 1, "fullname": 4, "doc": 28}, "pyflarum.flarum.core.BaseFlarumBulkObject.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "pyflarum.flarum.core.BaseFlarumBulkObject.first_link": {"qualname": 2, "fullname": 5, "doc": 3}, "pyflarum.flarum.core.BaseFlarumBulkObject.previous_link": {"qualname": 2, "fullname": 5, "doc": 3}, "pyflarum.flarum.core.BaseFlarumBulkObject.next_link": {"qualname": 2, "fullname": 5, "doc": 3}, "pyflarum.flarum.core.BaseFlarumIndividualObject": {"qualname": 1, "fullname": 4, "doc": 24}, "pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"qualname": 2, "fullname": 5, "doc": 14}, "pyflarum.flarum.core.BaseFlarumIndividualObject.id": {"qualname": 2, "fullname": 5, "doc": 7}, "pyflarum.flarum.core.BaseFlarumIndividualObject.attributes": {"qualname": 2, "fullname": 5, "doc": 4}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"qualname": 2, "fullname": 5, "doc": 14}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"qualname": 2, "fullname": 5, "doc": 23}, "pyflarum.flarum.core.discussions": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.flarum.core.discussions.PreparedDiscussion": {"qualname": 1, "fullname": 5, "doc": 4}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"qualname": 2, "fullname": 6, "doc": 22}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"qualname": 2, "fullname": 6, "doc": 17}, "pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"qualname": 2, "fullname": 6, "doc": 12}, "pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"qualname": 2, "fullname": 6, "doc": 12}, "pyflarum.flarum.core.discussions.Discussions": {"qualname": 1, "fullname": 5, "doc": 5}, "pyflarum.flarum.core.discussions.Discussions.__init__": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.flarum.core.discussions.DiscussionFromNotification": {"qualname": 1, "fullname": 5, "doc": 8}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"qualname": 2, "fullname": 6, "doc": 18}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.title": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"qualname": 2, "fullname": 6, "doc": 14}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.hide": {"qualname": 2, "fullname": 6, "doc": 9}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"qualname": 2, "fullname": 6, "doc": 14}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"qualname": 2, "fullname": 6, "doc": 14}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"qualname": 2, "fullname": 6, "doc": 10}, "pyflarum.flarum.core.discussions.DiscussionFromBulk": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.url": {"qualname": 2, "fullname": 6, "doc": 7}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.commentCount": {"qualname": 2, "fullname": 6, "doc": 8}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.participantCount": {"qualname": 2, "fullname": 6, "doc": 8}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.createdAt": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostedAt": {"qualname": 2, "fullname": 6, "doc": 10}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostNumber": {"qualname": 2, "fullname": 6, "doc": 5}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadPostNumber": {"qualname": 2, "fullname": 6, "doc": 6}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canReply": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canRename": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canDelete": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canHide": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadAt": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.isHidden": {"qualname": 2, "fullname": 6, "doc": 8}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"qualname": 2, "fullname": 6, "doc": 24}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"qualname": 2, "fullname": 6, "doc": 27}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"qualname": 2, "fullname": 6, "doc": 12}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.hide": {"qualname": 2, "fullname": 6, "doc": 9}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.restore": {"qualname": 2, "fullname": 6, "doc": 6}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.unhide": {"qualname": 2, "fullname": 6, "doc": 6}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"qualname": 2, "fullname": 6, "doc": 13}, "pyflarum.flarum.core.discussions.Discussion": {"qualname": 1, "fullname": 5, "doc": 22}, "pyflarum.flarum.core.discussions.Discussion.included": {"qualname": 2, "fullname": 6, "doc": 11}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"qualname": 2, "fullname": 6, "doc": 62}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"qualname": 2, "fullname": 6, "doc": 40}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"qualname": 2, "fullname": 6, "doc": 24}, "pyflarum.flarum.core.filters": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.flarum.core.filters.Filter": {"qualname": 1, "fullname": 5, "doc": 14}, "pyflarum.flarum.core.filters.Filter.__init__": {"qualname": 2, "fullname": 6, "doc": 87}, "pyflarum.flarum.core.filters.Filter.to_dict": {"qualname": 2, "fullname": 6, "doc": 27}, "pyflarum.flarum.core.forum": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.flarum.core.forum.Forum": {"qualname": 1, "fullname": 5, "doc": 7}, "pyflarum.flarum.core.forum.Forum.title": {"qualname": 2, "fullname": 6, "doc": 2}, "pyflarum.flarum.core.forum.Forum.description": {"qualname": 2, "fullname": 6, "doc": 2}, "pyflarum.flarum.core.forum.Forum.showLanguageSelector": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.flarum.core.forum.Forum.baseUrl": {"qualname": 2, "fullname": 6, "doc": 5}, "pyflarum.flarum.core.forum.Forum.basePath": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.forum.Forum.debug": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.flarum.core.forum.Forum.apiUrl": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.forum.Forum.welcomeTitle": {"qualname": 2, "fullname": 6, "doc": 5}, "pyflarum.flarum.core.forum.Forum.welcomeMessage": {"qualname": 2, "fullname": 6, "doc": 6}, "pyflarum.flarum.core.forum.Forum.themePrimaryColor": {"qualname": 2, "fullname": 6, "doc": 5}, "pyflarum.flarum.core.forum.Forum.themeSecondaryColor": {"qualname": 2, "fullname": 6, "doc": 5}, "pyflarum.flarum.core.forum.Forum.logoUrl": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.forum.Forum.faviconUrl": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.forum.Forum.headerHtml": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.forum.Forum.footerHtml": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.forum.Forum.allowSignUp": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.forum.Forum.defaultRoute": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.flarum.core.forum.Forum.canViewForum": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.flarum.core.forum.Forum.canStartDiscussion": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.flarum.core.forum.Forum.canSearchUsers": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.forum.Forum.adminUrl": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.flarum.core.forum.Forum.version": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.flarum.core.forum.Forum.allowUsernameMentionFormat": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.flarum.core.forum.Forum.get_groups": {"qualname": 2, "fullname": 6, "doc": 7}, "pyflarum.flarum.core.forum.Forum.included": {"qualname": 2, "fullname": 6, "doc": 11}, "pyflarum.flarum.core.groups": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.flarum.core.groups.PreparedGroup": {"qualname": 1, "fullname": 5, "doc": 24}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"qualname": 2, "fullname": 6, "doc": 24}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"qualname": 2, "fullname": 6, "doc": 17}, "pyflarum.flarum.core.groups.PreparedGroup.create": {"qualname": 2, "fullname": 6, "doc": 5}, "pyflarum.flarum.core.groups.Groups": {"qualname": 1, "fullname": 5, "doc": 5}, "pyflarum.flarum.core.groups.Groups.__init__": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.flarum.core.groups.Group": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.flarum.core.groups.Group.nameSingular": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.flarum.core.groups.Group.namePlural": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.flarum.core.groups.Group.color": {"qualname": 2, "fullname": 6, "doc": 2}, "pyflarum.flarum.core.groups.Group.icon": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.groups.Group.isHidden": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.flarum.core.groups.Group.edit": {"qualname": 2, "fullname": 6, "doc": 7}, "pyflarum.flarum.core.groups.Group.delete": {"qualname": 2, "fullname": 6, "doc": 8}, "pyflarum.flarum.core.notifications": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.flarum.core.notifications.Notifications": {"qualname": 1, "fullname": 5, "doc": 5}, "pyflarum.flarum.core.notifications.Notifications.__init__": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.flarum.core.notifications.Notifications.mark_all_as_read": {"qualname": 2, "fullname": 6, "doc": 6}, "pyflarum.flarum.core.notifications.Notification": {"qualname": 1, "fullname": 5, "doc": 1}, "pyflarum.flarum.core.notifications.Notification.contentType": {"qualname": 2, "fullname": 6, "doc": 7}, "pyflarum.flarum.core.notifications.Notification.content": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.notifications.Notification.new_post_number": {"qualname": 2, "fullname": 6, "doc": 6}, "pyflarum.flarum.core.notifications.Notification.reply_number": {"qualname": 2, "fullname": 6, "doc": 6}, "pyflarum.flarum.core.notifications.Notification.createdAt": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.notifications.Notification.isRead": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.notifications.Notification.from_user": {"qualname": 2, "fullname": 6, "doc": 9}, "pyflarum.flarum.core.notifications.Notification.get_subject": {"qualname": 2, "fullname": 6, "doc": 14}, "pyflarum.flarum.core.notifications.Notification.mark_as_read": {"qualname": 2, "fullname": 6, "doc": 6}, "pyflarum.flarum.core.posts": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.flarum.core.posts.PreparedPost": {"qualname": 1, "fullname": 5, "doc": 4}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"qualname": 2, "fullname": 6, "doc": 23}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"qualname": 2, "fullname": 6, "doc": 17}, "pyflarum.flarum.core.posts.PreparedPost.post": {"qualname": 2, "fullname": 6, "doc": 9}, "pyflarum.flarum.core.posts.PreparedPost.create": {"qualname": 2, "fullname": 6, "doc": 9}, "pyflarum.flarum.core.posts.Posts": {"qualname": 1, "fullname": 5, "doc": 5}, "pyflarum.flarum.core.posts.Posts.__init__": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.flarum.core.posts.PostFromDiscussion": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.flarum.core.posts.PostFromDiscussion.number": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.posts.PostFromDiscussion.createdAt": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"qualname": 2, "fullname": 6, "doc": 22}, "pyflarum.flarum.core.posts.PostFromDiscussion.is_comment": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentHtml": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.posts.PostFromDiscussion.hide": {"qualname": 2, "fullname": 6, "doc": 9}, "pyflarum.flarum.core.posts.PostFromDiscussion.restore": {"qualname": 2, "fullname": 6, "doc": 10}, "pyflarum.flarum.core.posts.PostFromDiscussion.unhide": {"qualname": 2, "fullname": 6, "doc": 10}, "pyflarum.flarum.core.posts.PostFromDiscussion.delete": {"qualname": 2, "fullname": 6, "doc": 7}, "pyflarum.flarum.core.posts.PostFromDiscussion.edit": {"qualname": 2, "fullname": 6, "doc": 8}, "pyflarum.flarum.core.posts.PostFromNotification": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"qualname": 2, "fullname": 6, "doc": 29}, "pyflarum.flarum.core.posts.PostFromNotification.ipAddress": {"qualname": 2, "fullname": 6, "doc": 11}, "pyflarum.flarum.core.posts.PostFromNotification.editedAt": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.posts.PostFromNotification.canEdit": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.posts.PostFromNotification.canDelete": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.posts.PostFromNotification.canHide": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.posts.PostFromNotification.url": {"qualname": 2, "fullname": 6, "doc": 2}, "pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"qualname": 2, "fullname": 6, "doc": 12}, "pyflarum.flarum.core.posts.PostFromNotification.reply_to": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"qualname": 2, "fullname": 6, "doc": 12}, "pyflarum.flarum.core.posts.PostFromNotification.edit": {"qualname": 2, "fullname": 6, "doc": 6}, "pyflarum.flarum.core.posts.PostFromBulk": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.flarum.core.posts.Post": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.flarum.core.posts.Post.get_author": {"qualname": 2, "fullname": 6, "doc": 12}, "pyflarum.flarum.core.users": {"qualname": 0, "fullname": 4, "doc": 0}, "pyflarum.flarum.core.users.Users": {"qualname": 1, "fullname": 5, "doc": 5}, "pyflarum.flarum.core.users.Users.__init__": {"qualname": 2, "fullname": 6, "doc": 0}, "pyflarum.flarum.core.users.UserFromNotification": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.flarum.core.users.UserFromNotification.username": {"qualname": 2, "fullname": 6, "doc": 2}, "pyflarum.flarum.core.users.UserFromNotification.email": {"qualname": 2, "fullname": 6, "doc": 5}, "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"qualname": 2, "fullname": 6, "doc": 16}, "pyflarum.flarum.core.users.UserFromNotification.displayName": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.users.UserFromNotification.avatarUrl": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.users.UserFromNotification.slug": {"qualname": 2, "fullname": 6, "doc": 2}, "pyflarum.flarum.core.users.UserFromBulk": {"qualname": 1, "fullname": 5, "doc": 2}, "pyflarum.flarum.core.users.UserFromBulk.joinTime": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.flarum.core.users.UserFromBulk.discussionCount": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.users.UserFromBulk.commentCount": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.users.UserFromBulk.canEdit": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.users.UserFromBulk.canEditCredentials": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.flarum.core.users.UserFromBulk.canEditGroups": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.flarum.core.users.UserFromBulk.canDelete": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.flarum.core.users.User": {"qualname": 1, "fullname": 5, "doc": 3}, "pyflarum.flarum.core.users.MyUser": {"qualname": 1, "fullname": 5, "doc": 5}, "pyflarum.flarum.core.users.MyUser.markedAllAsReadAt": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.users.MyUser.unreadNotificationCount": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.users.MyUser.newNotificationCount": {"qualname": 2, "fullname": 6, "doc": 3}, "pyflarum.flarum.core.users.MyUser.preferences": {"qualname": 2, "fullname": 6, "doc": 4}, "pyflarum.session": {"qualname": 0, "fullname": 2, "doc": 0}, "pyflarum.session.FlarumSession": {"qualname": 1, "fullname": 3, "doc": 5}, "pyflarum.session.FlarumSession.__init__": {"qualname": 2, "fullname": 4, "doc": 66}, "pyflarum.session.FlarumSession.authenticate": {"qualname": 2, "fullname": 4, "doc": 35}, "pyflarum.session.FlarumSession.api_urls": {"qualname": 2, "fullname": 4, "doc": 19}, "pyflarum.session.FlarumUser": {"qualname": 1, "fullname": 3, "doc": 5}, "pyflarum.session.FlarumUser.__init__": {"qualname": 2, "fullname": 4, "doc": 91}, "pyflarum.session.FlarumUser.get_forum_data": {"qualname": 2, "fullname": 4, "doc": 6}, "pyflarum.session.FlarumUser.get_user_by_id": {"qualname": 2, "fullname": 4, "doc": 4}, "pyflarum.session.FlarumUser.get_discussion_by_id": {"qualname": 2, "fullname": 4, "doc": 4}, "pyflarum.session.FlarumUser.get_post_by_id": {"qualname": 2, "fullname": 4, "doc": 4}, "pyflarum.session.FlarumUser.get_discussions": {"qualname": 2, "fullname": 4, "doc": 8}, "pyflarum.session.FlarumUser.get_posts": {"qualname": 2, "fullname": 4, "doc": 8}, "pyflarum.session.FlarumUser.get_users": {"qualname": 2, "fullname": 4, "doc": 8}, "pyflarum.session.FlarumUser.get_notifications": {"qualname": 2, "fullname": 4, "doc": 8}, "pyflarum.session.FlarumUser.mark_all_discussions_as_read": {"qualname": 2, "fullname": 4, "doc": 12}, "pyflarum.session.FlarumUser.mark_all_notifications_as_read": {"qualname": 2, "fullname": 4, "doc": 6}, "pyflarum.session.FlarumUser.get_groups": {"qualname": 2, "fullname": 4, "doc": 4}, "pyflarum.session.FlarumUser.update_user_info": {"qualname": 2, "fullname": 4, "doc": 47}, "pyflarum.session.FlarumUser.send_password_reset_email": {"qualname": 2, "fullname": 4, "doc": 7}, "pyflarum.session.FlarumUser.update_preferences": {"qualname": 2, "fullname": 4, "doc": 7}, "pyflarum.session.FlarumUser.change_email": {"qualname": 2, "fullname": 4, "doc": 17}, "pyflarum.session.FlarumUser.upload_user_avatar": {"qualname": 2, "fullname": 4, "doc": 8}, "pyflarum.session.FlarumUser.remove_user_avatar": {"qualname": 2, "fullname": 4, "doc": 8}}, "length": 504, "save": true}, "index": {"qualname": {"root": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.datetime_conversions.flarum_to_datetime": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.error_handler.FlarumError": {"tf": 1}, "pyflarum.error_handler.FlarumError.__init__": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.session.FlarumSession": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}, "pyflarum.session.FlarumSession.api_urls": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.session.FlarumUser": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.get_forum_data": {"tf": 1}, "pyflarum.session.FlarumUser.get_user_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_discussion_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_post_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_discussions": {"tf": 1}, "pyflarum.session.FlarumUser.get_posts": {"tf": 1}, "pyflarum.session.FlarumUser.get_users": {"tf": 1}, "pyflarum.session.FlarumUser.get_notifications": {"tf": 1}, "pyflarum.session.FlarumUser.mark_all_discussions_as_read": {"tf": 1}, "pyflarum.session.FlarumUser.mark_all_notifications_as_read": {"tf": 1}, "pyflarum.session.FlarumUser.get_groups": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1}, "pyflarum.session.FlarumUser.send_password_reset_email": {"tf": 1}, "pyflarum.session.FlarumUser.update_preferences": {"tf": 1}, "pyflarum.session.FlarumUser.change_email": {"tf": 1}, "pyflarum.session.FlarumUser.upload_user_avatar": {"tf": 1}, "pyflarum.session.FlarumUser.remove_user_avatar": {"tf": 1}}, "df": 19}}}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.canViewFlags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.flagCount": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.guidelinesUrl": {"tf": 1}}, "df": 4}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin.canFlag": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.flagCount": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.admin.MailSettings.fields": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.flarum.core.BaseFlarumBulkObject.first_link": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.filters.Filter": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.forum.Forum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.title": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.description": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.showLanguageSelector": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.baseUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.basePath": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.debug": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.apiUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.welcomeTitle": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.welcomeMessage": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.themePrimaryColor": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.themeSecondaryColor": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.logoUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.faviconUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.headerHtml": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.footerHtml": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.allowSignUp": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.defaultRoute": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canViewForum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canStartDiscussion": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canSearchUsers": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.adminUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.version": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.allowUsernameMentionFormat": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.get_groups": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.included": {"tf": 1}}, "df": 26, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin.markdown_mdarea": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.follow": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin.fof_prevent_necrobumping": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.forum.Forum.footerHtml": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.forum.Forum.faviconUrl": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.notifications.Notification.from_user": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.datetime_conversions.datetime_to_flarum": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "a": {"docs": {"pyflarum.flarum.core.BaseFlarumObject.data": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.disable_extension": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.discussions.Discussions": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussions.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.included": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.discussionCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.discussionCount": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.title": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"tf": 1}}, "df": 8}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.url": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.participantCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.createdAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostedAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canReply": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canRename": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canDelete": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canHide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.isHidden": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.unhide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1}}, "df": 21}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.users.UserFromNotification.displayName": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.description": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.description": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.description": {"tf": 1}}, "df": 3}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.defaultSort": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.forum.Forum.defaultRoute": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1}, "pyflarum.flarum.core.groups.Group.delete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.delete": {"tf": 1}}, "df": 4}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.flarum.core.forum.Forum.debug": {"tf": 1}}, "df": 1}}}}}, "_": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "_": {"docs": {"pyflarum.error_handler.FlarumError.__init__": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.__init__": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.__init__": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussions.__init__": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.Groups.__init__": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.Posts.__init__": {"tf": 1}, "pyflarum.flarum.core.users.Users.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 20}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.error_handler.MissingExtensionError": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.error_handler.MissingExtensionWarning": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 27}}}, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minPrimaryTags": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minSecondaryTags": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.admin.MailSettings.mail": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.MailSettings": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.fields": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mailgun": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mailgun_secret": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mailgun_domain": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.log": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.smtp": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_host": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_port": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_encryption": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_username": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_password": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.sending": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.errors": {"tf": 1}}, "df": 15}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.admin.MailSettings.mailgun": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.MailSettings.mailgun_secret": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.admin.MailSettings.mailgun_domain": {"tf": 1}}, "df": 1}}}}}}}}}}, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.MailSettings.mail_host": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.MailSettings.mail_port": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.admin.MailSettings.mail_password": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.MailSettings.mail_encryption": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.extensions.admin.MailSettings.mail_username": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {"pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin.markdown_mdarea": {"tf": 1}}, "df": 1}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.flarum.core.notifications.Notifications.mark_all_as_read": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.session.FlarumUser.mark_all_discussions_as_read": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.session.FlarumUser.mark_all_notifications_as_read": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.flarum.core.notifications.Notification.mark_as_read": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.users.MyUser.markedAllAsReadAt": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxPrimaryTags": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxSecondaryTags": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin.max_bio_length": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canViewWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canManageWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canDeleteWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.visibleWarningCount": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin.canMerge": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}, "y": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.users.MyUser": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.markedAllAsReadAt": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.unreadNotificationCount": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.newNotificationCount": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.preferences": {"tf": 1}}, "df": 5}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.error_handler.parse_request": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.participantCount": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.position": {"tf": 1}}, "df": 1}}, "t": {"docs": {"pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.post": {"tf": 1}, "pyflarum.flarum.core.posts.Posts": {"tf": 1}, "pyflarum.flarum.core.posts.Posts.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.Post": {"tf": 1}, "pyflarum.flarum.core.posts.Post.get_author": {"tf": 1}}, "df": 6, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.posts.PostFromDiscussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.number": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.createdAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.is_comment": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentHtml": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.hide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.restore": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.unhide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.delete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.edit": {"tf": 1}}, "df": 11}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum.flarum.core.posts.PostFromNotification": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.ipAddress": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.editedAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canEdit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canDelete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canHide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.url": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.reply_to": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.edit": {"tf": 1}}, "df": 12}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.flarum.core.posts.PostFromBulk": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.Achievement.points": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin.fof_prevent_necrobumping": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.flarum.core.BaseFlarumBulkObject.previous_link": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.discussions.PreparedDiscussion": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"tf": 1}}, "df": 5}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.flarum.core.groups.PreparedGroup": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.create": {"tf": 1}}, "df": 4}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.posts.PreparedPost": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.post": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.create": {"tf": 1}}, "df": 5}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.users.MyUser.preferences": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.error_handler.handle_errors": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.hasBestAnswer": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.Achievement.hidden": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.hide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.hide": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.forum.Forum.headerHtml": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.__init__": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.extensions.admin.MailSettings.errors": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.enable_extension": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.groups.Group.edit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.edit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.edit": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.posts.PostFromNotification.editedAt": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.users.UserFromNotification.email": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}}, "df": 27}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"tf": 1}, "pyflarum.session.FlarumUser.get_discussions": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.session.FlarumUser.get_discussion_by_id": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.get_all_achievements": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.Post.get_author": {"tf": 1}}, "df": 4}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.get_mail_settings": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.session.FlarumUser.get_users": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin.get_user_by_username": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.session.FlarumUser.get_user_by_id": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin.get_liked_by": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.get_parent_tag": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1}, "pyflarum.session.FlarumUser.get_posts": {"tf": 1}}, "df": 2, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.session.FlarumUser.get_post_by_id": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.get_tags": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}}, "df": 2}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyflarum.session.FlarumUser.get_forum_data": {"tf": 1}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.flarum.core.forum.Forum.get_groups": {"tf": 1}, "pyflarum.session.FlarumUser.get_groups": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.notifications.Notification.get_subject": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum.session.FlarumUser.get_notifications": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.guidelinesUrl": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.flarum.core.groups.Groups": {"tf": 1}, "pyflarum.flarum.core.groups.Groups.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.Group": {"tf": 1}, "pyflarum.flarum.core.groups.Group.nameSingular": {"tf": 1}, "pyflarum.flarum.core.groups.Group.namePlural": {"tf": 1}, "pyflarum.flarum.core.groups.Group.color": {"tf": 1}, "pyflarum.flarum.core.groups.Group.icon": {"tf": 1}, "pyflarum.flarum.core.groups.Group.isHidden": {"tf": 1}, "pyflarum.flarum.core.groups.Group.edit": {"tf": 1}, "pyflarum.flarum.core.groups.Group.delete": {"tf": 1}}, "df": 10}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_notifications": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.__init__": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}}, "df": 4}}}}}}}}}, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_notifications": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.enable_extension": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.disable_extension": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.clear_cache": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_forum_info": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.get_mail_settings": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_mail_settings": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.send_test_mail": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_appearance": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.upload_logo": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.remove_logo": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.upload_favicon": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.remove_favicon": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_header": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_footer": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_css": {"tf": 1}}, "df": 16}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}}, "df": 4}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.forum.Forum.adminUrl": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin.get_user_by_username": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin.isApproved": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.isApproved": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.canApprove": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.forum.Forum.apiUrl": {"tf": 1}}, "df": 1}}}, "_": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.session.FlarumSession.api_urls": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.Achievement": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.name": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.description": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.computation": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.points": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.icon": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.rectangle": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.active": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.hidden": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.new": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_post_footer": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_user_card": {"tf": 1}}, "df": 3}}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.update_settings": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.create_achievement": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.get_all_achievements": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.Achievement.active": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.BaseFlarumIndividualObject.attributes": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.flarum.core.forum.Forum.allowSignUp": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.forum.Forum.allowUsernameMentionFormat": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.users.UserFromNotification.avatarUrl": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.session.FlarumSession.authenticate": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.admin.MailSettings.log": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.forum.Forum.logoUrl": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.lock": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.lock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.unlock": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.isLocked": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.canLock": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Lock.LockExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.like": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.unlike": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin.canLike": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin.get_liked_by": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Likes.LikesExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.lastPostedAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostedAt": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostNumber": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadPostNumber": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadAt": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.extensions.admin.MailSettings.smtp": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.admin.MailSettings.sending": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.send_test_mail": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.session.FlarumUser.send_password_reset_email": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.stick": {"tf": 1}}, "df": 1, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.stick": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.unstick": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.isSticky": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.canSticky": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin.subscription": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.subscription": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.follow": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.unfollow": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin.subscription": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspend": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.canSuspend": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspendedUntil": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspend": {"tf": 1}}, "df": 4}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspendedUntil": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.slug": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.slug": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin.spamblock": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin.spamblock": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin.canSpamblock": {"tf": 1}}, "df": 2}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin.canSplit": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_post_footer": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_user_card": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.forum.Forum.showLanguageSelector": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.clear_cache": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.commands.CommandsFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.is_mentioned_in": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}}, "df": 4}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.commentCount": {"tf": 1}}, "df": 2}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.Achievement.computation": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.color": {"tf": 1}, "pyflarum.flarum.core.groups.Group.color": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.notifications.Notification.content": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.flarum.core.notifications.Notification.contentType": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.posts.PostFromDiscussion.contentHtml": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canViewWarnings": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin.canViewWhoTypes": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.canViewFlags": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.forum.Forum.canViewForum": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canViewBio": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canManageWarnings": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.canManageReplyTemplates": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin.canMerge": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.canDelete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canDelete": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canDelete": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canDeleteWarnings": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.canApprove": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.canAddToDiscussion": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin.canFlag": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin.canLike": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.canLock": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.canSticky": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.canStartDiscussion": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canStartDiscussion": {"tf": 1}}, "df": 2}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.canSuspend": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin.canSelectBestAnswer": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.forum.Forum.canSearchUsers": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin.canSpamblock": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin.canSplit": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.canBypassTagCounts": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.canTag": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.posts.PostFromNotification.canEdit": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEdit": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditRecipients": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditUserRecipients": {"tf": 1}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.flarum.core.users.UserFromBulk.canEditGroups": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditGroupRecipients": {"tf": 1}}, "df": 1}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canEditBio": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.flarum.core.users.UserFromBulk.canEditCredentials": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.cannotBeDirectlyMessaged": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.canReply": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.canRename": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.canHide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canHide": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.create": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.create": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.create_achievement": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.createdAt": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.createdAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.createdAt": {"tf": 1}}, "df": 3}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.session.FlarumUser.change_email": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.update_forum_info": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.update_mail_settings": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.update_appearance": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_header": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_footer": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_css": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin.update_user_bio": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.session.FlarumUser.update_user_info": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.update_settings": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.session.FlarumUser.update_preferences": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.upload_logo": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.upload_favicon": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.session.FlarumUser.upload_user_avatar": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.unlike": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.unlock": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.unstick": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.unfollow": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.unrestrict_permissions": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.users.MyUser.unreadNotificationCount": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.unhide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.unhide": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.users.Users": {"tf": 1}, "pyflarum.flarum.core.users.Users.__init__": {"tf": 1}, "pyflarum.flarum.core.users.User": {"tf": 1}}, "df": 3, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin.max_bio_length": {"tf": 1}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin.update_user_bio": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.bio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canViewBio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canEditBio": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.users.UserFromNotification.username": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin.usernameHistory": {"tf": 1}}, "df": 2}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin.usernameHistory": {"tf": 1}}, "df": 1}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum.flarum.core.users.UserFromNotification": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.username": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.email": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.displayName": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.avatarUrl": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.slug": {"tf": 1}}, "df": 7}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.flarum.core.users.UserFromBulk": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.joinTime": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.discussionCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEdit": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditCredentials": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditGroups": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canDelete": {"tf": 1}}, "df": 8}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.url": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.url": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.remove_logo": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.remove_favicon": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.session.FlarumUser.remove_user_avatar": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.replyTemplate": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.replyTemplate": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.canManageReplyTemplates": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {"pyflarum.flarum.core.notifications.Notification.reply_number": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.flarum.core.posts.PostFromNotification.reply_to": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin.canViewWhoTypes": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"tf": 1}}, "df": 2}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.restrict_permissions": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.restore": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.restore": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.Achievement.rectangle": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.commands.CommandsFlarumUserMixin.is_mentioned_in": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.posts.PostFromDiscussion.is_comment": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin.isApproved": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.isApproved": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.isLocked": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.isSticky": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.isChild": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.isHidden": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.isHidden": {"tf": 1}, "pyflarum.flarum.core.groups.Group.isHidden": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.flarum.core.notifications.Notification.isRead": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.icon": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.icon": {"tf": 1}, "pyflarum.flarum.core.groups.Group.icon": {"tf": 1}}, "df": 3}}}, "d": {"docs": {"pyflarum.flarum.core.BaseFlarumIndividualObject.id": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.included": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.included": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.posts.PostFromNotification.ipAddress": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.visibleWarningCount": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.flarum.core.forum.Forum.version": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.name": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.description": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.slug": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.color": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundUrl": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundMode": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.icon": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.discussionCount": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.position": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.defaultSort": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.isChild": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.isHidden": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.lastPostedAt": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.canStartDiscussion": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.canAddToDiscussion": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.subscription": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.template": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.get_parent_tag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.restrict_permissions": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.unrestrict_permissions": {"tf": 1}}, "df": 22, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.canBypassTagCounts": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minPrimaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxPrimaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minSecondaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxSecondaryTags": {"tf": 1}}, "df": 6}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.canTag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.get_tags": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.template": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.title": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.title": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.forum.Forum.themePrimaryColor": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.forum.Forum.themeSecondaryColor": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.name": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.name": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.groups.Group.nameSingular": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.groups.Group.namePlural": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.Achievement.new": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {"pyflarum.flarum.core.notifications.Notification.new_post_number": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.users.MyUser.newNotificationCount": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.flarum.core.BaseFlarumBulkObject.next_link": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum.flarum.core.notifications.Notifications": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications.__init__": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications.mark_all_as_read": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.contentType": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.content": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.new_post_number": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.reply_number": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.createdAt": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.isRead": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.from_user": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.get_subject": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.mark_as_read": {"tf": 1}}, "df": 13}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.posts.PostFromDiscussion.number": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundUrl": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundMode": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.BaseFlarumObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.data": {"tf": 1}}, "df": 3}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.first_link": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.previous_link": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.next_link": {"tf": 1}}, "df": 5}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.BaseFlarumIndividualObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.id": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.attributes": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.forum.Forum.baseUrl": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum.flarum.core.forum.Forum.basePath": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.hasBestAnswer": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.bestAnswerSetAt": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin.canSelectBestAnswer": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.bestAnswerSetAt": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditRecipients": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditUserRecipients": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditGroupRecipients": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.blocksPd": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.cannotBeDirectlyMessaged": {"tf": 1}}, "df": 3}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.blocksPd": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.bio": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.watch.WatchFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.watch.WatchFlarumUserMixin.watch_notifications": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum.extensions.watch.WatchFlarumUserMixin.watch_notifications": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 4}}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.forum.Forum.welcomeTitle": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.flarum.core.forum.Forum.welcomeMessage": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.users.UserFromBulk.joinTime": {"tf": 1}}, "df": 1}}}}}}}}}, "fullname": {"root": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.custom_types": {"tf": 1}, "pyflarum.datetime_conversions": {"tf": 1}, "pyflarum.datetime_conversions.flarum_to_datetime": {"tf": 1}, "pyflarum.datetime_conversions.datetime_to_flarum": {"tf": 1}, "pyflarum.error_handler": {"tf": 1}, "pyflarum.error_handler.FlarumError": {"tf": 1}, "pyflarum.error_handler.FlarumError.__init__": {"tf": 1}, "pyflarum.error_handler.MissingExtensionError": {"tf": 1}, "pyflarum.error_handler.MissingExtensionWarning": {"tf": 1}, "pyflarum.error_handler.parse_request": {"tf": 1}, "pyflarum.error_handler.handle_errors": {"tf": 1}, "pyflarum.extensions": {"tf": 1}, "pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.__init__": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_notifications": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.__init__": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin": {"tf": 1}, "pyflarum.extensions.admin.MailSettings": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.fields": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mailgun": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mailgun_secret": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mailgun_domain": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.log": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.smtp": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_host": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_port": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_encryption": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_username": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_password": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.sending": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.errors": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.enable_extension": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.disable_extension": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.clear_cache": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_forum_info": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.get_mail_settings": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_mail_settings": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.send_test_mail": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_appearance": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.upload_logo": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.remove_logo": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.upload_favicon": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.remove_favicon": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_header": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_footer": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_css": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin.get_user_by_username": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.is_mentioned_in": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canViewWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canManageWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canDeleteWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.visibleWarningCount": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.replyTemplate": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.canManageReplyTemplates": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin.canViewWhoTypes": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin.isApproved": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.isApproved": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.canApprove": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.canViewFlags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.flagCount": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.guidelinesUrl": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin.canFlag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.like": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.unlike": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin.canLike": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin.get_liked_by": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.lock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.unlock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.isLocked": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.canLock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin.markdown_mdarea": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.stick": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.unstick": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.isSticky": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.canSticky": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.follow": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.unfollow": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin.subscription": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.canSuspend": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspendedUntil": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspend": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.name": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.description": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.slug": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.color": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundUrl": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundMode": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.icon": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.discussionCount": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.position": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.defaultSort": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.isChild": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.isHidden": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.lastPostedAt": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.canStartDiscussion": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.canAddToDiscussion": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.subscription": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.template": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.get_parent_tag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.restrict_permissions": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.unrestrict_permissions": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.canBypassTagCounts": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minPrimaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxPrimaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minSecondaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxSecondaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.canTag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.get_tags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.hasBestAnswer": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.bestAnswerSetAt": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin.canSelectBestAnswer": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditRecipients": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditUserRecipients": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditGroupRecipients": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.blocksPd": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.cannotBeDirectlyMessaged": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin.canMerge": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin.fof_prevent_necrobumping": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin.spamblock": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin.canSpamblock": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin.canSplit": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin.max_bio_length": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin.update_user_bio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.bio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canViewBio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canEditBio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin.usernameHistory": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.name": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.description": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.computation": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.points": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.icon": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.rectangle": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.active": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.hidden": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.new": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_post_footer": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_user_card": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.update_settings": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.create_achievement": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.get_all_achievements": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch": {"tf": 1}, "pyflarum.extensions.watch.WatchFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.watch.WatchFlarumUserMixin.watch_notifications": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}, "pyflarum.flarum": {"tf": 1}, "pyflarum.flarum.core": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.data": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.first_link": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.previous_link": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.next_link": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.id": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.attributes": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.discussions": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussions": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussions.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.title": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.url": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.participantCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.createdAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostedAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canReply": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canRename": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canDelete": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canHide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.isHidden": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.unhide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.included": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}, "pyflarum.flarum.core.filters": {"tf": 1}, "pyflarum.flarum.core.filters.Filter": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.flarum.core.forum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.title": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.description": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.showLanguageSelector": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.baseUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.basePath": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.debug": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.apiUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.welcomeTitle": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.welcomeMessage": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.themePrimaryColor": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.themeSecondaryColor": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.logoUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.faviconUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.headerHtml": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.footerHtml": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.allowSignUp": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.defaultRoute": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canViewForum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canStartDiscussion": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canSearchUsers": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.adminUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.version": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.allowUsernameMentionFormat": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.get_groups": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.included": {"tf": 1}, "pyflarum.flarum.core.groups": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.create": {"tf": 1}, "pyflarum.flarum.core.groups.Groups": {"tf": 1}, "pyflarum.flarum.core.groups.Groups.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.Group": {"tf": 1}, "pyflarum.flarum.core.groups.Group.nameSingular": {"tf": 1}, "pyflarum.flarum.core.groups.Group.namePlural": {"tf": 1}, "pyflarum.flarum.core.groups.Group.color": {"tf": 1}, "pyflarum.flarum.core.groups.Group.icon": {"tf": 1}, "pyflarum.flarum.core.groups.Group.isHidden": {"tf": 1}, "pyflarum.flarum.core.groups.Group.edit": {"tf": 1}, "pyflarum.flarum.core.groups.Group.delete": {"tf": 1}, "pyflarum.flarum.core.notifications": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications.__init__": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications.mark_all_as_read": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.contentType": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.content": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.new_post_number": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.reply_number": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.createdAt": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.isRead": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.from_user": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.get_subject": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.mark_as_read": {"tf": 1}, "pyflarum.flarum.core.posts": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.post": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.create": {"tf": 1}, "pyflarum.flarum.core.posts.Posts": {"tf": 1}, "pyflarum.flarum.core.posts.Posts.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.number": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.createdAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.is_comment": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentHtml": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.hide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.restore": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.unhide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.delete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.edit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.ipAddress": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.editedAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canEdit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canDelete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canHide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.url": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.reply_to": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.edit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromBulk": {"tf": 1}, "pyflarum.flarum.core.posts.Post": {"tf": 1}, "pyflarum.flarum.core.posts.Post.get_author": {"tf": 1}, "pyflarum.flarum.core.users": {"tf": 1}, "pyflarum.flarum.core.users.Users": {"tf": 1}, "pyflarum.flarum.core.users.Users.__init__": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.username": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.email": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.displayName": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.avatarUrl": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.slug": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.joinTime": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.discussionCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEdit": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditCredentials": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditGroups": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canDelete": {"tf": 1}, "pyflarum.flarum.core.users.User": {"tf": 1}, "pyflarum.flarum.core.users.MyUser": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.markedAllAsReadAt": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.unreadNotificationCount": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.newNotificationCount": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.preferences": {"tf": 1}, "pyflarum.session": {"tf": 1}, "pyflarum.session.FlarumSession": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}, "pyflarum.session.FlarumSession.api_urls": {"tf": 1}, "pyflarum.session.FlarumUser": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.get_forum_data": {"tf": 1}, "pyflarum.session.FlarumUser.get_user_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_discussion_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_post_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_discussions": {"tf": 1}, "pyflarum.session.FlarumUser.get_posts": {"tf": 1}, "pyflarum.session.FlarumUser.get_users": {"tf": 1}, "pyflarum.session.FlarumUser.get_notifications": {"tf": 1}, "pyflarum.session.FlarumUser.mark_all_discussions_as_read": {"tf": 1}, "pyflarum.session.FlarumUser.mark_all_notifications_as_read": {"tf": 1}, "pyflarum.session.FlarumUser.get_groups": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1}, "pyflarum.session.FlarumUser.send_password_reset_email": {"tf": 1}, "pyflarum.session.FlarumUser.update_preferences": {"tf": 1}, "pyflarum.session.FlarumUser.change_email": {"tf": 1}, "pyflarum.session.FlarumUser.upload_user_avatar": {"tf": 1}, "pyflarum.session.FlarumUser.remove_user_avatar": {"tf": 1}}, "df": 504}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.error_handler.parse_request": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.participantCount": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.position": {"tf": 1}}, "df": 1}}, "t": {"docs": {"pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"tf": 1}, "pyflarum.flarum.core.posts": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.post": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PreparedPost.create": {"tf": 1}, "pyflarum.flarum.core.posts.Posts": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.Posts.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromDiscussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.number": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.createdAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.is_comment": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentHtml": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.hide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.restore": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.unhide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.delete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.edit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.ipAddress": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.editedAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canEdit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canDelete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canHide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.url": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.reply_to": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.edit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromBulk": {"tf": 1}, "pyflarum.flarum.core.posts.Post": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.Post.get_author": {"tf": 1.4142135623730951}}, "df": 35, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.posts.PostFromDiscussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.number": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.createdAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.is_comment": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentHtml": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.hide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.restore": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.unhide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.delete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.edit": {"tf": 1}}, "df": 11}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum.flarum.core.posts.PostFromNotification": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.ipAddress": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.editedAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canEdit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canDelete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canHide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.url": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.reply_to": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.edit": {"tf": 1}}, "df": 12}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.flarum.core.posts.PostFromBulk": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.Achievement.points": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin.fof_prevent_necrobumping": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.flarum.core.BaseFlarumBulkObject.previous_link": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.discussions.PreparedDiscussion": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"tf": 1}}, "df": 5}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.flarum.core.groups.PreparedGroup": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.create": {"tf": 1}}, "df": 4}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.posts.PreparedPost": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.post": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.create": {"tf": 1}}, "df": 5}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.users.MyUser.preferences": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.custom_types": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.clear_cache": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.commands": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.is_mentioned_in": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}}, "df": 8, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.commands.CommandsFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.is_mentioned_in": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}}, "df": 4}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.commentCount": {"tf": 1}}, "df": 2}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.Achievement.computation": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.color": {"tf": 1}, "pyflarum.flarum.core.groups.Group.color": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum.flarum.core": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.data": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.first_link": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.previous_link": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.next_link": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.id": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.attributes": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.discussions": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussions": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussions.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.title": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.url": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.participantCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.createdAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostedAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canReply": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canRename": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canDelete": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canHide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.isHidden": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.unhide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.included": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}, "pyflarum.flarum.core.filters": {"tf": 1}, "pyflarum.flarum.core.filters.Filter": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.flarum.core.forum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.title": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.description": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.showLanguageSelector": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.baseUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.basePath": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.debug": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.apiUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.welcomeTitle": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.welcomeMessage": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.themePrimaryColor": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.themeSecondaryColor": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.logoUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.faviconUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.headerHtml": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.footerHtml": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.allowSignUp": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.defaultRoute": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canViewForum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canStartDiscussion": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canSearchUsers": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.adminUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.version": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.allowUsernameMentionFormat": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.get_groups": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.included": {"tf": 1}, "pyflarum.flarum.core.groups": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.create": {"tf": 1}, "pyflarum.flarum.core.groups.Groups": {"tf": 1}, "pyflarum.flarum.core.groups.Groups.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.Group": {"tf": 1}, "pyflarum.flarum.core.groups.Group.nameSingular": {"tf": 1}, "pyflarum.flarum.core.groups.Group.namePlural": {"tf": 1}, "pyflarum.flarum.core.groups.Group.color": {"tf": 1}, "pyflarum.flarum.core.groups.Group.icon": {"tf": 1}, "pyflarum.flarum.core.groups.Group.isHidden": {"tf": 1}, "pyflarum.flarum.core.groups.Group.edit": {"tf": 1}, "pyflarum.flarum.core.groups.Group.delete": {"tf": 1}, "pyflarum.flarum.core.notifications": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications.__init__": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications.mark_all_as_read": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.contentType": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.content": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.new_post_number": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.reply_number": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.createdAt": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.isRead": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.from_user": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.get_subject": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.mark_as_read": {"tf": 1}, "pyflarum.flarum.core.posts": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.post": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.create": {"tf": 1}, "pyflarum.flarum.core.posts.Posts": {"tf": 1}, "pyflarum.flarum.core.posts.Posts.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.number": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.createdAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.is_comment": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentHtml": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.hide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.restore": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.unhide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.delete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.edit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.ipAddress": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.editedAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canEdit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canDelete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canHide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.url": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.reply_to": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.edit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromBulk": {"tf": 1}, "pyflarum.flarum.core.posts.Post": {"tf": 1}, "pyflarum.flarum.core.posts.Post.get_author": {"tf": 1}, "pyflarum.flarum.core.users": {"tf": 1}, "pyflarum.flarum.core.users.Users": {"tf": 1}, "pyflarum.flarum.core.users.Users.__init__": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.username": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.email": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.displayName": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.avatarUrl": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.slug": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.joinTime": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.discussionCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEdit": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditCredentials": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditGroups": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canDelete": {"tf": 1}, "pyflarum.flarum.core.users.User": {"tf": 1}, "pyflarum.flarum.core.users.MyUser": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.markedAllAsReadAt": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.unreadNotificationCount": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.newNotificationCount": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.preferences": {"tf": 1}}, "df": 175}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.notifications.Notification.content": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.flarum.core.notifications.Notification.contentType": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.posts.PostFromDiscussion.contentHtml": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canViewWarnings": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin.canViewWhoTypes": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.canViewFlags": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.forum.Forum.canViewForum": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canViewBio": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canManageWarnings": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.canManageReplyTemplates": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin.canMerge": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.canDelete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canDelete": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canDelete": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canDeleteWarnings": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.canApprove": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.canAddToDiscussion": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin.canFlag": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin.canLike": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.canLock": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.canSticky": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.canStartDiscussion": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canStartDiscussion": {"tf": 1}}, "df": 2}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.canSuspend": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin.canSelectBestAnswer": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.forum.Forum.canSearchUsers": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin.canSpamblock": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin.canSplit": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.canBypassTagCounts": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.canTag": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.posts.PostFromNotification.canEdit": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEdit": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditRecipients": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditUserRecipients": {"tf": 1}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.flarum.core.users.UserFromBulk.canEditGroups": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditGroupRecipients": {"tf": 1}}, "df": 1}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canEditBio": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.flarum.core.users.UserFromBulk.canEditCredentials": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.cannotBeDirectlyMessaged": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.canReply": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.canRename": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.canHide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canHide": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.create": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.create": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.create_achievement": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.createdAt": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.createdAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.createdAt": {"tf": 1}}, "df": 3}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.session.FlarumUser.change_email": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.datetime_conversions": {"tf": 1}, "pyflarum.datetime_conversions.flarum_to_datetime": {"tf": 1}, "pyflarum.datetime_conversions.datetime_to_flarum": {"tf": 1}}, "df": 3}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.datetime_conversions.datetime_to_flarum": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "a": {"docs": {"pyflarum.flarum.core.BaseFlarumObject.data": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.disable_extension": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.discussions": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussions": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.Discussions.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromNotification": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.title": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.url": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.participantCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.createdAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostedAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canReply": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canRename": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canDelete": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canHide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.isHidden": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.unhide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.Discussion.included": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1.4142135623730951}}, "df": 42, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.discussionCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.discussionCount": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.title": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"tf": 1}}, "df": 8}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.url": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.participantCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.createdAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostedAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canReply": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canRename": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canDelete": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canHide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.isHidden": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.unhide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1}}, "df": 21}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.users.UserFromNotification.displayName": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.description": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.description": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.description": {"tf": 1}}, "df": 3}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.defaultSort": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.forum.Forum.defaultRoute": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1}, "pyflarum.flarum.core.groups.Group.delete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.delete": {"tf": 1}}, "df": 4}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.flarum.core.forum.Forum.debug": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.extensions.flarum": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canViewWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canManageWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canDeleteWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.visibleWarningCount": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.replyTemplate": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.canManageReplyTemplates": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin.canViewWhoTypes": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin.isApproved": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.isApproved": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.canApprove": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.canViewFlags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.flagCount": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.guidelinesUrl": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin.canFlag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.like": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.unlike": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin.canLike": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin.get_liked_by": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.lock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.unlock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.isLocked": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.canLock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin.markdown_mdarea": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.stick": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.unstick": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.isSticky": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.canSticky": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.follow": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.unfollow": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin.subscription": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.canSuspend": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspendedUntil": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspend": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.name": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.description": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.slug": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.color": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundUrl": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundMode": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.icon": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.discussionCount": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.position": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.defaultSort": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.isChild": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.isHidden": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.lastPostedAt": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.canStartDiscussion": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.canAddToDiscussion": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.subscription": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.template": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.get_parent_tag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.restrict_permissions": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.unrestrict_permissions": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.canBypassTagCounts": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minPrimaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxPrimaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minSecondaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxSecondaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.canTag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.get_tags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.hasBestAnswer": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.bestAnswerSetAt": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin.canSelectBestAnswer": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditRecipients": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditUserRecipients": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditGroupRecipients": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.blocksPd": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.cannotBeDirectlyMessaged": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin.canMerge": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin.fof_prevent_necrobumping": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin.spamblock": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin.canSpamblock": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin.canSplit": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin.max_bio_length": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin.update_user_bio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.bio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canViewBio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canEditBio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin.usernameHistory": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.name": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.description": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.computation": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.points": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.icon": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.rectangle": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.active": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.hidden": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.new": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_post_footer": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_user_card": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.update_settings": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.create_achievement": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.get_all_achievements": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.flarum": {"tf": 1}, "pyflarum.flarum.core": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.data": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.first_link": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.previous_link": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.next_link": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.id": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.attributes": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.discussions": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussions": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussions.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.title": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.url": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.participantCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.createdAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostedAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canReply": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canRename": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canDelete": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canHide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.isHidden": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.unhide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.included": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}, "pyflarum.flarum.core.filters": {"tf": 1}, "pyflarum.flarum.core.filters.Filter": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.flarum.core.forum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.title": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.description": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.showLanguageSelector": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.baseUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.basePath": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.debug": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.apiUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.welcomeTitle": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.welcomeMessage": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.themePrimaryColor": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.themeSecondaryColor": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.logoUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.faviconUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.headerHtml": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.footerHtml": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.allowSignUp": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.defaultRoute": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canViewForum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canStartDiscussion": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canSearchUsers": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.adminUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.version": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.allowUsernameMentionFormat": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.get_groups": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.included": {"tf": 1}, "pyflarum.flarum.core.groups": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.create": {"tf": 1}, "pyflarum.flarum.core.groups.Groups": {"tf": 1}, "pyflarum.flarum.core.groups.Groups.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.Group": {"tf": 1}, "pyflarum.flarum.core.groups.Group.nameSingular": {"tf": 1}, "pyflarum.flarum.core.groups.Group.namePlural": {"tf": 1}, "pyflarum.flarum.core.groups.Group.color": {"tf": 1}, "pyflarum.flarum.core.groups.Group.icon": {"tf": 1}, "pyflarum.flarum.core.groups.Group.isHidden": {"tf": 1}, "pyflarum.flarum.core.groups.Group.edit": {"tf": 1}, "pyflarum.flarum.core.groups.Group.delete": {"tf": 1}, "pyflarum.flarum.core.notifications": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications.__init__": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications.mark_all_as_read": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.contentType": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.content": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.new_post_number": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.reply_number": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.createdAt": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.isRead": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.from_user": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.get_subject": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.mark_as_read": {"tf": 1}, "pyflarum.flarum.core.posts": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.post": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.create": {"tf": 1}, "pyflarum.flarum.core.posts.Posts": {"tf": 1}, "pyflarum.flarum.core.posts.Posts.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.number": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.createdAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.is_comment": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentHtml": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.hide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.restore": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.unhide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.delete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.edit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.ipAddress": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.editedAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canEdit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canDelete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canHide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.url": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.reply_to": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.edit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromBulk": {"tf": 1}, "pyflarum.flarum.core.posts.Post": {"tf": 1}, "pyflarum.flarum.core.posts.Post.get_author": {"tf": 1}, "pyflarum.flarum.core.users": {"tf": 1}, "pyflarum.flarum.core.users.Users": {"tf": 1}, "pyflarum.flarum.core.users.Users.__init__": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.username": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.email": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.displayName": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.avatarUrl": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.slug": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.joinTime": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.discussionCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEdit": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditCredentials": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditGroups": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canDelete": {"tf": 1}, "pyflarum.flarum.core.users.User": {"tf": 1}, "pyflarum.flarum.core.users.MyUser": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.markedAllAsReadAt": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.unreadNotificationCount": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.newNotificationCount": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.preferences": {"tf": 1}}, "df": 394, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.datetime_conversions.flarum_to_datetime": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.name": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.description": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.slug": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.color": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundUrl": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundMode": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.icon": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.discussionCount": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.position": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.defaultSort": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.isChild": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.isHidden": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.lastPostedAt": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.canStartDiscussion": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.canAddToDiscussion": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.subscription": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.template": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.get_parent_tag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.restrict_permissions": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.unrestrict_permissions": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.canBypassTagCounts": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minPrimaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxPrimaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minSecondaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxSecondaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.canTag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.get_tags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}}, "df": 35}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.extensions.flarum.Flarum_Approval": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin.isApproved": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.isApproved": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.canApprove": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}}, "df": 10}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.canViewFlags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.flagCount": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.guidelinesUrl": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin.canFlag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}}, "df": 10}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Likes": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.like": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.unlike": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin.canLike": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin.get_liked_by": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}}, "df": 11}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Lock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.lock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.unlock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.isLocked": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.canLock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}}, "df": 10}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Markdown": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin.markdown_mdarea": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}}, "df": 6}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.flarum.Flarum_Sticky": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.stick": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.unstick": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.isSticky": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.canSticky": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}}, "df": 10}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.follow": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.unfollow": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin.subscription": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}}, "df": 10}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.flarum.Flarum_Suspend": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.canSuspend": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspendedUntil": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspend": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}}, "df": 8}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.error_handler.FlarumError": {"tf": 1}, "pyflarum.error_handler.FlarumError.__init__": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.session.FlarumSession": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}, "pyflarum.session.FlarumSession.api_urls": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.session.FlarumUser": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.get_forum_data": {"tf": 1}, "pyflarum.session.FlarumUser.get_user_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_discussion_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_post_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_discussions": {"tf": 1}, "pyflarum.session.FlarumUser.get_posts": {"tf": 1}, "pyflarum.session.FlarumUser.get_users": {"tf": 1}, "pyflarum.session.FlarumUser.get_notifications": {"tf": 1}, "pyflarum.session.FlarumUser.mark_all_discussions_as_read": {"tf": 1}, "pyflarum.session.FlarumUser.mark_all_notifications_as_read": {"tf": 1}, "pyflarum.session.FlarumUser.get_groups": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1}, "pyflarum.session.FlarumUser.send_password_reset_email": {"tf": 1}, "pyflarum.session.FlarumUser.update_preferences": {"tf": 1}, "pyflarum.session.FlarumUser.change_email": {"tf": 1}, "pyflarum.session.FlarumUser.upload_user_avatar": {"tf": 1}, "pyflarum.session.FlarumUser.remove_user_avatar": {"tf": 1}}, "df": 19}}}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.canViewFlags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.flagCount": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.guidelinesUrl": {"tf": 1}}, "df": 4}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin.canFlag": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.flagCount": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.admin.MailSettings.fields": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.flarum.core.BaseFlarumBulkObject.first_link": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.filters": {"tf": 1}, "pyflarum.flarum.core.filters.Filter": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.forum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.title": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.description": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.showLanguageSelector": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.baseUrl": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.basePath": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.debug": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.apiUrl": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.welcomeTitle": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.welcomeMessage": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.themePrimaryColor": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.themeSecondaryColor": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.logoUrl": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.faviconUrl": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.headerHtml": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.footerHtml": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.allowSignUp": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.defaultRoute": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.canViewForum": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.canStartDiscussion": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.canSearchUsers": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.adminUrl": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.version": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.allowUsernameMentionFormat": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.get_groups": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.included": {"tf": 1.4142135623730951}}, "df": 27, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin.markdown_mdarea": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.follow": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum.extensions.flarum.FoF_BestAnswer": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.hasBestAnswer": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.bestAnswerSetAt": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin.canSelectBestAnswer": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}}, "df": 9}}}}}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {"pyflarum.extensions.flarum.FoF_Byobu": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditRecipients": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditUserRecipients": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditGroupRecipients": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.blocksPd": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.cannotBeDirectlyMessaged": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}}, "df": 11}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.FoF_Merge": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin.canMerge": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}}, "df": 6}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.extensions.flarum.FoF_PreventNecrobumping": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin.fof_prevent_necrobumping": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}}, "df": 6}}}}}}}}}, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin.fof_prevent_necrobumping": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.FoF_Spamblock": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin.spamblock": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin.canSpamblock": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}}, "df": 8}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.FoF_Split": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin.canSplit": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}}, "df": 6}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.extensions.flarum.FoF_UserBio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin.max_bio_length": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin.update_user_bio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.bio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canViewBio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canEditBio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}}, "df": 12}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.FoF_UsernameRequest": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin.usernameHistory": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.forum.Forum.footerHtml": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.forum.Forum.faviconUrl": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.notifications.Notification.from_user": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.extensions.admin.MailSettings.errors": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.error_handler": {"tf": 1}, "pyflarum.error_handler.FlarumError": {"tf": 1}, "pyflarum.error_handler.FlarumError.__init__": {"tf": 1}, "pyflarum.error_handler.MissingExtensionError": {"tf": 1}, "pyflarum.error_handler.MissingExtensionWarning": {"tf": 1}, "pyflarum.error_handler.parse_request": {"tf": 1}, "pyflarum.error_handler.handle_errors": {"tf": 1}}, "df": 7}}}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions": {"tf": 1}, "pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.__init__": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_notifications": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.__init__": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin": {"tf": 1}, "pyflarum.extensions.admin.MailSettings": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.fields": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mailgun": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mailgun_secret": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mailgun_domain": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.log": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.smtp": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_host": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_port": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_encryption": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_username": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_password": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.sending": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.errors": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.enable_extension": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.disable_extension": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.clear_cache": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_forum_info": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.get_mail_settings": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_mail_settings": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.send_test_mail": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_appearance": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.upload_logo": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.remove_logo": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.upload_favicon": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.remove_favicon": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_header": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_footer": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_css": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin.get_user_by_username": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.is_mentioned_in": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canViewWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canManageWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canDeleteWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.visibleWarningCount": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.replyTemplate": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.canManageReplyTemplates": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin.canViewWhoTypes": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin.isApproved": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.isApproved": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.canApprove": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.canViewFlags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.flagCount": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.guidelinesUrl": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin.canFlag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.like": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.unlike": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin.canLike": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin.get_liked_by": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.lock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.unlock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.isLocked": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.canLock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin.markdown_mdarea": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.stick": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.unstick": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.isSticky": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.canSticky": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.follow": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.unfollow": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin.subscription": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.canSuspend": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspendedUntil": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspend": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.name": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.description": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.slug": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.color": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundUrl": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundMode": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.icon": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.discussionCount": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.position": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.defaultSort": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.isChild": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.isHidden": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.lastPostedAt": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.canStartDiscussion": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.canAddToDiscussion": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.subscription": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.template": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.get_parent_tag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.restrict_permissions": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.unrestrict_permissions": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.canBypassTagCounts": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minPrimaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxPrimaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minSecondaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxSecondaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.canTag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.get_tags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.hasBestAnswer": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.bestAnswerSetAt": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin.canSelectBestAnswer": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditRecipients": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditUserRecipients": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditGroupRecipients": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.blocksPd": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.cannotBeDirectlyMessaged": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin.canMerge": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin.fof_prevent_necrobumping": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin.spamblock": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin.canSpamblock": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin.canSplit": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin.max_bio_length": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin.update_user_bio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.bio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canViewBio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canEditBio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin.usernameHistory": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.name": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.description": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.computation": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.points": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.icon": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.rectangle": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.active": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.hidden": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.new": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_post_footer": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_user_card": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.update_settings": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.create_achievement": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.get_all_achievements": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch": {"tf": 1}, "pyflarum.extensions.watch.WatchFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.watch.WatchFlarumUserMixin.watch_notifications": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 292, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.__init__": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.enable_extension": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.groups.Group.edit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.edit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.edit": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.posts.PostFromNotification.editedAt": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.users.UserFromNotification.email": {"tf": 1}}, "df": 1}}}}}, "_": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "_": {"docs": {"pyflarum.error_handler.FlarumError.__init__": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.__init__": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.__init__": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussions.__init__": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.Groups.__init__": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.Posts.__init__": {"tf": 1}, "pyflarum.flarum.core.users.Users.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 20}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.error_handler.MissingExtensionError": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.error_handler.MissingExtensionWarning": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 27}}}, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minPrimaryTags": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minSecondaryTags": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.admin.MailSettings.mail": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.MailSettings": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.fields": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mailgun": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mailgun_secret": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mailgun_domain": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.log": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.smtp": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_host": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_port": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_encryption": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_username": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_password": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.sending": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.errors": {"tf": 1}}, "df": 15}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.admin.MailSettings.mailgun": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.MailSettings.mailgun_secret": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.admin.MailSettings.mailgun_domain": {"tf": 1}}, "df": 1}}}}}}}}}}, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.MailSettings.mail_host": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.MailSettings.mail_port": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.admin.MailSettings.mail_password": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.MailSettings.mail_encryption": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.extensions.admin.MailSettings.mail_username": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {"pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin.markdown_mdarea": {"tf": 1}}, "df": 1}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.flarum.core.notifications.Notifications.mark_all_as_read": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.session.FlarumUser.mark_all_discussions_as_read": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.session.FlarumUser.mark_all_notifications_as_read": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.flarum.core.notifications.Notification.mark_as_read": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.users.MyUser.markedAllAsReadAt": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxPrimaryTags": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxSecondaryTags": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin.max_bio_length": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.name": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.description": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.computation": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.points": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.icon": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.rectangle": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.active": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.hidden": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.new": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_post_footer": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_user_card": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.update_settings": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.create_achievement": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.get_all_achievements": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}}, "df": 21}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canViewWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canManageWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canDeleteWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.visibleWarningCount": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin.canMerge": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}, "y": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.users.MyUser": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.markedAllAsReadAt": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.unreadNotificationCount": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.newNotificationCount": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.preferences": {"tf": 1}}, "df": 5}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.error_handler.handle_errors": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.hasBestAnswer": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.Achievement.hidden": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.hide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.hide": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.forum.Forum.headerHtml": {"tf": 1}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}}, "df": 27}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"tf": 1}, "pyflarum.session.FlarumUser.get_discussions": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.session.FlarumUser.get_discussion_by_id": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.get_all_achievements": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.Post.get_author": {"tf": 1}}, "df": 4}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.get_mail_settings": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.session.FlarumUser.get_users": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin.get_user_by_username": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.session.FlarumUser.get_user_by_id": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin.get_liked_by": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.get_parent_tag": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1}, "pyflarum.session.FlarumUser.get_posts": {"tf": 1}}, "df": 2, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.session.FlarumUser.get_post_by_id": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.get_tags": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}}, "df": 2}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyflarum.session.FlarumUser.get_forum_data": {"tf": 1}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.flarum.core.forum.Forum.get_groups": {"tf": 1}, "pyflarum.session.FlarumUser.get_groups": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.notifications.Notification.get_subject": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum.session.FlarumUser.get_notifications": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.guidelinesUrl": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.flarum.core.groups": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.create": {"tf": 1}, "pyflarum.flarum.core.groups.Groups": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.groups.Groups.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.groups.Group": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.groups.Group.nameSingular": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.groups.Group.namePlural": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.groups.Group.color": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.groups.Group.icon": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.groups.Group.isHidden": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.groups.Group.edit": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.groups.Group.delete": {"tf": 1.4142135623730951}}, "df": 15}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.absolutely_all": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_notifications": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.__init__": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}}, "df": 11, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_notifications": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_notifications": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.__init__": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.admin": {"tf": 1}, "pyflarum.extensions.admin.MailSettings": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.fields": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mailgun": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mailgun_secret": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mailgun_domain": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.log": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.smtp": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_host": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_port": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_encryption": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_username": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.mail_password": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.sending": {"tf": 1}, "pyflarum.extensions.admin.MailSettings.errors": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.enable_extension": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.disable_extension": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.clear_cache": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_forum_info": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.get_mail_settings": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_mail_settings": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.send_test_mail": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_appearance": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.upload_logo": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.remove_logo": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.upload_favicon": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.remove_favicon": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_header": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_footer": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_css": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}}, "df": 36, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.enable_extension": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.disable_extension": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.clear_cache": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_forum_info": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.get_mail_settings": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_mail_settings": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.send_test_mail": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_appearance": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.upload_logo": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.remove_logo": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.upload_favicon": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.remove_favicon": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_header": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_footer": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_css": {"tf": 1}}, "df": 16}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}}, "df": 4}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.forum.Forum.adminUrl": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum.extensions.advanced_search": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin.get_user_by_username": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}}, "df": 7}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin.get_user_by_username": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canViewWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canManageWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canDeleteWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.visibleWarningCount": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}}, "df": 9}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ReplyTemplates": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.replyTemplate": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.canManageReplyTemplates": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin.isApproved": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.isApproved": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.canApprove": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.forum.Forum.apiUrl": {"tf": 1}}, "df": 1}}}, "_": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.session.FlarumSession.api_urls": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.Achievement": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.name": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.description": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.computation": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.points": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.icon": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.rectangle": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.active": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.hidden": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.new": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_post_footer": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_user_card": {"tf": 1}}, "df": 3}}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.update_settings": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.create_achievement": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.get_all_achievements": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.Achievement.active": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.BaseFlarumIndividualObject.attributes": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.flarum.core.forum.Forum.allowSignUp": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.forum.Forum.allowUsernameMentionFormat": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.users.UserFromNotification.avatarUrl": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.session.FlarumSession.authenticate": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.admin.MailSettings.log": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.forum.Forum.logoUrl": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.lock": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.lock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.unlock": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.isLocked": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.canLock": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Lock.LockExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.like": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.unlike": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin.canLike": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin.get_liked_by": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Likes.LikesExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.lastPostedAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostedAt": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostNumber": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadPostNumber": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadAt": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.extensions.admin.MailSettings.smtp": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.admin.MailSettings.sending": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.send_test_mail": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.session.FlarumUser.send_password_reset_email": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.session": {"tf": 1}, "pyflarum.session.FlarumSession": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}, "pyflarum.session.FlarumSession.api_urls": {"tf": 1}, "pyflarum.session.FlarumUser": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.get_forum_data": {"tf": 1}, "pyflarum.session.FlarumUser.get_user_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_discussion_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_post_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_discussions": {"tf": 1}, "pyflarum.session.FlarumUser.get_posts": {"tf": 1}, "pyflarum.session.FlarumUser.get_users": {"tf": 1}, "pyflarum.session.FlarumUser.get_notifications": {"tf": 1}, "pyflarum.session.FlarumUser.mark_all_discussions_as_read": {"tf": 1}, "pyflarum.session.FlarumUser.mark_all_notifications_as_read": {"tf": 1}, "pyflarum.session.FlarumUser.get_groups": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1}, "pyflarum.session.FlarumUser.send_password_reset_email": {"tf": 1}, "pyflarum.session.FlarumUser.update_preferences": {"tf": 1}, "pyflarum.session.FlarumUser.change_email": {"tf": 1}, "pyflarum.session.FlarumUser.upload_user_avatar": {"tf": 1}, "pyflarum.session.FlarumUser.remove_user_avatar": {"tf": 1}}, "df": 24}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.stick": {"tf": 1}}, "df": 1, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.stick": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.unstick": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.isSticky": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.canSticky": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin.subscription": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.subscription": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.follow": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.unfollow": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin.subscription": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspend": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.canSuspend": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspendedUntil": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspend": {"tf": 1}}, "df": 4}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin.suspendedUntil": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.slug": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.slug": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin.spamblock": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin.spamblock": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin.canSpamblock": {"tf": 1}}, "df": 2}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin.canSplit": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_post_footer": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin.show_achievements_in_user_card": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.forum.Forum.showLanguageSelector": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.update_forum_info": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.update_mail_settings": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.update_appearance": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_header": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_footer": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.update_custom_css": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin.update_user_bio": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.session.FlarumUser.update_user_info": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin.update_settings": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.session.FlarumUser.update_preferences": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.upload_logo": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.upload_favicon": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.session.FlarumUser.upload_user_avatar": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.unlike": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.unlock": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.unstick": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.unfollow": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.unrestrict_permissions": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.users.MyUser.unreadNotificationCount": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.unhide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.unhide": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.users": {"tf": 1}, "pyflarum.flarum.core.users.Users": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.users.Users.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.users.UserFromNotification": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.username": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.email": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.displayName": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.avatarUrl": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.slug": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.joinTime": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.discussionCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEdit": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditCredentials": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditGroups": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canDelete": {"tf": 1}, "pyflarum.flarum.core.users.User": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.users.MyUser": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.markedAllAsReadAt": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.unreadNotificationCount": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.newNotificationCount": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.preferences": {"tf": 1}}, "df": 24, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin.max_bio_length": {"tf": 1}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin.update_user_bio": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.bio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canViewBio": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.canEditBio": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.users.UserFromNotification.username": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin.usernameHistory": {"tf": 1}}, "df": 2}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin.usernameHistory": {"tf": 1}}, "df": 1}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum.flarum.core.users.UserFromNotification": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.username": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.email": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.displayName": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.avatarUrl": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.slug": {"tf": 1}}, "df": 7}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.flarum.core.users.UserFromBulk": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.joinTime": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.discussionCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEdit": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditCredentials": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditGroups": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canDelete": {"tf": 1}}, "df": 8}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.url": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.url": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.remove_logo": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.admin.AdminFlarumUserMixin.remove_favicon": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.session.FlarumUser.remove_user_avatar": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.replyTemplate": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.replyTemplate": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.canManageReplyTemplates": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {"pyflarum.flarum.core.notifications.Notification.reply_number": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.flarum.core.posts.PostFromNotification.reply_to": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin.canViewWhoTypes": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"tf": 1}}, "df": 2}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.restrict_permissions": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.restore": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.restore": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.Achievement.rectangle": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.commands.CommandsFlarumUserMixin.is_mentioned_in": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.posts.PostFromDiscussion.is_comment": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin.isApproved": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.isApproved": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.isLocked": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.isSticky": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.isChild": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.isHidden": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.isHidden": {"tf": 1}, "pyflarum.flarum.core.groups.Group.isHidden": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.flarum.core.notifications.Notification.isRead": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.icon": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.icon": {"tf": 1}, "pyflarum.flarum.core.groups.Group.icon": {"tf": 1}}, "df": 3}}}, "d": {"docs": {"pyflarum.flarum.core.BaseFlarumIndividualObject.id": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.included": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.included": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.posts.PostFromNotification.ipAddress": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.visibleWarningCount": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.flarum.core.forum.Forum.version": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.extensions.flarum.Blomstra_Realtime": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin.canViewWhoTypes": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}}, "df": 6}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.blocksPd": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundUrl": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundMode": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.BaseFlarumObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.data": {"tf": 1}}, "df": 3}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.first_link": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.previous_link": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.next_link": {"tf": 1}}, "df": 5}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.BaseFlarumIndividualObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.id": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.attributes": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.forum.Forum.baseUrl": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum.flarum.core.forum.Forum.basePath": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.hasBestAnswer": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.bestAnswerSetAt": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin.canSelectBestAnswer": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin.bestAnswerSetAt": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditRecipients": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditUserRecipients": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin.canEditGroupRecipients": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.blocksPd": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin.cannotBeDirectlyMessaged": {"tf": 1}}, "df": 3}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin.bio": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.name": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.description": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.slug": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.color": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundUrl": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.backgroundMode": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.icon": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.discussionCount": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.position": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.defaultSort": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.isChild": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.isHidden": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.lastPostedAt": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.canStartDiscussion": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.canAddToDiscussion": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.subscription": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.template": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.get_parent_tag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.restrict_permissions": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.unrestrict_permissions": {"tf": 1}}, "df": 22, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.canBypassTagCounts": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minPrimaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxPrimaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.minSecondaryTags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin.maxSecondaryTags": {"tf": 1}}, "df": 6}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.canTag": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin.get_tags": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}}, "df": 3}}}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.template": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.title": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.title": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.forum.Forum.themePrimaryColor": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.forum.Forum.themeSecondaryColor": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.name": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.name": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.groups.Group.nameSingular": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.groups.Group.namePlural": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.Achievement.new": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {"pyflarum.flarum.core.notifications.Notification.new_post_number": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.users.MyUser.newNotificationCount": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.flarum.core.BaseFlarumBulkObject.next_link": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum.flarum.core.notifications": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.notifications.Notifications.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.notifications.Notifications.mark_all_as_read": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.notifications.Notification": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.notifications.Notification.contentType": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.notifications.Notification.content": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.notifications.Notification.new_post_number": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.notifications.Notification.reply_number": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.notifications.Notification.createdAt": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.notifications.Notification.isRead": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.notifications.Notification.from_user": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.notifications.Notification.get_subject": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.notifications.Notification.mark_as_read": {"tf": 1.4142135623730951}}, "df": 14}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.posts.PostFromDiscussion.number": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum.extensions.watch": {"tf": 1}, "pyflarum.extensions.watch.WatchFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.watch.WatchFlarumUserMixin.watch_notifications": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 7, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.watch.WatchFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.watch.WatchFlarumUserMixin.watch_notifications": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum.extensions.watch.WatchFlarumUserMixin.watch_notifications": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 4}}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.forum.Forum.welcomeTitle": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.flarum.core.forum.Forum.welcomeMessage": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.users.UserFromBulk.joinTime": {"tf": 1}}, "df": 1}}}}}}}}}, "doc": {"root": {"0": {"docs": {"pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}}, "df": 1}, "1": {"0": {"docs": {}, "df": 0, "x": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "2": {"3": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"pyflarum": {"tf": 2.8284271247461903}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}}, "df": 3}, "2": {"8": {"2": {"2": {"1": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"9": {"docs": {"pyflarum": {"tf": 2}, "pyflarum.extensions.ExtensionMixin": {"tf": 2.449489742783178}, "pyflarum.extensions.admin.AdminExtension": {"tf": 2.449489742783178}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 2.449489742783178}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 2.449489742783178}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 2.449489742783178}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 2.449489742783178}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 2.449489742783178}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 2.449489742783178}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 2.449489742783178}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 2.449489742783178}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 2.449489742783178}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 2.449489742783178}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 2.449489742783178}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 2.449489742783178}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 2.449489742783178}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 2.449489742783178}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 2.449489742783178}, "pyflarum.extensions.watch.WatchExtension": {"tf": 2.449489742783178}}, "df": 19}, "docs": {"pyflarum": {"tf": 1}}, "df": 1}, "4": {"2": {"9": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"pyflarum": {"tf": 1}}, "df": 1}, "5": {"0": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "6": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"pyflarum": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum": {"tf": 6.324555320336759}, "pyflarum.custom_types": {"tf": 1}, "pyflarum.error_handler.MissingExtensionError": {"tf": 1}, "pyflarum.error_handler.MissingExtensionWarning": {"tf": 1}, "pyflarum.extensions.ExtensionMixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.extensions.admin.MailSettings": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.BaseFlarumIndividualObject": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 2.23606797749979}, "pyflarum.flarum.core.groups.PreparedGroup": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.from_user": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.get_subject": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.Post.get_author": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1.4142135623730951}}, "df": 48, "'": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1}, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 27}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 3}}, "df": 1, "'": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.datetime_conversions.flarum_to_datetime": {"tf": 1}, "pyflarum.datetime_conversions.datetime_to_flarum": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 2}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 2.6457513110645907}, "pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.MailSettings": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.groups.PreparedGroup": {"tf": 1}}, "df": 56}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumBulkObject.previous_link": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 4}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.discussions.PreparedDiscussion": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"tf": 1}}, "df": 3}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.flarum.core.groups.Group.edit": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.edit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.reply_to": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.edit": {"tf": 1}}, "df": 4}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.users.MyUser.preferences": {"tf": 1}, "pyflarum.session.FlarumUser.update_preferences": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 2.8284271247461903}}, "df": 1}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.flarum.core.forum.Forum.themePrimaryColor": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "n": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "t": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.posts.PostFromNotification.ipAddress": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.email": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 2}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 3.4641016151377544}}, "df": 1, "'": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1}}}}, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.participantCount": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.datetime_conversions.flarum_to_datetime": {"tf": 1}, "pyflarum.datetime_conversions.datetime_to_flarum": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.filters.Filter": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1}}, "df": 18}}}}, "s": {"docs": {"pyflarum.error_handler.parse_request": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}}, "df": 1}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 2}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}}, "df": 3, "[": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1.7320508075688772}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 2}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 37, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumSession.__init__": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.__init__": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.send_password_reset_email": {"tf": 1}, "pyflarum.session.FlarumUser.change_email": {"tf": 1}}, "df": 10, "=": {"docs": {}, "df": 0, "\"": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 33}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}}, "df": 18}}}}, "h": {"docs": {"pyflarum.flarum.core.forum.Forum.basePath": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.forum.Forum.adminUrl": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum": {"tf": 2.8284271247461903}}, "df": 1}, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 2}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.reply_number": {"tf": 1}}, "df": 29}}}}, "t": {"docs": {"pyflarum": {"tf": 5.196152422706632}, "pyflarum.custom_types": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1.7320508075688772}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.extensions.admin.MailSettings": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.isApproved": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.canApprove": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.like": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.unlike": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin.get_liked_by": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.participantCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostedAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canReply": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 2.8284271247461903}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 2.23606797749979}, "pyflarum.flarum.core.groups.PreparedGroup": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.notifications.Notification.new_post_number": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.reply_number": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.get_subject": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PreparedPost.post": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PreparedPost.create": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.Posts": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.createdAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromDiscussion.is_comment": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentHtml": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.hide": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromDiscussion.restore": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromDiscussion.unhide": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromDiscussion.delete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.edit": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromNotification": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromNotification.ipAddress": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.editedAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canEdit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canDelete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canHide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.reply_to": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.edit": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromBulk": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.Post": {"tf": 1}, "pyflarum.session.FlarumUser.get_post_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_posts": {"tf": 1}}, "df": 65, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.custom_types": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1.4142135623730951}}, "df": 4}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.custom_types": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.get_subject": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}}, "df": 4}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.MailSettings": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.groups.PreparedGroup": {"tf": 1}}, "df": 5}}}}}}}, "x": {"docs": {"pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}}, "df": 1}}}}}, "'": {"docs": {"pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.number": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.ipAddress": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.url": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.Post.get_author": {"tf": 1}}, "df": 11}, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.flagCount": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.post": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.create": {"tf": 1}}, "df": 4}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.flarum.core.notifications.Notification.contentType": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.flarum.core.notifications.Notification.new_post_number": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 6}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1}, "pyflarum.flarum.core.groups.Group.namePlural": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.error_handler.parse_request": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.unfollow": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1.4142135623730951}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1.4142135623730951}}, "df": 45, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1.4142135623730951}}, "df": 18}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin.fof_prevent_necrobumping": {"tf": 1}}, "df": 1}}, "t": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canStartDiscussion": {"tf": 1}}, "df": 29}}, "y": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin.subscription": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 2.23606797749979}}, "df": 1}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.canSticky": {"tf": 1}}, "df": 1, "i": {"docs": {"pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.stick": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.isSticky": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {"pyflarum.session.FlarumUser.update_user_info": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.datetime_conversions.flarum_to_datetime": {"tf": 1}, "pyflarum.datetime_conversions.datetime_to_flarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1}, "pyflarum.session.FlarumUser.mark_all_discussions_as_read": {"tf": 1}}, "df": 2}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum": {"tf": 2.6457513110645907}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"pyflarum": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}}, "df": 18}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum": {"tf": 2.23606797749979}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.hide": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 31}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"tf": 1}, "pyflarum.flarum.core.groups.Group.delete": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications.mark_all_as_read": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.mark_as_read": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.delete": {"tf": 1}, "pyflarum.session.FlarumUser.mark_all_notifications_as_read": {"tf": 1}}, "df": 6}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin.subscription": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.notifications.Notification.get_subject": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.session.FlarumSession.api_urls": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}}, "df": 2}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.hide": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.flarum.core.forum.Forum.allowSignUp": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.groups.Group.nameSingular": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 2.449489742783178}}, "df": 1}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.Post.get_author": {"tf": 1}}, "df": 7}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 28, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 27}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum": {"tf": 2.8284271247461903}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1.7320508075688772}, "pyflarum.session.FlarumUser.get_user_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_discussion_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_post_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.mark_all_discussions_as_read": {"tf": 1}}, "df": 7, "i": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.guidelinesUrl": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.filters.Filter": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.mark_all_discussions_as_read": {"tf": 1}, "pyflarum.session.FlarumUser.update_preferences": {"tf": 1}, "pyflarum.session.FlarumUser.change_email": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.upload_user_avatar": {"tf": 1}, "pyflarum.session.FlarumUser.remove_user_avatar": {"tf": 1}}, "df": 15}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1, "n": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.welcomeMessage": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 2.449489742783178}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.flarum.core.forum.Forum.themeSecondaryColor": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1.7320508075688772}, "pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.session.FlarumSession": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 38, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 7}}}}}}}}}}}}, "e": {"docs": {"pyflarum": {"tf": 2.449489742783178}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.visibleWarningCount": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}}, "df": 12, "m": {"docs": {"pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 2}, "pyflarum.extensions.admin.AdminExtension": {"tf": 2}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 2}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 2}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 2}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 2}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 2}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 2}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 2}, "pyflarum.extensions.watch.WatchExtension": {"tf": 2}}, "df": 18}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.forum.Forum.showLanguageSelector": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 27}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.PreparedDiscussion": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}}, "df": 6}, "d": {"docs": {"pyflarum.session.FlarumUser.send_password_reset_email": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.forum.Forum.canSearchUsers": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canDelete": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1.4142135623730951}}, "df": 6}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.url": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.slug": {"tf": 1}}, "df": 3}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum.session.FlarumSession.authenticate": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.visibleWarningCount": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum": {"tf": 2.23606797749979}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 1.4142135623730951}}, "df": 2}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "x": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.welcomeTitle": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.welcomeMessage": {"tf": 1}}, "df": 3}, "t": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1.7320508075688772}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1.7320508075688772}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1.7320508075688772}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1.7320508075688772}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1.7320508075688772}}, "df": 6}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.unhide": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}}, "df": 4}}, "e": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.extensions.admin.MailSettings": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.baseUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.basePath": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup": {"tf": 1}}, "df": 26, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.unhide": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "a": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"pyflarum.datetime_conversions.flarum_to_datetime": {"tf": 1}, "pyflarum.datetime_conversions.datetime_to_flarum": {"tf": 1}}, "df": 2, "e": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "p": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 2}}, "df": 1}, "d": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}, "v": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadPostNumber": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1}, "pyflarum.session.FlarumUser.send_password_reset_email": {"tf": 1}, "pyflarum.session.FlarumUser.upload_user_avatar": {"tf": 1}}, "df": 4}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}}, "df": 18}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}}, "df": 18}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_notifications": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}}, "df": 7}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "t": {"docs": {"pyflarum.datetime_conversions.flarum_to_datetime": {"tf": 1.4142135623730951}, "pyflarum.datetime_conversions.datetime_to_flarum": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}}, "df": 7}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 4}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}, "pyflarum.flarum.core.users.MyUser": {"tf": 1}}, "df": 13}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.notifications.Notification.contentType": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.content": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentHtml": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1.4142135623730951}}, "df": 9}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {"pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 6}, "r": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 2.6457513110645907}, "pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}}, "df": 19}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "t": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_notifications": {"tf": 1}}, "df": 4}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 2}}, "a": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1.7320508075688772}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.commentCount": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.is_comment": {"tf": 1}}, "df": 4, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 1}}}}}, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.users.UserFromBulk.commentCount": {"tf": 1}}, "df": 1}}}}}}}}}, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.session.FlarumSession.api_urls": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "e": {"docs": {"pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"pyflarum": {"tf": 3.872983346207417}, "pyflarum.extensions.admin.MailSettings": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.BaseFlarumIndividualObject": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 2.23606797749979}, "pyflarum.flarum.core.groups.PreparedGroup": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.notifications.Notification.from_user": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.get_subject": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.Post.get_author": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1.4142135623730951}}, "df": 16}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.flagCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.participantCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.discussionCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.commentCount": {"tf": 1}}, "df": 5}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.forum.Forum.themePrimaryColor": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.themeSecondaryColor": {"tf": 1}, "pyflarum.flarum.core.groups.Group.color": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 2.449489742783178}, "pyflarum.error_handler.FlarumError": {"tf": 1}, "pyflarum.extensions.ExtensionMixin": {"tf": 2.23606797749979}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 2.23606797749979}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 86, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}}, "df": 18}}}}}}}, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 27}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 27}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.change_email": {"tf": 1.7320508075688772}, "pyflarum.session.FlarumUser.upload_user_avatar": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 8}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.createdAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canReply": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.create": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.post": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.create": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.createdAt": {"tf": 1}}, "df": 17, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditCredentials": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.custom_types": {"tf": 1}, "pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}}, "df": 20}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin.subscription": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 3.3166247903554}, "pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}}, "df": 22}}, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.watch.WatchFlarumUserMixin": {"tf": 1}, "pyflarum.session.FlarumSession": {"tf": 1}, "pyflarum.session.FlarumUser": {"tf": 1}}, "df": 9}}}, "p": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}}, "df": 18, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum": {"tf": 5.196152422706632}, "pyflarum.error_handler.FlarumError": {"tf": 1}, "pyflarum.error_handler.handle_errors": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.admin.MailSettings": {"tf": 2}, "pyflarum.extensions.admin.AdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Tags.Tag": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.watch.WatchFlarumUserMixin": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 2}, "pyflarum.flarum.core.BaseFlarumIndividualObject": {"tf": 2}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 2.23606797749979}, "pyflarum.flarum.core.filters.Filter": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.version": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup": {"tf": 2}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.Group": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.from_user": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.get_subject": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.Post": {"tf": 1}, "pyflarum.flarum.core.posts.Post.get_author": {"tf": 1}, "pyflarum.session.FlarumSession": {"tf": 1}, "pyflarum.session.FlarumUser": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1.4142135623730951}}, "df": 39, "'": {"docs": {"pyflarum": {"tf": 2.8284271247461903}, "pyflarum.datetime_conversions.flarum_to_datetime": {"tf": 1.4142135623730951}, "pyflarum.datetime_conversions.datetime_to_flarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.api_urls": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 13}, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 3.872983346207417}, "pyflarum.extensions.ExtensionMixin": {"tf": 2}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 2}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 2}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 2}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 2}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 2}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 2}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 2}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 2}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 2}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1}}, "df": 52, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "(": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}}, "df": 27}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum": {"tf": 2.449489742783178}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.error_handler.parse_request": {"tf": 1}, "pyflarum.error_handler.handle_errors": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.post": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.create": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.hide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.restore": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.unhide": {"tf": 1}}, "df": 14}}}}}}}}, "w": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.canViewFlags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.flagCount": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "'": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 2}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 2.23606797749979}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.first_link": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.isHidden": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1}}, "df": 8, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {"pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1.4142135623730951}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_notifications": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.filters.Filter": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1.7320508075688772}, "pyflarum.session.FlarumUser.get_discussions": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.get_posts": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.get_users": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.get_notifications": {"tf": 1.4142135623730951}}, "df": 12, "(": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "=": {"docs": {}, "df": 0, "\"": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "[": {"docs": {}, "df": 0, "q": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 2}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum": {"tf": 3}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussions": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 2}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.Groups": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications": {"tf": 1}, "pyflarum.flarum.core.posts.Posts": {"tf": 1}, "pyflarum.flarum.core.users.Users": {"tf": 1}, "pyflarum.flarum.core.users.User": {"tf": 1}}, "df": 17, "/": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 6}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "w": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.flarum.core.forum.Forum.faviconUrl": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 27}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.hide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.restore": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.unhide": {"tf": 1}}, "df": 8}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 2}, "pyflarum.error_handler.handle_errors": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"tf": 1}}, "df": 32}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1.7320508075688772}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1.7320508075688772}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.canViewFlags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.flagCount": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.forum.Forum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.description": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.baseUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.basePath": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.apiUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.welcomeTitle": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.welcomeMessage": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.headerHtml": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.footerHtml": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.defaultRoute": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canViewForum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.adminUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.version": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.get_groups": {"tf": 1}, "pyflarum.flarum.core.groups.Group.isHidden": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.joinTime": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1.7320508075688772}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1.7320508075688772}, "pyflarum.session.FlarumUser.get_forum_data": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.get_groups": {"tf": 1}}, "df": 37, "_": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 2.449489742783178}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 8}}}}, "'": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.guidelinesUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.title": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.themePrimaryColor": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.themeSecondaryColor": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.logoUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.faviconUrl": {"tf": 1}}, "df": 7}, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.forum.Forum.baseUrl": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "m": {"docs": {"pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1}, "pyflarum.flarum.core.groups.Group.nameSingular": {"tf": 1}, "pyflarum.flarum.core.groups.Group.namePlural": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.datetime_conversions.flarum_to_datetime": {"tf": 1}, "pyflarum.datetime_conversions.datetime_to_flarum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.themePrimaryColor": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.themeSecondaryColor": {"tf": 1}}, "df": 4}}}, "c": {"docs": {"pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "=": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1}, "pyflarum.flarum.core.groups.Group.delete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.delete": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canDelete": {"tf": 1}}, "df": 5}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.follow": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}}, "df": 47}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.forum.Forum.footerHtml": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.groups.Group.icon": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 2.449489742783178}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}}, "df": 2, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.users.MyUser": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 2}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}}, "df": 56}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 4.242640687119285}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.first_link": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.previous_link": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.next_link": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.filters.Filter": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.flarum.core.forum.Forum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.apiUrl": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.Groups": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}, "pyflarum.flarum.core.users.Users": {"tf": 1}, "pyflarum.flarum.core.users.User": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumSession.api_urls": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.__init__": {"tf": 1.4142135623730951}}, "df": 39, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 2.449489742783178}, "pyflarum.flarum.core.discussions.Discussions": {"tf": 1}, "pyflarum.session.FlarumUser.get_discussions": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.posts.Posts": {"tf": 1}, "pyflarum.session.FlarumUser.get_posts": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.session.FlarumUser.get_users": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum.session.FlarumUser.get_notifications": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum.session.FlarumUser.get_groups": {"tf": 1}}, "df": 1}}}}}}, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 6}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin.isApproved": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.isApproved": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.canApprove": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve": {"tf": 1.7320508075688772}}, "df": 4, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.error_handler.handle_errors": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "z": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.visibleWarningCount": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.unreadNotificationCount": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.newNotificationCount": {"tf": 1}}, "df": 4}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}, "pyflarum.session.FlarumSession.api_urls": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"tf": 1}}, "df": 2}}, "v": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.follow": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.Achievement": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}, "k": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 2}, "pyflarum.datetime_conversions.flarum_to_datetime": {"tf": 1}, "pyflarum.datetime_conversions.datetime_to_flarum": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 2}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.filters.Filter": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.allowSignUp": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canViewForum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canStartDiscussion": {"tf": 1}, "pyflarum.session.FlarumUser.mark_all_discussions_as_read": {"tf": 1}, "pyflarum.session.FlarumUser.send_password_reset_email": {"tf": 1}}, "df": 9}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}}, "df": 27}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.id": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1.4142135623730951}}, "df": 29}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.custom_types": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.custom_types": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.custom_types": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.reply_to": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}, "pyflarum.session.FlarumUser.change_email": {"tf": 1}}, "df": 48}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.ExtensionMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 2}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.Post.get_author": {"tf": 1}}, "df": 23, ":": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyflarum": {"tf": 2}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.url": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.showLanguageSelector": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.users.UserFromNotification.avatarUrl": {"tf": 1}, "pyflarum.session.FlarumUser.upload_user_avatar": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.remove_user_avatar": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.7320508075688772}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumIndividualObject.attributes": {"tf": 1}}, "df": 29}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1}}, "df": 1}}}}}, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.ipAddress": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 9}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.guidelinesUrl": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}}, "df": 19, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1.4142135623730951}}, "df": 18}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.forum.Forum.adminUrl": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 6}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "a": {"docs": {"pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "g": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostedAt": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 41, "o": {"docs": {"pyflarum": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumSession.api_urls": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 2.23606797749979}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 3, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}}, "df": 18}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.error_handler.FlarumError": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_notifications": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}}, "df": 6}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.get_groups": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.groups.PreparedGroup.create": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.groups.Groups": {"tf": 1}, "pyflarum.flarum.core.groups.Group": {"tf": 1}, "pyflarum.flarum.core.groups.Group.color": {"tf": 1}, "pyflarum.flarum.core.groups.Group.icon": {"tf": 1}, "pyflarum.flarum.core.groups.Group.isHidden": {"tf": 1}, "pyflarum.flarum.core.groups.Group.edit": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.groups.Group.delete": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditGroups": {"tf": 1}, "pyflarum.session.FlarumUser.get_groups": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 2.6457513110645907}}, "df": 14, "'": {"docs": {"pyflarum.flarum.core.groups.Group.nameSingular": {"tf": 1}, "pyflarum.flarum.core.groups.Group.namePlural": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"pyflarum": {"tf": 3}, "pyflarum.extensions.ExtensionMixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 2}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 2}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 51}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.guidelinesUrl": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostedAt": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.email": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.send_password_reset_email": {"tf": 1}, "pyflarum.session.FlarumUser.change_email": {"tf": 1.7320508075688772}}, "df": 47, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "'": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 2.23606797749979}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 4.47213595499958}, "pyflarum.error_handler.MissingExtensionError": {"tf": 1}, "pyflarum.error_handler.MissingExtensionWarning": {"tf": 1}, "pyflarum.extensions.ExtensionMixin": {"tf": 2.23606797749979}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1.4142135623730951}}, "df": 88, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 23}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}}, "df": 18}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 3.7416573867739413}, "pyflarum.extensions.ExtensionMixin": {"tf": 2.23606797749979}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.MailSettings": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 2.23606797749979}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.contentType": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 59, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1.4142135623730951}}, "df": 18}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}}, "df": 18}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}, "n": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.groups.Group.edit": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromDiscussion.edit": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromNotification.editedAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canEdit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.edit": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEdit": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditCredentials": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditGroups": {"tf": 1}}, "df": 8, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1, "'": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "v": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum": {"tf": 1}}, "df": 10}}, "r": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}, "d": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 6}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin.markdown_mdarea": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.debug": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.error_handler.FlarumError": {"tf": 1}, "pyflarum.error_handler.MissingExtensionError": {"tf": 1}, "pyflarum.error_handler.handle_errors": {"tf": 1.4142135623730951}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.post": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.create": {"tf": 1}}, "df": 32}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.contentType": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}}, "df": 32}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.BaseFlarumIndividualObject.id": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 5}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.url": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.included": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.forum.Forum.included": {"tf": 1.4142135623730951}}, "df": 9}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 2.8284271247461903}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1.4142135623730951}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 3.1622776601683795}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 2.8284271247461903}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}}, "df": 10}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 35}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum.session.FlarumUser.update_user_info": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {"pyflarum.extensions.admin.MailSettings": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumIndividualObject": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup": {"tf": 1.4142135623730951}}, "df": 4}}}}, "c": {"docs": {"pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}}, "df": 1}}}, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 27}}}}}}, "d": {"docs": {"pyflarum": {"tf": 3}, "pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.id": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.get_user_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_discussion_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_post_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1}}, "df": 29, "e": {"docs": {}, "df": 0, "a": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin.fof_prevent_necrobumping": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.Achievement.rectangle": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}}, "df": 4, "l": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "'": {"docs": {"pyflarum": {"tf": 2.449489742783178}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.url": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}}, "df": 7}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 3.3166247903554}, "pyflarum.extensions.ExtensionMixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1.7320508075688772}}, "df": 19}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}}, "df": 27}}}}}, "'": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.session.FlarumSession.__init__": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1.4142135623730951}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"tf": 1}, "pyflarum.flarum.core.groups.Group.delete": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.flarum.core.groups.Group.icon": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"pyflarum.flarum.core.posts.PostFromNotification.ipAddress": {"tf": 1.4142135623730951}}, "df": 1}, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"2": {"0": {"3": {"2": {"2": {"docs": {}, "df": 0, "c": {"0": {"docs": {}, "df": 0, "e": {"6": {"0": {"1": {"1": {"docs": {}, "df": 0, "e": {"4": {"docs": {}, "df": 0, "f": {"3": {"0": {"4": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "e": {"7": {"docs": {}, "df": 0, "e": {"9": {"5": {"docs": {}, "df": 0, "f": {"4": {"1": {"5": {"9": {"4": {"docs": {}, "df": 0, "a": {"0": {"docs": {}, "df": 0, "b": {"0": {"8": {"6": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"2": {"7": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.session.FlarumSession.api_urls": {"tf": 1}}, "df": 1}}}}}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}, "u": {"docs": {"pyflarum": {"tf": 2}}, "df": 1, "s": {"docs": {"pyflarum": {"tf": 3.4641016151377544}, "pyflarum.extensions.ExtensionMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 2}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.get_discussions": {"tf": 1}, "pyflarum.session.FlarumUser.get_posts": {"tf": 1}, "pyflarum.session.FlarumUser.get_users": {"tf": 1}, "pyflarum.session.FlarumUser.get_notifications": {"tf": 1}}, "df": 37, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 4.69041575982343}, "pyflarum.custom_types": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canViewWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.visibleWarningCount": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin.get_liked_by": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendUserMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuUserMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockUserMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioUserFromBulkMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestUserMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.participantCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 2}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canSearchUsers": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.from_user": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.Post.get_author": {"tf": 1}, "pyflarum.flarum.core.users.Users": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.displayName": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.users.UserFromBulk.joinTime": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEdit": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canDelete": {"tf": 1}, "pyflarum.flarum.core.users.User": {"tf": 1}, "pyflarum.flarum.core.users.MyUser": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumSession.__init__": {"tf": 1.7320508075688772}, "pyflarum.session.FlarumSession.authenticate": {"tf": 2}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.get_user_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_users": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 2.449489742783178}, "pyflarum.session.FlarumUser.update_preferences": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.change_email": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.upload_user_avatar": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.remove_user_avatar": {"tf": 1.4142135623730951}}, "df": 55, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.username": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "=": {"docs": {}, "df": 0, "\"": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 7}}}}}}}}}}}}}, "'": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canManageWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canDeleteWarnings": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.username": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.email": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.avatarUrl": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.slug": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.discussionCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditCredentials": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditGroups": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1}, "pyflarum.session.FlarumUser.update_preferences": {"tf": 1}, "pyflarum.session.FlarumUser.change_email": {"tf": 1}, "pyflarum.session.FlarumUser.remove_user_avatar": {"tf": 1}}, "df": 23}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.custom_types": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.Post.get_author": {"tf": 1}}, "df": 4}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum.custom_types": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.from_user": {"tf": 1}}, "df": 4}}}}}}}}}, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 6}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostedAt": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 2.23606797749979}, "pyflarum.session.FlarumUser.update_preferences": {"tf": 1.4142135623730951}}, "df": 5}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.session.FlarumUser.upload_user_avatar": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "q": {"docs": {}, "df": 0, "u": {"docs": {"pyflarum.flarum.core.BaseFlarumIndividualObject.id": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_notifications": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1.4142135623730951}}, "df": 6}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin": {"tf": 1}, "pyflarum.flarum.core.forum.Forum": {"tf": 1}}, "df": 6, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 27}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.unstick": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}}, "df": 30}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.unlike": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.unlock": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}}, "df": 27}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.unfollow": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.unhide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.restore": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.unhide": {"tf": 1}}, "df": 6}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.hide": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.flarum.core.users.MyUser.unreadNotificationCount": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 2.23606797749979}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.guidelinesUrl": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.url": {"tf": 1}, "pyflarum.flarum.core.filters.Filter": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.baseUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.apiUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.logoUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.faviconUrl": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.adminUrl": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.url": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.avatarUrl": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 18}}}, "r": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.error_handler.FlarumError": {"tf": 1}, "pyflarum.error_handler.handle_errors": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"tf": 1}}, "df": 3}}}}}}}}}, "i": {"docs": {"pyflarum": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin.canViewWhoTypes": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}, "d": {"docs": {"pyflarum": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadAt": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications.mark_all_as_read": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.isRead": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.mark_as_read": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.markedAllAsReadAt": {"tf": 1}, "pyflarum.session.FlarumUser.mark_all_discussions_as_read": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.mark_all_notifications_as_read": {"tf": 1}}, "df": 11}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.replyTemplate": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.canManageReplyTemplates": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.reply_number": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.reply_to": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.flarum.core.filters.Filter": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.error_handler.handle_errors": {"tf": 1}, "pyflarum.extensions.ExtensionMixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.title": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.url": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.included": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.forum.Forum.get_groups": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.included": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.create": {"tf": 1}, "pyflarum.flarum.core.groups.Group.edit": {"tf": 1}, "pyflarum.flarum.core.groups.Group.delete": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications.mark_all_as_read": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.from_user": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.get_subject": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.mark_as_read": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.post": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.create": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.hide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.restore": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.unhide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.delete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.edit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.ipAddress": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.Post.get_author": {"tf": 1}, "pyflarum.session.FlarumUser.get_forum_data": {"tf": 1}, "pyflarum.session.FlarumUser.mark_all_notifications_as_read": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1.4142135623730951}}, "df": 87}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.7320508075688772}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.session.FlarumUser.get_discussions": {"tf": 1}, "pyflarum.session.FlarumUser.get_posts": {"tf": 1}, "pyflarum.session.FlarumUser.get_users": {"tf": 1}, "pyflarum.session.FlarumUser.get_notifications": {"tf": 1}}, "df": 7}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "s": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.unhide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.restore": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromDiscussion.unhide": {"tf": 1.4142135623730951}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.session.FlarumUser.send_password_reset_email": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.canRename": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}}, "df": 2}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 2.23606797749979}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}}, "df": 6}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 2.23606797749979}, "pyflarum.error_handler.parse_request": {"tf": 1}, "pyflarum.error_handler.handle_errors": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1.7320508075688772}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1.7320508075688772}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1.7320508075688772}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1.7320508075688772}, "pyflarum.session.FlarumUser.__init__": {"tf": 1.7320508075688772}}, "df": 10, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "'": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}}, "df": 19}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"tf": 1}, "pyflarum.session.FlarumSession.api_urls": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.groups.Group.delete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.delete": {"tf": 1}, "pyflarum.session.FlarumUser.remove_user_avatar": {"tf": 1.4142135623730951}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1.7320508075688772}, "pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.version": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}}, "df": 21, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 2.6457513110645907}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin": {"tf": 1}, "pyflarum.flarum.core.forum.Forum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.defaultRoute": {"tf": 1}, "pyflarum.session.FlarumSession.api_urls": {"tf": 1.4142135623730951}}, "df": 9}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.error_handler.parse_request": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.post": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.create": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.hide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.restore": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.unhide": {"tf": 1}}, "df": 39}}, "w": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.data": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.attributes": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.included": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.included": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.preferences": {"tf": 1}}, "df": 8}}}, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Tags.Tag": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}}, "df": 2}}, "h": {"docs": {}, "df": 0, "u": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {}, "df": 0, "'": {"docs": {"pyflarum": {"tf": 2.6457513110645907}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "'": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}}, "df": 27}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.hide": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum": {"tf": 2.449489742783178}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"tf": 1}}, "df": 3, "i": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "k": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 3.7416573867739413}, "pyflarum.custom_types": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin.canViewWhoTypes": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.id": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.contentType": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}}, "df": 7}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 3}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.title": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.title": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.welcomeTitle": {"tf": 1}}, "df": 6}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 2}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin.canViewWhoTypes": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.isHidden": {"tf": 1}}, "df": 3, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.session.FlarumUser.mark_all_discussions_as_read": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.replyTemplate": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.canManageReplyTemplates": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}}, "df": 6}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"1": {"2": {"3": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.flagCount": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.notifications.Notification.new_post_number": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.reply_number": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.notifications.Notification.createdAt": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 5}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum.error_handler.handle_errors": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"tf": 1}, "pyflarum.flarum.core.groups.Group.delete": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications.mark_all_as_read": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.mark_as_read": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.delete": {"tf": 1}, "pyflarum.session.FlarumUser.mark_all_notifications_as_read": {"tf": 1}}, "df": 7}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostedAt": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadAt": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.flarum.core.forum.Forum.showLanguageSelector": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_notifications": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.included": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.included": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 11}}}, "t": {"docs": {}, "df": 0, "'": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumBulkObject.first_link": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.previous_link": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.next_link": {"tf": 1}}, "df": 4}, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "e": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 7}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin.parse_as_command": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin.get_liked_by": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.included": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.get_groups": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.included": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1.4142135623730951}}, "df": 34}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.like": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin.unlike": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin.get_liked_by": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1.7320508075688772}}, "df": 29}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin": {"tf": 1}, "pyflarum.flarum.core.forum.Forum": {"tf": 1}}, "df": 6}}, "f": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.unhide": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1.7320508075688772}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1.7320508075688772}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "n": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1.4142135623730951}}, "df": 6}}, "o": {"docs": {"pyflarum.flarum.core.forum.Forum.logoUrl": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}, "p": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}}, "df": 2}}, "w": {"docs": {"pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}}, "df": 18}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.lock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.isLocked": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.canLock": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.forum.Forum.baseUrl": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "t": {"docs": {"pyflarum": {"tf": 2}, "pyflarum.extensions.ExtensionMixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 2}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 2}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 51}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum": {"tf": 4.242640687119285}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}}, "df": 5}, "d": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.hide": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyflarum": {"tf": 2.449489742783178}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}}, "df": 4}, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 2}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 8}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.error_handler.MissingExtensionWarning": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canViewWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canManageWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canDeleteWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.visibleWarningCount": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}}, "df": 33}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.filters.Filter": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 53}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.flagCount": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "'": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum": {"tf": 2}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canViewWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canManageWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canDeleteWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.canManageReplyTemplates": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin.canViewWhoTypes": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin.isApproved": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.isApproved": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.canApprove": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.canViewFlags": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.isLocked": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.canLock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin.markdown_mdarea": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.isSticky": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.canSticky": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canReply": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canRename": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canDelete": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canHide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.isHidden": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.showLanguageSelector": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.debug": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.allowSignUp": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canViewForum": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canStartDiscussion": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canSearchUsers": {"tf": 1}, "pyflarum.flarum.core.groups.Group.isHidden": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.isRead": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.is_comment": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canEdit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canDelete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canHide": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEdit": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditCredentials": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canEditGroups": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.canDelete": {"tf": 1}}, "df": 38}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.error_handler.parse_request": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.forum.Forum.welcomeTitle": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.welcomeMessage": {"tf": 1.4142135623730951}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.error_handler.parse_request": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 2.23606797749979}}, "df": 1}, "'": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 2.449489742783178}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.ipAddress": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 8}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 2.23606797749979}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.datetime_conversions.flarum_to_datetime": {"tf": 1}, "pyflarum.datetime_conversions.datetime_to_flarum": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1.4142135623730951}}, "df": 10}}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 27}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 8.246211251235321}, "pyflarum.custom_types": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.extensions.admin.MailSettings": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.replyTemplate": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin.isApproved": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromDiscussionMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.lock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin.unlock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.isLocked": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromBulkMixin.canLock": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.stick": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin.unstick": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.isSticky": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromBulkMixin.canSticky": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.follow": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.unfollow": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 2.23606797749979}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromBulkMixin.subscription": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsDiscussionMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuDiscussionMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Merge.MergeDiscussionMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingDiscussionMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Split.SplitDiscussionMixin": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.Discussions": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.hide": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.participantCount": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.createdAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostedAt": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canReply": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canRename": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canDelete": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canHide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.isHidden": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.unhide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 2}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 2}, "pyflarum.flarum.core.filters.Filter": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canStartDiscussion": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.notifications.Notification.get_subject": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromDiscussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.number": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.users.UserFromBulk.discussionCount": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.markedAllAsReadAt": {"tf": 1}, "pyflarum.session.FlarumUser.get_discussion_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_discussions": {"tf": 1}, "pyflarum.session.FlarumUser.mark_all_discussions_as_read": {"tf": 1.4142135623730951}}, "df": 92, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "'": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.canManageReplyTemplates": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.title": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.url": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}}, "df": 7}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.custom_types": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.get_subject": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"tf": 1}}, "df": 4}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum": {"tf": 2.8284271247461903}, "pyflarum.custom_types": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1}}, "df": 4}}}}, "x": {"docs": {"pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyflarum.flarum.core.users.UserFromNotification.displayName": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.data": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.attributes": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.filters.Filter": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.content": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.preferences": {"tf": 1}, "pyflarum.session.FlarumSession.api_urls": {"tf": 1}}, "df": 41, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canDeleteWarnings": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canDelete": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.isHidden": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.delete": {"tf": 1}, "pyflarum.flarum.core.groups.Group.delete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.delete": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canDelete": {"tf": 1}}, "df": 9}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1.7320508075688772}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1.7320508075688772}}, "df": 46}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 2.449489742783178}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}, "f": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1.7320508075688772}}, "df": 18, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.defaultRoute": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.__init__": {"tf": 1.4142135623730951}}, "df": 9}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin.approve": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.forum.Forum.description": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.flarum.core.forum.Forum.debug": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyflarum": {"tf": 5.385164807134504}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.data": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.PreparedDiscussion.to_dict": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussions": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.Discussion.included": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.included": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.to_dict": {"tf": 1}, "pyflarum.flarum.core.groups.Groups": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.to_dict": {"tf": 1}, "pyflarum.flarum.core.posts.Posts": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.Post.get_author": {"tf": 1}, "pyflarum.flarum.core.users.Users": {"tf": 1}, "pyflarum.flarum.core.users.MyUser": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.get_forum_data": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1}}, "df": 42, "'": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "e": {"docs": {"pyflarum.session.FlarumUser.mark_all_discussions_as_read": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.datetime_conversions.flarum_to_datetime": {"tf": 2}, "pyflarum.datetime_conversions.datetime_to_flarum": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.createdAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostedAt": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadAt": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.createdAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.createdAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.editedAt": {"tf": 1}, "pyflarum.flarum.core.users.UserFromBulk.joinTime": {"tf": 1}}, "df": 9}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromNotification.slug": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "%": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "%": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "%": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "%": {"docs": {}, "df": 0, "z": {"docs": {"pyflarum.datetime_conversions.flarum_to_datetime": {"tf": 1}, "pyflarum.datetime_conversions.datetime_to_flarum": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 4.242640687119285}, "pyflarum.datetime_conversions.flarum_to_datetime": {"tf": 1.4142135623730951}, "pyflarum.datetime_conversions.datetime_to_flarum": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.admin.MailSettings": {"tf": 2}, "pyflarum.extensions.admin.AdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1}, "pyflarum.extensions.watch.WatchFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumBulkObject": {"tf": 2.23606797749979}, "pyflarum.flarum.core.BaseFlarumIndividualObject": {"tf": 2}, "pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumIndividualObject.id": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.Discussion.get_posts": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.get_groups": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup": {"tf": 2}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.edit": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.edit": {"tf": 1}, "pyflarum.session.FlarumSession": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.get_forum_data": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1}}, "df": 67, "'": {"docs": {"pyflarum": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.data": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.id": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.attributes": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"tf": 1}}, "df": 6}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 3}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromBulkMixin.get_liked_by": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.get_groups": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.Post.get_author": {"tf": 1}, "pyflarum.session.FlarumUser.get_forum_data": {"tf": 1}, "pyflarum.session.FlarumUser.get_user_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_discussion_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_post_by_id": {"tf": 1}, "pyflarum.session.FlarumUser.get_discussions": {"tf": 1}, "pyflarum.session.FlarumUser.get_posts": {"tf": 1}, "pyflarum.session.FlarumUser.get_users": {"tf": 1}, "pyflarum.session.FlarumUser.get_notifications": {"tf": 1}, "pyflarum.session.FlarumUser.get_groups": {"tf": 1}}, "df": 21}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.flarum.core.notifications.Notification.from_user": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {"pyflarum": {"tf": 2.449489742783178}}, "df": 1, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Likes.LikesExtension": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.flarum.Flarum_Lock.LockExtension": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 2}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1}}, "df": 3, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}, "n": {"docs": {"pyflarum": {"tf": 2}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.get_subject": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1}}, "df": 31, "c": {"docs": {"pyflarum": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "r": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 7}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumSession.__init__": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.__init__": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.get_discussions": {"tf": 1}, "pyflarum.session.FlarumUser.get_posts": {"tf": 1}, "pyflarum.session.FlarumUser.get_users": {"tf": 1}, "pyflarum.session.FlarumUser.get_notifications": {"tf": 1}}, "df": 12}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.session.FlarumSession.api_urls": {"tf": 1}}, "df": 2}}, "s": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.error_handler.handle_errors": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.delete": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.post": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.create": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.hide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.restore": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.unhide": {"tf": 1}}, "df": 12}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum": {"tf": 2.8284271247461903}}, "df": 1}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyflarum": {"tf": 2}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_notifications": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesPostFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerDiscussionNotificationMixin": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications.mark_all_as_read": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.contentType": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.new_post_number": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.reply_number": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.createdAt": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.isRead": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.from_user": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.get_subject": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.mark_as_read": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.unreadNotificationCount": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.newNotificationCount": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.preferences": {"tf": 1}, "pyflarum.session.FlarumUser.get_notifications": {"tf": 1}, "pyflarum.session.FlarumUser.mark_all_notifications_as_read": {"tf": 1}}, "df": 30, "i": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.follow": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.unfollow": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}, "'": {"docs": {"pyflarum.flarum.core.notifications.Notification.content": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 7}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_users": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_posts": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_discussions": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.absolutely_all_notifications": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.ipAddress": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.__init__": {"tf": 1.4142135623730951}}, "df": 16}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 2.8284271247461903}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.change_email": {"tf": 1}}, "df": 9}}, "w": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.follow": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.post": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.create": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.restore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.unhide": {"tf": 1}, "pyflarum.flarum.core.groups.Group.edit": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.new_post_number": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.edit": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.newNotificationCount": {"tf": 1}, "pyflarum.session.FlarumUser.update_user_info": {"tf": 1.7320508075688772}}, "df": 12, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostNumber": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.notifications.Notification.contentType": {"tf": 1}}, "df": 1}}}}, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.flarum.core.posts.PostFromDiscussion.edit": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.session.FlarumUser.update_user_info": {"tf": 1}}, "df": 1}}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumBulkObject.next_link": {"tf": 1}}, "df": 2, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.extensions.absolutely_all.AbsolutelyAllExtension": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}, "pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.BaseFlarumIndividualObject.type": {"tf": 1}, "pyflarum.flarum.core.groups.Group.nameSingular": {"tf": 1}, "pyflarum.flarum.core.groups.Group.namePlural": {"tf": 1}}, "df": 21, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}}, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyflarum.flarum.core.users.UserFromNotification.displayName": {"tf": 1}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.participantCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastReadPostNumber": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1.7320508075688772}, "pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.new_post_number": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.reply_number": {"tf": 1}}, "df": 7, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.flarum.core.posts.PostFromDiscussion.number": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {"pyflarum": {"tf": 2}, "pyflarum.datetime_conversions.flarum_to_datetime": {"tf": 1}, "pyflarum.datetime_conversions.datetime_to_flarum": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 4.123105625617661}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin.get_all_posts_from_discussion": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.Tag.relationships": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.relationships": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.included": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.included": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 14}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.debug": {"tf": 1}}, "df": 3, "r": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.filters.Filter.to_dict": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 33}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 2.449489742783178}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 45}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.unfollow": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.flarum.core.forum.Forum.welcomeTitle": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.welcomeMessage": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}}, "df": 4}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.Discussions": {"tf": 1}, "pyflarum.flarum.core.groups.Groups": {"tf": 1}, "pyflarum.flarum.core.notifications.Notifications": {"tf": 1}, "pyflarum.flarum.core.posts.Posts": {"tf": 1}, "pyflarum.flarum.core.users.Users": {"tf": 1}}, "df": 6, "i": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 5}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 4.123105625617661}, "pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.get_full_data": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.__init__": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.__init__": {"tf": 1.4142135623730951}}, "df": 10}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.admin.AdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsForumMixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsAdminFlarumUserMixin": {"tf": 1}, "pyflarum.extensions.watch.WatchFlarumUserMixin": {"tf": 1}, "pyflarum.flarum.core.forum.Forum": {"tf": 1}, "pyflarum.session.FlarumSession": {"tf": 1}, "pyflarum.session.FlarumUser": {"tf": 1}}, "df": 16, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "l": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.email": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumSession.__init__": {"tf": 1}, "pyflarum.session.FlarumSession.authenticate": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}, "pyflarum.session.FlarumUser.send_password_reset_email": {"tf": 1}, "pyflarum.session.FlarumUser.change_email": {"tf": 1.7320508075688772}}, "df": 11}}, "n": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canManageWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesDiscussionFromBulkMixin.canManageReplyTemplates": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.filters.Filter": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"tf": 1}}, "df": 4}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.commentCount": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.lastPostedAt": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentType": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.flarum.core.notifications.Notifications.mark_all_as_read": {"tf": 1}, "pyflarum.flarum.core.notifications.Notification.mark_as_read": {"tf": 1}, "pyflarum.flarum.core.users.MyUser.markedAllAsReadAt": {"tf": 1}, "pyflarum.session.FlarumUser.mark_all_discussions_as_read": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.mark_all_notifications_as_read": {"tf": 1}}, "df": 5, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin.markdown_mdarea": {"tf": 1}, "pyflarum.flarum.core.discussions.PreparedDiscussion.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PreparedPost.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.content": {"tf": 1}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "'": {"docs": {"pyflarum.extensions.flarum.Malago_Achievements.Achievement": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"pyflarum.error_handler.MissingExtensionError": {"tf": 1}, "pyflarum.error_handler.MissingExtensionWarning": {"tf": 1}}, "df": 2}}, "x": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 45, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 2}, "pyflarum.extensions.ExtensionMixin": {"tf": 1.7320508075688772}, "pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1.7320508075688772}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 46}}}}, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 27}}}}}}, "d": {"docs": {"pyflarum.session.FlarumSession.api_urls": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {"pyflarum.extensions.flarum.Flarum_Markdown.ForumMixin.markdown_mdarea": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum": {"tf": 2}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.included": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.included": {"tf": 1}}, "df": 5, "'": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyflarum.flarum.core.forum.Forum.headerHtml": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {"pyflarum.flarum.core.forum.Forum.themePrimaryColor": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.themeSecondaryColor": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum": {"tf": 1}}, "df": 1, "l": {"docs": {"pyflarum": {"tf": 2.449489742783178}, "pyflarum.error_handler.handle_errors": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.isHidden": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum.flarum.core.filters.Filter": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 1.4142135623730951}}, "df": 45, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.extensions.ExtensionMixin": {"tf": 1.4142135623730951}, "pyflarum.extensions.admin.AdminExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension": {"tf": 1.4142135623730951}}, "df": 18}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.session.FlarumSession.api_urls": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 2}}, "df": 1}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsDiscussionFromNotificationMixin.ignore": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromNotification.hide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.canHide": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.hide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.hide": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.canHide": {"tf": 1}}, "df": 6}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.isHidden": {"tf": 1}, "pyflarum.flarum.core.groups.Group.isHidden": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.hide": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum": {"tf": 2.449489742783178}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1.4142135623730951}, "pyflarum.session.FlarumUser.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension": {"tf": 1}}, "df": 3}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension": {"tf": 1}}, "df": 5}}}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"pyflarum.session.FlarumSession.api_urls": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"pyflarum.flarum.core.forum.Forum.headerHtml": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.footerHtml": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromDiscussion.contentHtml": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyflarum.flarum.core.forum.Forum.defaultRoute": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum": {"tf": 1.7320508075688772}}, "df": 1}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.extensions.admin.AdminExtension.__init__": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.__init__": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.__init__": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.__init__": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.version": {"tf": 1}, "pyflarum.session.FlarumUser.__init__": {"tf": 1}}, "df": 6}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsUserFromBulkMixin.canViewWarnings": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeDiscussionMixin.canViewWhoTypes": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsForumMixin.canViewFlags": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.hide": {"tf": 1}, "pyflarum.flarum.core.forum.Forum.canViewForum": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.ipAddress": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.email": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1}}, "df": 9}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1.7320508075688772}, "pyflarum.session.FlarumSession.api_urls": {"tf": 1}}, "df": 2}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum": {"tf": 4}, "pyflarum.error_handler.parse_request": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.BaseFlarumIndividualObject.included": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.included": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.Discussion.get_first_post": {"tf": 1.4142135623730951}, "pyflarum.flarum.core.forum.Forum.included": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_discussion": {"tf": 1}, "pyflarum.flarum.core.posts.PostFromNotification.get_author": {"tf": 1}, "pyflarum.flarum.core.posts.Post.get_author": {"tf": 1}}, "df": 14, "'": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyflarum.flarum.core.users.UserFromBulk.joinTime": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.session.FlarumSession.api_urls": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "p": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyflarum": {"tf": 1}, "pyflarum.flarum.core.users.UserFromNotification.isEmailConfirmed": {"tf": 1}}, "df": 2}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyflarum.session.FlarumSession.api_urls": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "t": {"docs": {"pyflarum": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyflarum": {"tf": 8.12403840463596}, "pyflarum.extensions.ExtensionMixin": {"tf": 3.4641016151377544}, "pyflarum.extensions.ExtensionMixin.get_dependencies": {"tf": 2}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.admin.AdminExtension": {"tf": 3.4641016151377544}, "pyflarum.extensions.admin.AdminExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension": {"tf": 3.4641016151377544}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.commands.CommandsExtension": {"tf": 3.4641016151377544}, "pyflarum.extensions.commands.CommandsExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension": {"tf": 3.4641016151377544}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension": {"tf": 3.4641016151377544}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension": {"tf": 3.4641016151377544}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension": {"tf": 3.4641016151377544}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension": {"tf": 3.4641016151377544}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension": {"tf": 3.4641016151377544}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension": {"tf": 3.4641016151377544}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension": {"tf": 3.4641016151377544}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension": {"tf": 3.4641016151377544}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension": {"tf": 3.4641016151377544}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension": {"tf": 3.4641016151377544}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension": {"tf": 3.4641016151377544}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension": {"tf": 3.4641016151377544}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.get_dependencies": {"tf": 2}, "pyflarum.extensions.watch.WatchExtension": {"tf": 3.4641016151377544}, "pyflarum.extensions.watch.WatchExtension.get_dependencies": {"tf": 2}}, "df": 46}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"pyflarum.flarum.core.filters.Filter.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "_": {"docs": {"pyflarum": {"tf": 1}}, "df": 1, "_": {"docs": {"pyflarum.extensions.ExtensionMixin.mixin": {"tf": 1}, "pyflarum.extensions.absolutely_all.AbsolutelyAllExtension.mixin": {"tf": 1}, "pyflarum.extensions.admin.AdminExtension.mixin": {"tf": 1}, "pyflarum.extensions.advanced_search.AdvancedSearchExtension.mixin": {"tf": 1}, "pyflarum.extensions.commands.CommandsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ModeratorWarnings.ModeratorWarningsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Askvortsov_ReplyTemplates.ReplyTemplatesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Blomstra_Realtime.RealtimeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Approval.ApprovalExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Flags.FlagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Likes.LikesExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Lock.LockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Markdown.ExampleExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Sticky.StickyExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Subscriptions.SubscriptionsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Suspend.SuspendExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Flarum_Tags.TagsExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_BestAnswer.BestAnswerExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Byobu.ByobuExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Merge.MergeExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_PreventNecrobumping.PreventNecrobumpingExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Spamblock.SpamblockExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_Split.SplitExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UserBio.UserBioExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.FoF_UsernameRequest.UsernameRequestExtension.mixin": {"tf": 1}, "pyflarum.extensions.flarum.Malago_Achievements.AchievementsExtension.mixin": {"tf": 1}, "pyflarum.extensions.watch.WatchExtension.mixin": {"tf": 1}}, "df": 27}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyflarum.flarum.core.BaseFlarumObject.__init__": {"tf": 1}, "pyflarum.flarum.core.groups.PreparedGroup.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"pyflarum.flarum.core.discussions.DiscussionFromBulk.get_author": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_last_posted_user": {"tf": 1}, "pyflarum.flarum.core.discussions.DiscussionFromBulk.get_first_post": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "pipeline": ["trimmer", "stopWordFilter", "stemmer"], "_isPrebuiltIndex": true}